Metadata-Version: 2.4
Name: pylocres
Version: 0.1.3
Summary: Python library for working with Unreal Engine .locres translation files. 
Author-email: stas96111 <stas96111@gmail.com>
License: MIT License
        
        Copyright (c) 2025 stas96111
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/stas96111/pylocres
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# PyLocres
Python library for working with Unreal Engine .locres translation files. 

The library supports all versions of Locres

## Install
```
pip install pylocres
```
or instal from repository

## Locres Usage

```python
    from pylocres import LocresFile, Namespace, Entry, LocresVersion, entry_hash

    # create locrese instance
    locres = LocresFile()

    # read locres file
    locres.read("./path/to/file.locres")

    # iterate over all Namespaces in locres 
    for namespace in locres:
        print(namespace.name) # print namespace name
        # Usually, the standard name is “” (empty text), so 
        # if the name is not displayed, everything is fine.

        # iterate over all Entrys in Namespace
        for entry in namespace:
            print(entry.key) # cf433749-2e... (uuid4 or custom key)
            print(entry.translation) # Hello world!
            print(entry.hash) # 828975897
            # entry.hash - source localization hash (default: English),
            # we can create our own hash if necessary, but it should be
            # replaced only when the problem is in the game itself.
            entry.hash = entry_hash("Hello world!")

            # set a new translation
            entry.translation = "Привіт світ!"

        # create new Entry
        entry = Entry(key, translation, source_hash)
        # add Entry to Namespace
        namespace.add(entry)

    # create new Namespace
    namespace = Namespace("UI")
    # add Namespace to file
    locres.add(namespace)

    # set namespace (default last version is CityHash)   
    locres.version = LocresVersion.CityHash

    # save Locres file
    locres.write("./path/to/file.locres")

    # Done
```

## Locmeta Usage

```python
from pylocres import LocmetaFile, LocmetaVersion

# create locrmeta instance
locmeta = LocmetaFile()

# read locmeta file
locmeta.read("./path/to/file.locres")

print(locmeta.version)
print(locmeta.native_culture) # native language of game (en)
print(locmeta.native_locres) # native language locres file (en/Game.locres)
print(locmeta.compiled_cultures) # All compiled languages (["en", "de", "fr", ...])

locmeta.native_culture = "YOUR_CULTURE"

# write locmeta file
locmeta.write("./path/to/file.locres")

# Done
```
