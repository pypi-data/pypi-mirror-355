name: CI Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.13" ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python with uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Project Dependencies
        run: uv sync --locked --all-extras --dev

      - name: Run Test Suite
        run: uv run --with hypothesis pytest src/tests/ -v --hypothesis-profile ci -n auto
        env:
          OCP_VSCODE_PYTEST: "1"

  examples:
    name: Run Examples
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        python-version: [ "3.13" ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python with uv
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Project Dependencies
        run: uv sync --locked --all-extras

      - name: Run Examples
        run: for f in examples/*/main.py; do echo "Running $f"; uv run python "$f"; done
        env:
          OCP_VSCODE_PYTEST: "1"
