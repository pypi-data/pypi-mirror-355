[project]
name = "pyfake"
version = "0.0.5"
description = "A fake data generator that is pydantic compatible."
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    {name = "Pranesh Mukhopadhyay", email = "praneshmukherjee7@gmail.com"}
]
classifiers = [
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
]
keywords = [
    "pydantic",
    "fake data",
    "data generation",
    "data validation",
    "data modeling",
]
dependencies = [
    "pydantic>=2.0"
]

[project.optional-dependencies]
dev = ["pytest", "black", "ruff"]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true
packages = {find = {}}

[tool.setuptools.package-data]
"pyfake" = ["py.typed"]


[tool.pytest.ini_options]
pythonpath = ["."]

[tool.coverage.run]
branch = true
source = ["pyfake"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "pragma: no cover",
]
omit = [
    "tests/*"
]

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_unused_ignores = true
exclude = ["tests", "scripts"]

[tool.black]
line-length = 88
target-version = ["py310"]  # Match your Python version
exclude = '''
/(
    \.venv
  | build
  | dist
  | coverage\.html
)/
'''