[project]
authors = [
  {name = "Christoph GÃ¶rn", email = "goern@machdenstaat.de"},
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
  "beautifulsoup4>=4.13.4",
  "chromadb>=1.0.9",
  "cyclopts>=3.16.1",
  "docling>=2.32.0",
  "feedparser>=6.0.11",
  "loguru>=0.7.3",
  "pydantic-ai-slim[anthropic,mcp]>=0.2.4",
  "python-dotenv>=1.1.0",
  "requests>=2.32.3",
  "logfire[celery,fastapi,httpx,requests,system-metrics]>=3.16.0",
  "fastmcp>=2.4.0",
  "posthog>=4.0.1",
  "fastapi[standard]>=0.115.9",
  "uvicorn>=0.34.2",
  "hishel>=0.1.2",
  "orjson>=3.10.18",
  "pydantic-settings>=2.9.1",
  "prometheus-fastapi-instrumentator>=7.1.0",
  "celery>=5.5.3",
  "sqlalchemy>=2.0.41",
  "stadt-bonn-oparl-api-client>=1.8.2",
]
description = "Work with OParl Papers (and it's related types)."
dynamic = ["version"]
license = "GPL-3.0-or-later"
name = "stadt-bonn-oparl"
readme = "README.md"
requires-python = ">=3.12"

[project.urls]
Changelog = "https://codeberg.org/machdenstaat/stadt-bonn-oparl/src/branch/main/CHANGELOG.md"
Homepage = "https://machdenstaat.de/"
Issues = "https://codeberg.org/machdenstaat/stadt-bonn-oparl/issues"
Repository = "https://codeberg.org/machdenstaat/stadt-bonn-oparl.git"

[tool.setuptools.packages.find]
where = ["src"] # Look for packages in the src directory

[tool.uv]
package = true

[[tool.uv.index]]
explicit = true
name = "codeberg"
publish-url = "https://codeberg.org/api/packages/machdenstaat/pypi"
url = "https://codeberg.org/api/packages/machdenstaat/pypi"

[dependency-groups]
dev = [
  "flower>=2.0.1",
  "ipykernel>=6.29.5",
  "jupyter>=1.1.1",
  "matplotlib>=3.10.3",
  "mypy>=1.15.0",
  "pytest>=8.3.5",
  "pytest-asyncio>=0.26.0",
  "pytest-cov>=6.1.1",
  "ruff>=0.11.11",
  "seaborn>=0.13.2",
  "wordcloud>=1.9.4",
]

[project.scripts]
oparl = "stadt_bonn_oparl.cli:app.meta"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

indent-width = 4
line-length = 128

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = []
select = ["E4", "E7", "E9", "F"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
docstring-code-format = false
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.mypy]
plugins = "pydantic.mypy"

[tool.logfire]
project_name = "stadt-bonn-oparl"

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "uv-dynamic-versioning"]

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.wheel]
packages = ["src/stadt_bonn_oparl"]

[tool.hatch.build.targets.sdist]
include = [
  "src",
  "tests",
  "notebooks",
  "docs",
]

[tool.uv-dynamic-versioning]
fallback-version = "1.8.5"
style = "pep440"
vcs = "git"

[tool.pytest.ini_options]
addopts = "-ra -q --cov=stadt_bonn_oparl --cov-report=html --cov-report=xml"
asyncio_default_fixture_loop_scope = "function"
minversion = "8.0"
testpaths = [
  "tests",
]

[tool.pylint.format]
max-line-length = 128
