name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: pip install uv

    - name: Get uv cache dir
      id: uv-cache
      run: echo "dir=$(uv cache dir)" >> $GITHUB_OUTPUT

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.uv-cache.outputs.dir }}
        key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ matrix.python-version }}-

    - name: Install Codespell
      run: pip install codespell

    - name: Run Codespell
      run: codespell --config .codespellrc

    - name: check lock file for inconsistencies
      run: uv lock --check

    - name: Install dependencies base
      run: uv sync

    - name: Install dependencies extras
      run: uv pip install ".[hub,dev,docs]"

    - name: Lint Check
      run: ./scripts/lint_check.sh

    - name: Format Check
      run: ./scripts/format_check.sh

    - name: Type Check
      run: ./scripts/type_check.sh

    - name: Build Site
      run: ./scripts/build_mkdocs.sh

  ## TODO: uncomment this when we have integration tests working
  # integration:
  #   runs-on: integration
  #   timeout-minutes: 30
  #   environment: NearAI CI
  #   steps:

  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v2
  #     with:
  #       driver: docker

  #   # TODO: remove this step, in order to build the child images
  #   # we need to have the base image already built
  #   - name: Build nearai_base Image
  #     run: docker compose -f .docker/compose-e2e.yml build nearai_base
    
  #   - name: Build Docker Images
  #     run: docker compose -f .docker/compose-e2e.yml build
  #     env:
  #       NEARAICI_SIGNATURE: ${{ secrets.NEARAICI_SIGNATURE }}

  #   - name: Start Docker Compose
  #     run: docker compose -f .docker/compose-e2e.yml up -d --wait
  #     env:
  #       SINGLESTORE_LICENSE: ${{ secrets.SINGLESTORE_LICENSE }}

  #   - name: Exec Integration Tests
  #     run: |
  #       docker exec docker-ci-1 uv run pytest -m integration ./e2e/
    
  #   - name: Stop Docker Compose
  #     run: docker compose -f .docker/compose-e2e.yml down
    
  #   - name: Docker Compose Logs
  #     if: ${{ always() }}
  #     run: docker compose -f .docker/compose-e2e.yml logs