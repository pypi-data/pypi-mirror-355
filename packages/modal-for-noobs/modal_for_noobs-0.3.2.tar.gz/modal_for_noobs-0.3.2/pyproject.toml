[project]
name = "modal-for-noobs"
version = "0.3.2"
description = "ðŸš€ Async-first, idiot-proof Gradio deployment CLI for Modal"
authors = [{ name = "Arthur Souza Rodrigues", email = "arthrod@umich.edu" }]
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
dependencies = [
    "security==1.3.1",
    "loguru>=0.7.2",
    "click>=8.1.7",
    "uvloop>=0.21.0",
    "unkey-py>=0.6.2",
    "python-dotenv>=1.0.0",
    "modal>=1.0.3",
    "gradio>=5.33.0",
    "fastapi>=0.115.12",
    "rich>=14.0.0",
    "pyyaml>=6.0.2",
    "huggingface-hub>=0.32.4",
    "typer>=0.16.0",
    "httpx>=0.27.2",
    "markdown2>=2.4.0",
    "uvicorn>=0.34.3",
    "jinja2>=3.1.0",
    "toml>=0.10.2",
    "python-slugify>=8.0.0",
    "questionary>=2.0.0",
    "typing-inspection>=0.4.1",
]

[project.urls]
Repository = "https://github.com/arthrod/modal-for-noobs"
Issues = "https://github.com/arthrod/modal-for-noobs/issues"

[project.scripts]
modal-for-noobs = "modal_for_noobs.cli:main"

[dependency-groups]
test = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-asyncio>=0.25.2",
    "pytest-mock>=3.14.0",
    "pytest-sugar>=1.0.0",
    "pytest-xdist>=3.5.0",
    "pytest-timeout>=2.2.0",
    "pytest-html>=4.1.1",
    "twine>=5.0.0",
    "safety>=3.0.0",
]
dev = [
    "pytest-watcher>=0.4.3",
    "ipython>=8.31.0",
    "pre-commit>=4.0.1",
    "nox>=2025.2.9",
    "nox-uv>=0.2.1",
    "typer>=0.15.1",
    "rich>=13.9.4",
]
lint = [
    "ruff>=0.9.2",
    "mypy>=1.14.1",
    "pyrefly>=0.16.1",
    "types-click",
    "bandit[toml]>=1.7.5",
]

[tool.uv]
default-groups = ["test", "dev", "lint"]

[tool.ruff]
include = ["pyproject.toml", "src/**/*.py", "scripts/**/*.py"]
line-length = 140
fix = true
target-version = "py311"
exclude = [
    "build",
    "dist",
    "*.egg-info",
    "src/modal_for_noobs/templates/*/deployment_template.py",
    "src/modal_for_noobs/templates/marimo/deployment_template.py",
    "src/modal_for_noobs/templates/optimized/deployment_template.py",
    "src/modal_for_noobs/templates/minimum/deployment_template.py",
    "src/modal_for_noobs/templates/gradio-jupyter/deployment_template.py",
]

[tool.ruff.lint]
fixable = ["UP", "I", "D"]
ignore = [
    "ERA001",
    "TRY300",
    "TRY401",
    "G202",
    "G004",
    "ISC001",
    "W191",
    "COM812",
    "W292",
    "C408",
    "COM819",
    "E731",
    "RET503",
    "RUF012",
    "S311",
    "SIM108",
    "SIM300",
    "T201",
    "TRY003",
    "TRY301",
    "W293",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "D200",
    "D205",
    "D400",
    "D401",
]
select = [
    "A",
    "ASYNC",
    "B",
    "BLE",
    "C4",
    "COM",
    "DTZ",
    "E",
    "ERA",
    "EXE",
    "F",
    "FLY",
    "G",
    "I",
    "ICN",
    "ISC",
    "LOG",
    "PERF",
    "PIE",
    "PLC",
    "PLE",
    "PLW",
    "PT",
    "PTH",
    "RET",
    "RUF",
    "S",
    "SIM",
    "T",
    "TRY",
    "UP",
    "W",
    "D",
]
unfixable = ["B"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S", "D"]
"src/tests/*" = ["S", "D"]
"__init__.py" = ["D"]

[tool.ruff.lint.isort]
known-first-party = ["modal_for_noobs"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"
docstring-code-format = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/modal_for_noobs"]

[tool.hatch.build]
include = ["LICENSE", "README.md", "src/modal_for_noobs"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = [
    "B104",
    "B603",
    "B607",
    "B404",
    "B110",
] # Allow binding to all interfaces, subprocess calls, and try-except-pass

[tool.pytest.ini_options]
addopts = ["-v", "--no-header"]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"
python_files = ["test_*.py"]
testpaths = ["src/tests"]

[tool.coverage.report]
fail_under = 10
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.coverage.run]
omit = [
    "src/tests/*",
    "*/venv/*",
    "*/virtualenv/*",
    "*/.tox/*",
    "*/migrations/*",
    "manage_keys.py",
    "setup_project.py",
    "render_templates.py",
    "book/*",
    "noxfile.py",
    "*/__init__.py",
    "src/modal_for_noobs/huggingface.py",
    "src/modal_for_noobs/modal_deploy.py",
]

[tool.mypy]
disallow_incomplete_defs = false
disallow_untyped_defs = false
strict = false
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["src/tests/test_notebooks.py"]

[tool.pyrefly]
# Project structure
project_includes = ["src"]
project_excludes = [
    "**/.[!/.]*",
    "**/*venv/**",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
]
search_path = ["src"]

# Python environment
python_platform = "linux"
python_version = "3.11"
python_interpreter = ".venv/bin/python"

# Type checking behavior
untyped_def_behavior = "error"
ignore_errors_in_generated_code = true
use_untyped_imports = true
