{
    "TypeError": "TypeError means you tried to use the wrong type. For example, adding a string to a number.\nTip: Check your types or use `int()` or `str()` to convert.",

    "KeyError": "KeyError means that key doesn't exist in the dictionary.\nTip: Use `.get()` to avoid crashing.",

    "IndexError": "IndexError means you're trying to access a list element that doesn’t exist.\nTip: Check your indexes and list size.",

    "NameError": "NameError means you're using a variable that hasn't been defined yet.\nTip: Check for typos or missing assignments.",

    "ValueError": "You gave a value that doesn't work in this situation. Try checking that it's the right kind of value and makes sense.",
    
    "ZeroDivisionError": "You tried to divide by zero, which isn't allowed in math. Make sure the bottom number isn't zero before dividing.",
    
    "IndentationError": "Your code isn't lined up properly. Python uses spaces to understand what belongs together. Try fixing the indent (spaces or tabs).",
    
    "SyntaxError": "Your code doesn't follow Python's rules — maybe you missed a colon, parenthesis, or quote. Double-check the line it shows you.",
    
    "AssertionError": "An `assert` test failed. That means something you expected to be true wasn’t. Check the condition you're testing.",
    
    "AttributeError": "You're trying to use something (like a function or variable) that doesn’t exist for this type of object. Check the name and spelling.",
    
    "EOFError": "Python expected more input, but it hit the end. If you're using `input()`, make sure there's actually something being typed in.",
    
    "FloatingPointError": "A math problem with decimals went wrong. This usually happens in complex calculations. Try using simpler numbers or the `decimal` module.",
    
    "GeneratorExit": "A generator was closed. This usually happens behind the scenes — you don’t need to worry unless you're making custom generators.",
    
    "ImportError": "Python couldn’t import what you asked for. Check if the name is spelled right and if the thing you're importing actually exists.",
    
    "ModuleNotFoundError": "Python can’t find the module you're trying to import. You may need to install it with pip, or check the name.",
    
    "KeyboardInterrupt": "You stopped the program manually, probably by pressing Ctrl+C. That’s totally fine!",
    
    "MemoryError": "Your program used too much memory (RAM). Try working with smaller data or handling it in chunks.",
    
    "NotImplementedError": "This part of the code hasn’t been finished yet. Someone used `NotImplementedError` as a placeholder.",
    
    "OSError": "There was a problem talking to the computer’s operating system — usually with files or paths. Check the file location and permissions.",
    
    "OverflowError": "A number got way too big for Python to handle. Try using smaller values or breaking up the calculation.",
    
    "PythonFinalizationError": "Something ran at the very end of your program, but Python had already shut things down. This is rare — usually safe to ignore.",
    
    "RecursionError": "Your function called itself too many times! Try using a loop instead of recursion, or rethink how it's written.",
    
    "ReferenceError": "You tried to use something that had already been deleted. This usually only happens in advanced code with weak references.",
    
    "RuntimeError": "Something went wrong while running the program, but Python doesn't have a more specific error for it. Check the error message for clues.",
    
    "StopIteration": "A loop ran out of things to go through. This is normal when using `for` loops or `next()`. It just means you're done.",
    
    "StopAsyncIteration": "Like `StopIteration`, but in async code. It just means your async loop finished normally.",
    
    "FileNotFoundError": "Python couldn't find the file you asked for. Make sure the file name and path are correct.",
    
    "FileExistsError": "You're trying to create something that already exists, like a file or folder. Use a different name or remove the old one.",
    
    "PermissionError": "Python wasn’t allowed to do what you asked — maybe writing to a file or folder. Try running with permissions or changing the location.",
    
    "TimeoutError": "Something took too long and Python gave up. You may need to speed things up or increase the time limit."
}