// objective.metadata exceptions file, see its document
// for information on how to update this file.
{
 "definitions": {
  "typed_enum": {
   "SCStreamFrameInfo": { "type": "@", "type_name": "NSString" }
  },
  "enum": {
   "RP_REPORTING_SUMMARY_EVENT": { "value": 1 },
   "RP_REPORTING_END_REASON_SUMMARY_EVENT": { "value": 2 },
   "RP_REPORTING_SCREENSHOT_EVENT": { "value": 3 }
  },
  "classes": {
   "SCStream": {
    "methods": [
     {
      "args": {
       "3": {
        "type_modifier": "o"
       }
      },
      "class_method": false,
      "selector": "addStreamOutput:type:sampleHandlerQueue:error:"
     },
     {
      "args": {
       "2": {
        "type_modifier": "o"
       }
      },
      "class_method": false,
      "selector": "removeStreamOutput:type:error:"
     }
    ]
   },
   "SCStreamConfiguration": {
    "methods": [
     {
      "class_method": false,
      "retval": {},
      "selector": "backgroundColor"
     },
     {
      "args": {
       "0": {}
      },
      "class_method": false,
      "selector": "setBackgroundColor:"
     },
     {
      "class_method": false,
      "retval": {},
      "selector": "colorMatrix"
     },
     {
      "args": {
       "0": {}
      },
      "class_method": false,
      "selector": "setColorMatrix:"
     },
     {
      "class_method": false,
      "retval": {},
      "selector": "colorSpaceName"
     },
     {
      "args": {
       "0": {}
      },
      "class_method": false,
      "selector": "setColorSpaceName:"
     }
    ],
    "properties": [
     {
      "attributes": [
       "assign",
       "nonatomic"
      ],
      "name": "backgroundColor"
     },
     {
      "attributes": [
       "assign",
       "nonatomic"
      ],
      "name": "colorMatrix"
     },
     {
      "attributes": [
       "assign",
       "nonatomic"
      ],
      "name": "colorSpaceName"
     }
    ]
   }
  },
  "formal_protocols": {
   "SCStreamOutput": {
    "methods": [
     {
      "args": {
       "1": {}
      },
      "class_method": false,
      "selector": "stream:didOutputSampleBuffer:ofType:"
     }
    ]
   }
  },
  "functions": {},
  "informal_protocols": {}
 }
}
