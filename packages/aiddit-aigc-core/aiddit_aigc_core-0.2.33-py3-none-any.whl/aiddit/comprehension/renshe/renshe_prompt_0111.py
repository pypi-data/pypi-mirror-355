import json
from image_article_comprehension.aiddit.model import claude, claude35


def renshe_unique(note_summary_list):
    prompt = f'''
我会给你一个小红书账号的历史创作数据，包括选题和选题描述，你需要依次帮我完成以下任务：
- 提取该账号下的内容创作的创作灵魂：
    - 创作灵魂指的是该账号基于内容创作层面上来说，最具有代表性的、最核心的、最重要的、最具有特色的部分；
    - 创作灵魂指的是能够区别与其他同品类创作账号的核心特征；
    - 创作灵魂之间不能有重复的部分；
    - 创作灵魂是指所有内容创作中的共性点，是所有内容创作的核心；
    - 创作灵魂的结果请输出1～3个，但是一定要精准，能够代表该账号的创作内核；
- 总结出内容创作涉及到的的主要内容品类/分类：
    - 品类/分类指的是该账号下的内容创作涉及到的主要品类/分类；
    - 用言简意赅的词语输出品类；
    - 品类不是枚举所有涉及到的品类，而是所有的内容都可以归类到的几个主要品类；
    - 品类需要结合`创作灵魂`，是创作灵魂的具体体现；
- 提取该账号下的内容创作的选题必要点；
    - 每一条内容都对应着一个选题，请从历史选题数据中提取出选题的必要点；
    - 选题必要点是指所有选题中的共性点，是所有选题的共同亮点；
    - 选题必要点是为了后续的创作，保持账号的人设一致性，用以产生新的选题也需要包含的必要点；
    - 选题必要点可以是风格、创作形式等，但是一定是账号下必备的；
- 提取的结果的要求：
    - 请只描述客观事实，不要加入任何'主观'评价性语言；
    - 要求用词精准，不要使用模糊、不确定的词语；
    - 语言表达上注意不要使用倒装句、长句、复杂句，尽量使用陈述句、简单句；

- 请直接输出JSON格式，不要有除了JSON格式之外的其他输出；
- direct output in JSONObject with keys:
    - 创作灵魂 (list[str])
    - 内容品类 (list[str])
    - 选题必要点 (list[str])

下面是历史创作数据，请忽略历史创作数据中涉及到商品推广、广告植入的内容：

{json.dumps(note_summary_list, ensure_ascii=False, indent=4)}

'''.strip()

    print(prompt)
    ans = claude(prompt)
    return ans


def renshe_mode(renshe_xuanti_unique, note_summary_list):

    prompt = f'''
你是一名小红书的创作大师，拥有以下能力：
1. 对创作模式有着敏锐的洞察力，能够快速发现账号的创作模式；
2. 拥有丰富的创作经验；
3. 对创作模式有着独特的见解；能够从第一性原理出发，发现账号的选题创作模式；

下面我会给你一个小红书的创作人设，以及其历史创作数据，包括选题和选题描述，你需要完成以下任务： 
- 每个选题模式有区分度，即该模式下的选题与其他模式下的选题有明显的区别；
- 选题模式是对选题的创作进行分析，即该账号基于人设产生选题的模式，基于人设结合了什么亮点才产生了符合人设的选题创作；
- 选题模式是需要有代表性的，如果历史选题中的该选题模式样本比较小，则不适合提取选题模式；
- 挖掘该账号的选题创作模式，账号的选题创作模式应该是一个或多个，每一个创作模式由以下结构组成：
    - 选题模式
        - 模式是指账号的选题创作模式；
        - 模式应该'xxxx模式'的表达形式
    - 选题创作方式
        - 选题创作方式是指基于该选题模式下，如何进行选题创作；
    - 选题模式要点
        - 模式要点指的是：基于选题模式、账号人设，需要什么样的要点才能产生该选题模式下的好选题；
    - 选题模式灵感
        - 如果要产生该模式下的选题，可以从哪些角度进行创作；
        - 请结合该选题模式下的历史选题进行分析；
    - 历史优质选题
        - 优质选题是指在该选题模式下，最具有代表性、最核心的、最重要的、最具有特色的选题；
        - 请输出不超过5个优质选题；按照与选题模式的关联度倒序排序；
    - 历史优质选题的亮点
        - 亮点是指在该选题模式下，最具有代表性、最核心的、最重要的、最具有特色的选题的亮点；
        - 亮点是该选题模式下的共性点，是所有该选题模式下的优质选题的共同亮点；
        - 请基于历史创作数据进行适度的总结；表达清楚、言之有物；
    - 符合选题模式的所有内容id
        - 请输出符合该选题模式的所有内容id；
        - 请输出所有内容id，不要遗漏；
要求如下：
- 提取的结果的要求：
    - 请只描述客观事实，不要加入任何'主观'评价性语言；
    - 要求用词精准，不要使用模糊、不确定的词语；
    - 语言表达上注意不要使用倒装句、长句、复杂句，尽量使用陈述句、简单句；
- 请直接输出JSON格式，不要有除了JSON格式之外的其他输出；
- direct output in JSONObject with keys:
    - modes (list[]) with each mode containing:
        - 选题模式 (str)
        - 选题创作方式 (str)
        - 选题模式要点 (dict)
        - 选题模式灵感 (dict)
        - 历史优质选题 (list[str])
        - 历史优质选题的亮点 (dict)
        - 符合选题模式的所有内容id (list[str])

下面是人设数据：
创作灵魂：
{json.dumps(renshe_xuanti_unique.get("创作灵魂"), ensure_ascii=False, indent=4)}

创作的内容品类：
{json.dumps(renshe_xuanti_unique.get("内容品类"), ensure_ascii=False, indent=4)}

选题必要点：
{json.dumps(renshe_xuanti_unique.get("选题必要点"), ensure_ascii=False, indent=4)}

接下来是历史创作数据，请忽略历史创作数据中涉及到商品推广、广告植入的内容：
{json.dumps(note_summary_list, ensure_ascii=False, indent=4)}
'''.strip()

    print(prompt)
    ans = claude(prompt)
    return ans


def renshe_script_by_xuanti_mode(renshe_xuanti_unique, comprehension_note_list, renshe_xuanti_mode):
    xuanti_and_key_point_list = []

    for note in comprehension_note_list:
        xuanti_and_key_point_list.append({
            '帖子选题': note.get("xuanti_result"),
            '帖子亮点': note.get("key_point")
        })

    prompt = f'''   
以下是创作者的人设：
"""
{json.dumps(renshe_xuanti_unique, ensure_ascii=False, indent=4)}
"""

选题模式：
{renshe_xuanti_mode.get("选题模式")}
选题创作方式:
{renshe_xuanti_mode.get("选题创作方式")}


以下是创作者的在该选题模式下的历史帖子：
"""
{xuanti_and_key_point_list}
"""

我希望你作为一位内容创作专家，根据创作者的人设和历史帖子信息，提取出一套完整的创作模式指南。这个指南应该详细到让一个完全不了解该创作者的人，也能按照指南创作出与原创作者风格高度一致的内容。
注意：一句话选题描述 + 创作指南 = 一篇帖子
所以，创作指南不需要包含选题的建议，因为选题是给定好的；

创作者思维是从整体到细节分层思考的，所以，请你模拟创作者从整体到细节分层输出创作指南；
请你基于历史数据，以选题为核心点，思考创作者的创作模式，并输出创作指南：
1. 图集/标题/正文关系：基于选题，如何选择合适的三要素关系（图集、标题、正文）
  - 根据历史数据，三要素关系分为几种模式？
  每种模式下：
  - 具体关系描述：图集、标题、正文如何协作，完成选题的表达？
  - 适用的选题特点是什么？
  - 具体的选题例子是什么？（1-3个）
  - 具体案例
2. 图集模式：基于选题，如何安排图集？
  - 根据历史数据，图集分为几种模式？
  每种模式下：
  - 具体模式描述：图集如何安排？
  - 具体细节是什么？（比如封面如何选取、图集分段逻辑、具体如何分段、...等）
    - 细节不局限于上面给出的例子，应当尽可能全面；
    - 尽量完整地列出所有细节，达到可复刻的程度；
  - 每种模式适用的选题特点是什么？
  - 具体的选题例子是什么？（1-3个）
  - 具体案例
3. 正文模式：基于选题，如何安排正文？
  - 根据历史数据，正文分为几种模式？
  每种模式下：
  - 具体模式描述：正文如何安排？
  - 具体细节是什么？尽量详细，达到可复刻的程度；
  - 每种模式适用的选题特点是什么？
  - 具体的选题例子是什么？（1-3个）
  - 具体案例
4. 标题模式：基于选题，如何安排标题？
  - 根据历史数据，标题分为几种模式？
  每种模式下：
  - 具体模式描述：标题如何安排？
  - 具体细节是什么？尽量详细，达到可复刻的程度；
  - 每种模式适用的选题特点是什么？
  - 具体的选题例子是什么？（1-3个）
  - 具体案例

要求：
- 尽可能全地输出所有模式，按模式重要程度排序，不要遗漏；
- 具体细节，应当包含人设特点的具象化，达到可复刻的程度；
- 输出尽可能详细，不要泛泛而谈，8000字以上；
- 输出为JSON格式，不要包含任何其他说明性文字；
- output in JSON format with keys:
  - `图集/标题/正文关系`(list of dict)
  - `图集模式`(list of dict)
  - `正文模式`(list of dict)
  - `标题模式`(list of dict)

        '''.strip()

    print(prompt)
    ans = claude35(prompt)
    return ans
