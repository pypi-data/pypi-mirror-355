import json
import aiddit.model.dsr3 as dsr3
import aiddit.model.google_genai as google_genai
import aiddit.model.chat as chat


def renshe_unique(note_summary_list):
    prompt = f'''
我会给你一个小红书账号的历史创作数据，包括选题和选题描述，你需要依次帮我完成以下任务：
- 提取该账号下的内容创作的创作灵魂：
    - 创作灵魂指的是该账号基于内容创作层面上来说，最具有代表性的、最核心的、最重要的、最具有特色的部分；
    - 创作灵魂指的是能够区别与其他同品类创作账号的核心特征；
    - 创作灵魂之间不能有重复的部分；
    - 创作灵魂是指所有内容创作中的共性点，是所有内容创作的核心；
    - 创作灵魂的结果请输出1～3个，但是一定要精准，能够代表该账号的创作内核；
- 总结出内容创作涉及到的的主要内容品类/分类：
    - 品类/分类指的是该账号下的内容创作涉及到的主要品类/分类；
    - 用言简意赅的词语输出品类；
    - 品类不是枚举所有涉及到的品类，而是所有的内容都可以归类到的几个主要品类；
    - 品类需要结合`创作灵魂`，是创作灵魂的具体体现；
- 提取该账号下的内容创作的选题必要点；
    - 每一条内容都对应着一个选题，请从历史选题数据中提取出选题的必要点；
    - 选题必要点是指所有选题中的共性点，是所有选题的共同亮点；
    - 选题必要点是为了后续的创作，保持账号的人设一致性，用以产生新的选题也需要包含的必要点；
    - 选题必要点可以是风格、创作形式等，但是一定是账号下必备的；
- 提取该账号下的人设必要信息：
    - 人设必要信息是指该账号下所有内容创作中的人设信息；
- 提取的结果的要求：
    - 请只描述客观事实，不要加入任何'主观'评价性语言；
    - 要求用词精准，不要使用模糊、不确定的词语；
    - 语言表达上注意不要使用倒装句、长句、复杂句，尽量使用陈述句、简单句；

- 请直接输出JSON格式，不要有除了JSON格式之外的其他输出；
- direct output in JSONObject with keys:
    - 创作灵魂 (list[str])
    - 内容品类 (list[str])
    - 选题必要点 (list[str])
    - 人设必要信息 (dict)

下面是历史创作数据，请忽略历史创作数据中涉及到商品推广、广告植入的内容：

{json.dumps(note_summary_list, ensure_ascii=False, indent=4)}

'''.strip()

    print(prompt)
    # reason, ans = dsr3.deepseek_r3_stream(prompt)
    ans = google_genai.google_genai(prompt)
    return ans


def renshe_xuanti_mode(renshe_xuanti_unique, note_summary_list):
    # for s in note_summary_list:
    #     del s["内容亮点"]

    prompt = f'''
你是一名小红书的创作大师，拥有以下能力：
1. 对创作模式有着敏锐的洞察力，能够快速发现账号的创作模式；
2. 拥有丰富的创作经验；
3. 对创作模式有着独特的见解和抽象能力；能够从第一性原理出发，发现账号的选题创作模式；

下面我会给你一个小红书的创作人设，以及其历史创作数据，包括选题和选题描述，你需要完成以下任务： 
- 每个选题模式有区分度，即该模式下的选题模式与其他模式下的选题模式有明显的区别；
    - 选题模式之间不能出现交集、重复，每一种选题模式应该都是独立其他模式的存在；
    - 请基于选题真正的`核心`进行选题模式的区分，不要浮于表面，发现真正创作的内核；
    - 只有基于`核心`才能真正区分选题模式；
    - 选题模式要能体现账号的人设；
    - 模式的包含度可以适当宽泛，只要能涵盖真正的选题核心即可；输出的选题模式请控制在3个以内；
- 选题模式是对选题的创作进行分析，即该账号基于人设产生选题的模式，基于人设结合了什么亮点才产生了符合人设的选题创作；
- 选题模式是需要有代表性的，如果历史选题中的该选题模式样本比较小，则不适合提取选题模式；
- 挖掘该账号的选题创作模式，账号的选题创作模式应该是一个或多个，每一个创作模式由以下结构组成：
    - 选题模式
        - 模式是指账号的选题创作模式；
        - 模式应该'xxxx模式'的表达形式
    - 选题创作方式
        - 选题创作方式是指基于该选题模式下，如何进行选题创作；
    - 选题模式要点
        - 模式要点指的是：基于选题模式、账号人设，需要什么样的要点才能产生该选题模式下的好选题；
    - 选题模式灵感
        - 如果要产生该模式下的选题，可以从哪些角度进行创作；
        - 请结合该选题模式下的历史选题进行分析；
    - 历史优质选题
        - 优质选题是指在该选题模式下，最具有代表性、最核心的、最重要的、最具有特色的选题；
        - 请输出不超过5个优质选题；按照与选题模式的关联度倒序排序；
    - 历史优质选题的亮点
        - 亮点是指在该选题模式下，最具有代表性、最核心的、最重要的、最具有特色的选题的亮点；
        - 亮点是该选题模式下的共性点，是所有该选题模式下的优质选题的共同亮点；
        - 请基于历史创作数据进行适度的总结；表达清楚、言之有物；
    - 选题模式占比 (str)
        - 统计该选题模式在历史选题中的占比，要求输出范围为 1%～100%；

要求如下：
- 提取的结果的要求：
    - 请只描述客观事实，不要加入任何'主观'评价性语言；
    - 要求用词精准，不要使用模糊、不确定的词语；
    - 语言表达上注意不要使用倒装句、长句、复杂句，尽量使用陈述句、简单句；
- 请直接输出JSON格式，不要有除了JSON格式之外的其他输出；
- direct output in JSONObject with keys:
    - modes (list[]) with each mode containing:
        - 选题模式 (str)
        - 选题创作方式 (str)
        - 选题模式要点 (dict)
        - 选题模式灵感 (dict)
        - 历史优质选题 (list[str])
        - 来源帖子id (list[str])
        - 选题模式占比 (str)
        - 历史优质选题的亮点 (dict)

下面是人设数据：
创作灵魂：
{json.dumps(renshe_xuanti_unique.get("创作灵魂"), ensure_ascii=False, indent=4)}

创作的内容品类：
{json.dumps(renshe_xuanti_unique.get("内容品类"), ensure_ascii=False, indent=4)}

选题必要点：
{json.dumps(renshe_xuanti_unique.get("选题必要点"), ensure_ascii=False, indent=4)}

接下来是历史创作数据，请忽略历史创作数据中涉及到商品推广、广告植入的内容：
{json.dumps(note_summary_list, ensure_ascii=False, indent=4)}
'''.strip()

    print(prompt)
    # ans = google_genai.google_genai(prompt, model_name="gemini-2.0-flash")
    # ans = chat.gpt4o(prompt)
    ans = chat.claude(prompt)
    return ans


def script_summary(comprehension_note_list, summary_count=1000):
    script_list = []

    for note in comprehension_note_list[:summary_count]:
        script = note.get("script", {})
        script["图片"]["图集"].pop("图集图片列表", None)

        script["帖子id"] = note.get("note_info").get("channel_content_id")
        script_list.append(script)

    prompt = f'''   
你是一名小红书的创作大师，拥有以下能力：
1. 对创作模式有着敏锐的洞察力，能够快速发现账号的创作模式；
2. 拥有丰富的创作经验；
3. 对创作模式有着独特的见解；能够从第一性原理出发，发现账号的脚本创作模式；
4. 拥有极高的内容总结、抽象能力；

以下是创作者的在该选题模式下的历史创作脚本：
"""
{json.dumps(script_list, ensure_ascii=False, indent=4)}
"""

请基于历史脚本，完成以下任务：
- 对小红书的每个模块（标题、正文、封面、图集）的创作进行模式上的总结；
- 请做到尽可能详细，信息量丰富；

- 每个模块由以下结构组成：
    - 通用信息(dict)
        - 通用信息是指在进行模块创作时，该模块的一些通用信息；
        - 通用信息的结果明确具体，不要有模糊不清的信息，必须要有完整的信息量；
        - 区分可选和必须两个维度
    - 创作模式(dict)
        - 来源帖子id(list[str])
            - 必须包含该创作模式来源于哪些帖子；
        - 模式的总结应该包含其主要的创作方式，以及该环节和其他模块之间的关系等信息；
            - 除了创作方式和模块关系外，你还需要适当补充其他信息；
            - 比如模式特点、模式适用场景等等；
            - 你提供的信息越丰富，越有助于其他人理解该模块的创作方式；
        - 每一个模块的创作模式应该是一个或多个，每一个创作模式由以下结构组成：
            - 创作模式名:xxx模式（key） ： 创作模式详情（dict）
        - 每一个模式要重点从怎么表达呈现内容主题的角度出发去总结其创作方式；
        - 每个模块必须包含一种模式；
        - 封面创作模式中的每一种模式的总结要求如下：
            - 封面是如何选取的？为什么选取这张图片作为封面？
            - 封面是独立生成的，还是由图集中的图片选取的、以及选取图片后的加工方式等等；
            - 封面视觉呈现的方式(dict)
            - 图片表现方式(dict)
                - 图片上运用了什么方式/技巧去呈现内容，从而增加内容的表现力？等等
                - 图片的风格、色调、构图、角度、透视等等
            - 图片中人物表现方式(dict)
                - 呈现方式：一些具体例子，你需要根据实际的图片选择合适的词语，包括但不限于以下几种：
                    - 人物大小：人小景大，人景结合，特写，全身像，半身像等等
                    - 人物位置：居中、黄金分割、边缘、前景、背景等等
                    - 人物姿态：站立、坐着、行走、奔跑、背对镜头、侧身、凝视远方、与他人互动等等
                    - 其他：人物表情、人物动作、人物特点、人物与其他元素的关系等等
                - 人物特点：人物的性别、年龄、肤色、发型、穿着等信息
                - 人物与其他元素的关系：人物与场景、人物与物品、人物与其他人物等等
                - 人物在封面中出现的占比、频率等信息
                - 以及其他关于人物的补充信息
        - 图集创作模式中的每一种模式的总结要求如下：
            - 图集的数量规划(dict)：图集的数量是多少？为什么是这么多？
            - 图片之间的排序规则(dict)：图集的内容是怎么构建的？为什么这么构建？
            - 图集视觉呈现的方式(dict)
            - 图片表现方式(dict)
                - 图片上运用了什么方式/技巧去呈现内容，从而增加内容的表现力？等等
                - 图片的风格、色调、构图、角度、透视等等
            - 图片中人物表现方式(dict)
                - 呈现方式：一些具体例子，你需要根据实际的图片选择合适的词语，包括但不限于以下几种：
                    - 人物大小：人小景大，人景结合，特写，全身像，半身像等等
                    - 人物位置：居中、黄金分割、边缘、前景、背景等等
                    - 人物姿态：站立、坐着、行走、奔跑、背对镜头、侧身、凝视远方、与他人互动等等
                    - 其他：人物表情、人物动作、人物特点、人物与其他元素的关系等等
                - 人物特点：人物的性别、年龄、肤色、发型、穿着等信息
                - 人物与其他元素的关系：人物与场景、人物与物品、人物与其他人物等等
                - 人物在图集中出现的占比、频率等信息
                - 以及其他关于人物的补充信息
            - 与其他模块的关系(dict)
        - 总结要求如下：
            - 每一种模式都有自己独特的创作方式，且该创作方式与其他模式有明显的区别；
            - 模式与模式之间不能有交集、重复；且区分度明显，如果两种模式的区分度不大，考虑合并在一起；
            - 每一个创作模式必须从3个以上的帖子中进行总结；
            - 每一个创作模式之间必须有区分度，即该模式下的创作模式与其他模式下的创作模式有明显的区别；

要求如下：
- 请只描述客观事实，不要加入任何'主观'评价性语言；
- 涉及到数量的信息，一定要有明确的数字；
- 要求用词精准，不要使用模糊、不确定的词语；    
- 结果尽可能详细，信息量丰富；
- 请直接输出JSON格式，不要有除了JSON格式之外的其他输出；
- direct output in JSONObject with keys: dict表示对象类型，list表示数组类型
    - 标题
        - 通用信息(dict)
            - 可选(dict)
            - 必须(dict)
        - 创作模式(dict)
            - xx模式(dict)
            - xx模式(dict)
    - 正文(dict)
        - 通用信息(dict)
            - 可选(dict)
            - 必须(dict)
        - 创作模式(dict)
            - xx模式(dict)
            - xx模式(dict)
    - 封面(dict)
        - 通用信息(dict)
            - 可选(dict)
            - 必须(dict)
        - 创作模式(dict)
            - xx模式(dict)
            - xx模式(dict)
    - 图集(dict)
        - 通用信息(dict)
            - 可选(dict)
            - 必须(dict)
        - 创作模式(dict)
            - xx模式(dict)
            - xx模式(dict)
'''.strip()

    print(prompt)
    # reason, ans = deepseek_r3_stream(prompt)
    try:
        ans = google_genai.google_genai(prompt, max_output_tokens=10 * 1000)
        print(ans)
        return ans
    except google_genai.MaxTokenException:
        new_summary_count = (summary_count - 3) if summary_count < len(comprehension_note_list) else (
                len(comprehension_note_list) - 3)
        return script_summary(comprehension_note_list, new_summary_count)
    except Exception as e:
        raise e
