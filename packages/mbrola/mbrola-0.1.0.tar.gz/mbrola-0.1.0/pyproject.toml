[project]
name = "mbrola"
dynamic = ["version"]
description = 'A Python front-end for the MBROLA speech synthesizer'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Gonzalo Garcia-Castro", email = "gongarciacastro@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "pytest>=8.3.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
Documentation = "https://github.com/gongcastro/pymbrola#readme"
Issues = "https://github.com/gongcastro/pymbrola/issues"
Source = "https://github.com/gongcastro/pymbrola"

[tool.hatch.version]
path = "mbrola/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
  "pytest",
  "pytest-cov",
  "pytest-watcher"
]
[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11"]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:mbrola tests}"

[tool.coverage.run]
source_pkgs = ["mbrola", "tests"]
branch = true
parallel = true
omit = [
  "mbrola/__about__.py",
]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
  "/voices"
]

[tool.pytest.ini_options]
addopts = "--maxfail=1 --cov=testing_demo"

[tool.coverage.paths]
pymbrola = ["mbrola", "*/pymbrola/mbrola"]
tests = ["tests", "*/pymbrola/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "pylint>=3.2.7",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
]
