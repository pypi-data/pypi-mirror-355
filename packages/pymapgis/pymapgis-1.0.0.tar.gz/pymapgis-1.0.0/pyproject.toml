[tool.poetry]
name = "pymapgis"
version = "1.0.0"
description = "Enterprise-Grade Modern GIS Toolkit for Python - Revolutionizing geospatial workflows with built-in data sources, intelligent caching, cloud-native processing, and enterprise authentication"
authors = ["Nicholas Karlson <nicholaskarlson@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/pymapgis/core"
repository = "https://github.com/pymapgis/core"
documentation = "https://pymapgis.github.io/core/"
keywords = ["gis", "geospatial", "mapping", "census", "visualization", "geography", "enterprise", "cloud", "authentication", "supply-chain", "analytics"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Manufacturing",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Database",
    "Topic :: Security",
    "Typing :: Typed",
    "Framework :: FastAPI",
    "Framework :: AsyncIO",
]
packages = [{ include = "pymapgis" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"

# Core geospatial dependencies
geopandas = "^1.1"
pandas = "^2.3.0"
numpy = "^1.24.0"
shapely = ">=2.0.0"
pyproj = "^3.4.0"

# Data I/O and formats
fsspec = "^2025.5"
pyarrow = "^14.0.0"
xarray = "^2023.6.0"
zarr = "^2.17.0"
netcdf4 = "^1.6.0"
rioxarray = "^0.14.0"

# Web and API framework
fastapi = ">=0.100.0"
uvicorn = {extras = ["standard"], version = ">=0.23.0"}
pydantic = "^2.0.0"
pydantic-settings = "^2.9.1"
aiohttp = "^3.9.0"

# Visualization and mapping
leafmap = "^0.47.2"
matplotlib = "^3.7.0"
seaborn = "^0.13.2"
plotly = "^5.15.0"
pydeck = "^0.8.0"

# CLI and utilities
typer = {extras = ["all"], version = ">=0.9.0"}
requests-cache = "^1.2.1"
toml = "^0.10.2"

# Network and geospatial analysis
networkx = "^3.0"
mercantile = "^1.2.0"
mapbox-vector-tile = "^2.1.0"

# Geospatial data formats
geoarrow-pyarrow = "^0.2.0"
geoarrow-types = "^0.3.0"
rio-tiler = ">=6.0,<7.0"

# Authentication and security (optional)
pyjwt = {version = "^2.8.0", optional = true}
bcrypt = {version = ">=4.0.0,<5.0.0", optional = true}

# Cloud storage (optional)
boto3 = {version = "^1.35.0", optional = true}
google-cloud-storage = {version = "^2.10.0", optional = true}
azure-storage-blob = {version = "^12.19.0", optional = true}

# Streaming and messaging (optional)
kafka-python = {version = ">=2.0.2,<3.0.0", optional = true}
paho-mqtt = {version = ">=1.6.1,<2.0.0", optional = true}
redis = {version = ">=5.0.0,<6.0.0", optional = true}

# Point cloud processing (optional)
pdal = {version = ">=3.4.0,<4.0.0", optional = true}

# Machine learning (optional)
scikit-learn = {version = "^1.3.0", optional = true}

# Additional web frameworks (optional)
streamlit = {version = "^1.25.0", optional = true}
folium = {version = "^0.14.0", optional = true}

[tool.poetry.extras]
enterprise = ["pyjwt", "bcrypt", "redis"]
cloud = ["boto3", "google-cloud-storage", "azure-storage-blob"]
streaming = ["kafka-python", "paho-mqtt"]
pointcloud = ["pdal"]
ml = ["scikit-learn"]
web = ["streamlit", "folium"]
all = ["pyjwt", "bcrypt", "redis", "boto3", "google-cloud-storage", "azure-storage-blob", "kafka-python", "paho-mqtt", "pdal", "scikit-learn", "streamlit", "folium"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.4"
pytest-cov = "^6.1"
pytest-xdist = "^3.3.1"
pytest-asyncio = "^0.21.1"
ruff = "^0.11"
black = "^25.1"
mypy = "^1.16"
pre-commit = "^4.2"
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.0"
mkdocs-jupyter = "^0.24.6"

[tool.poetry.scripts]
pymapgis = "pymapgis.cli:main"
pmg = "pymapgis.cli:main"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"