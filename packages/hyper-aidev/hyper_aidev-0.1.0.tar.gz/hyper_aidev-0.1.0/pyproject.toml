[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "hyper-aidev" # <--- CHANGED TO 'hyper-aidev'
version = "0.1.0"
authors = [
  { name="3rror_py", email="your.email@example.com" },
]
description = "A Python library to simplify model learning, training, and creation for powerful AI models across the ML lifecycle."
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: General",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Visualization",
]
keywords = [
    "ai", "machine-learning", "deep-learning", "fine-tuning", "transformers",
    "huggingface", "nlp", "model-training", "data-preprocessing", "feature-engineering",
    "evaluation", "explainability", "model-deployment", "utility", "knowledge-distillation",
    "hyperparameter-optimization", "model-compression", "quantization", "pruning",
    "memory-efficiency", "debugging", "profiling", "checkpointing", "resource-monitoring",
    "model-ensembling", "data-drift", "gradient-accumulation", "tensorboard", "callbacks",
    "model-card", "experiment-management", "rule-based-ai", "adaptive-prediction",
    "learning-rate-scheduling", "autopilot-ai", "auto-ml-dl", "resource-aware-training",
    "data-profiling", "data-quality", "model-monitoring", "production-ml",
    "human-in-the-loop", "active-learning", "feedback-systems", "iterative-ai",
    "mlops"
]

dependencies = [
    "transformers>=4.30.0",
    "datasets>=2.0.0",
    "torch>=1.10.0",
    "accelerate>=0.20.0",
    "scikit-learn>=1.0.0",
    "numpy>=1.20.0",
    "pandas>=1.0.0",
    "matplotlib>=3.0.0",
    "seaborn>=0.11.0",
    "nltk>=3.6.0",
    "optuna>=3.0.0",
    "psutil>=5.0.0",
    "pynvml>=11.0.0",
    "scipy>=1.5.0",
    "tqdm>=4.0.0",
    "tensorboard>=2.5.0",
]

[project.optional-dependencies]
peft = [
    "peft>=0.5.0",
]
optimization = [
    "onnx>=1.10.0",
    "onnxruntime>=1.8.0",
    "optimum>=1.0.0",
]
automl = [
    "xgboost",
]
xai = [
    "lime",
    "shap",
]
api-serving = [
    "fastapi",
    "uvicorn[standard]",
]
dev = [
    "pytest>=7.0",
    "flake8",
    "black",
]
