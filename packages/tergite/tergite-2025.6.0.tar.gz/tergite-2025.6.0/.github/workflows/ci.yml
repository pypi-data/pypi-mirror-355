name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run'
        required: true
        default: 'e2e'
        type: choice
        options:
          - e2e
          - release
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install OpenBlas for scipy if no wheels
        run: sudo apt-get install -y libopenblas-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python --version
          pip install ."[test,dev]"
      - name: Lint
        if: ${{ vars.SHOULD_LINT == 'true' }}
        run: black tergite --check
      - name: Run tests
        run: pytest tests/

  e2e:
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/heads/main') || 
      startsWith(github.ref, 'refs/tags/') || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'e2e')
    needs: tests
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install OpenBlas for scipy if no wheels
        run: sudo apt-get install -y libopenblas-dev
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
        with:
          version: 'latest'
      - name: Run end-to-end-tests
        env:
          DEBUG: ${{ vars.DEBUG || 'false' }}
          FRONTEND_REPO: https://github.com/${{ github.repository_owner }}/tergite-frontend.git
          BACKEND_REPO: https://github.com/${{ github.repository_owner }}/tergite-backend.git
          BACKEND_BRANCH: ${{ github.ref_name }}
          FRONTEND_BRANCH: ${{ github.ref_name }}
        run: ./e2e_test.sh

  release:
    name: Release
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/tags/') || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'release')
    needs: tests
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE
          python -m pip install --upgrade pip
          python --version
          pip install .
          pip install build twine
      - name: Deploy docs
        if: ${{ vars.SHOULD_PUBLISH_DOCS == 'true' }}
        run: |
          source .venv/bin/activate
          mkdocs gh-deploy --force
      - name: Build
        run: python -m build
      - name: Publish to Test pypi
        if: ${{ vars.SHOULD_PUBLISH_TO_STAGING == 'true' }}
        run: |
          twine upload --skip-existing \
            -u __token__ \
            -p ${{ secrets.TEST_PYPI_API_TOKEN }} \
            -r https://test.pypi.org/legacy/ dist/*;
      - name: Publish to pypi
        if: ${{ vars.SHOULD_PUBLISH_TO_PROD == 'true' }}
        run: |
          twine upload --skip-existing \
            -u __token__ \
            -p ${{ secrets.PYPI_API_TOKEN }} dist/*;
