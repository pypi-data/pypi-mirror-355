{"version":3,"file":"paginator.bundle.js","mappings":"ufASO,I,EAAMA,EAAb,WAKI,WAAYC,I,4FAAO,CAAD,QAEdC,KAAKD,KAAOA,EAGZC,KAAKC,MAAQC,IAAAA,gBAAoBF,KAAKD,KAAMI,EAAAA,IAE5CH,KAAKI,a,QAZb,O,EAAA,E,EAAA,yBAkBI,WACIJ,KAAKD,KAAKM,iBAAiB,SAAUL,KAAKM,SAASC,KAAKP,OACxDA,KAAKD,KAAKM,iBAAiB,SAAUL,KAAKM,SAASC,KAAKP,OACxDA,KAAKD,KAAKM,iBAAiB,QAASL,KAAKQ,QAAQD,KAAKP,SArB9D,sBA4BI,SAASS,GACLA,EAAEC,iBACFV,KAAKW,aA9Bb,qBAqCI,SAAQF,GACJA,EAAEC,iBACED,EAAEG,OAAOC,QAAQC,MACjBd,KAAKW,SAASF,EAAEG,OAAOC,QAAQC,QAxC3C,sBA+CI,WAAmC,IAA1BA,EAAyB,uDAAlBd,KAAKC,MAAMc,MACvBC,OAAOC,SAAWC,GAAAA,CAAIF,OAAOC,UAAUE,UAAUnB,KAAKC,MAAMmB,KAAMN,M,uEAhD1E,M,EAsDIO,EAAAA,G,knBAAYC,SAAQ,SAAAvB,GAAI,OAAI,IAAID,EAAUC","sources":["webpack://django-rijkshuisstijl/./rijkshuisstijl/js/components/paginator/paginator.js"],"sourcesContent":["import BEM from 'bem.js';\nimport URI from 'urijs';\nimport {BLOCK_INPUT, PAGINATORS} from './constants';\n\n\n/**\n * Contains logic for making the paginator work with existing GET params.\n * @class\n */\nexport class Paginator {\n    /**\n     * Constructor method.\n     * @param {HTMLFormElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLFormElement} */\n        this.node = node;\n\n        /** @type {HTMLInputElement} */\n        this.input = BEM.getChildBEMNode(this.node, BLOCK_INPUT);\n\n        this.bindEvents();\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        this.node.addEventListener('submit', this.onChange.bind(this));\n        this.node.addEventListener('change', this.onChange.bind(this));\n        this.node.addEventListener('click', this.onClick.bind(this));\n    }\n\n    /**\n     * Callback for change event on this.node.\n     * @param {Event} e\n     */\n    onChange(e) {\n        e.preventDefault();\n        this.navigate();\n    }\n\n    /**\n     * Callback for click event on this.node.\n     * @param {Event} e\n     */\n    onClick(e) {\n        e.preventDefault();\n        if (e.target.dataset.page) {\n            this.navigate(e.target.dataset.page);\n        }\n    }\n\n    /**\n     * Navigate to the page specified in this.input.\n     */\n    navigate(page = this.input.value) {\n        window.location = URI(window.location).setSearch(this.input.name, page);\n    }\n}\n\n\n// Start!\n[...PAGINATORS].forEach(node => new Paginator(node));\n"],"names":["Paginator","node","this","input","BEM","BLOCK_INPUT","bindEvents","addEventListener","onChange","bind","onClick","e","preventDefault","navigate","target","dataset","page","value","window","location","URI","setSearch","name","PAGINATORS","forEach"],"sourceRoot":""}