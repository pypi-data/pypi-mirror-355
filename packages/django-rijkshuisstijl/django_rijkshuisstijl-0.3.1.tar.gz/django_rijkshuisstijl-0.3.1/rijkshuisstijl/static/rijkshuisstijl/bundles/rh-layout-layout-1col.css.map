{"version":3,"file":"rh-layout-layout-1col.css","mappings":"AAoBA,WACE,oBAIA,kBADA,gBAFA,iEACA,kPAEA,CAGF,WACE,oBAIA,kBADA,gBAFA,8DACA,yOAEA,CAGF,WACE,oBAIA,kBADA,gBAFA,gEACA,+OAEA,CAGF,WACE,uBAIA,kBADA,gBAFA,8DACA,yOAEA,CAGF,WACE,uBAIA,kBADA,gBAFA,2DACA,gOAEA,CAGF,WACE,uBAIA,kBADA,gBAFA,6DACA,sOAEA,CAGF,WACI,2BACA,kBACA,gBACA,mJChCA,yBCpCF,uCAEI,mCACA,gCAIJ,yCACE,kD","sources":["webpack://django-rijkshuisstijl/./rijkshuisstijl/sass/settings/_typography.scss","webpack://django-rijkshuisstijl/./node_modules/microscope-sass/lib/_responsive.scss","webpack://django-rijkshuisstijl/./rijkshuisstijl/sass/components/layout/layout-1col.scss"],"sourcesContent":["$fa-font-path: '../fonts/';\n\n/**\nWebfonts\n\nDe webfonts zijn versies van de rijkshuisstijl lettertypen, die speciaal gemaakt zijn voor een optimale weergave op het\nbeeldscherm. Zowel de Rijksoverheid Sans als de Serif zijn als webfont beschikbaar.\n */\n\n\n/**\nSans Web of Sans Serif?\n\nSans Web wordt toegepast voor langere (lees-)teksten. De Serif Web is vooral interessant voor de afwisseling in\nbijvoorbeeld digitale magazines, in combinatie met de Sans Web. De webfont versies kunnen als regular, italic of bold\nversie toegpast worden.\n\n- De Rijksoverheidswebfonts mogen, net als het rijkslogo, uitsluitend voor Rijksoverheidspublicaties ingezet worden.\n- Het is aan te bevelen ook een fall-back systeemfont te bepalen voor het geval het webfont niet getoond kan worden.\n */\n@font-face {\n  font-family: 'RO Sans';\n  src: url('/static/rijkshuisstijl/fonts/RO-SansWebText-Regular.eot');\n  src: url('/static/rijkshuisstijl/fonts/RO-SansWebText-Regular.eot?#iefix') format('eot'), url('/static/rijkshuisstijl/fonts/RO-SansWebText-Regular.ttf') format('truetype'), url('/static/rijkshuisstijl/fonts/RO-SansWebText-Regular.woff') format('woff');\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'RO Sans';\n  src: url('/static/rijkshuisstijl/fonts/RO-SansWebText-Bold.eot');\n  src: url('/static/rijkshuisstijl/fonts/RO-SansWebText-Bold.eot?#iefix') format('eot'), url('/static/rijkshuisstijl/fonts/RO-SansWebText-Bold.ttf') format('truetype'), url('/static/rijkshuisstijl/fonts/RO-SansWebText-Bold.woff') format('woff');\n  font-weight: bold;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'RO Sans';\n  src: url('/static/rijkshuisstijl/fonts/RO-SansWebText-Italic.eot');\n  src: url('/static/rijkshuisstijl/fonts/RO-SansWebText-Italic.eot?#iefix') format('eot'), url('/static/rijkshuisstijl/fonts/RO-SansWebText-Italic.ttf') format('truetype'), url('/static/rijkshuisstijl/fonts/RO-SansWebText-Italic.woff') format('woff');\n  font-weight: normal;\n  font-style: italic;\n}\n\n@font-face {\n  font-family: 'RO Serif';\n  src: url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Regular.eot');\n  src: url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Regular.eot?#iefix') format('eot'), url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Regular.ttf') format('truetype'), url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Regular.woff') format('woff');\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'RO Serif';\n  src: url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Bold.eot');\n  src: url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Bold.eot?#iefix') format('eot'), url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Bold.ttf') format('truetype'), url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Bold.woff') format('woff');\n  font-weight: bold;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'RO Serif';\n  src: url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Italic.eot');\n  src: url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Italic.eot?#iefix') format('eot'), url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Italic.ttf') format('truetype'), url('/static/rijkshuisstijl/fonts/RO-SerifWeb-Italic.woff') format('woff');\n  font-weight: normal;\n  font-style: italic;\n}\n\n@font-face {\n    font-family: \"ro-icons-1.11\";\n    font-style: normal;\n    font-weight: bold;\n    src: url(\"/static/rijkshuisstijl/fonts/ro-icons-1.11.woff\") format(\"opentype\"),url(\"/static/rijkshuisstijl/fonts/ro-icons-1.11.ttf\") format(\"truetype\")\n}\n\n$typography-default-hover-link: false!default;\n$typography-size-border: 2px!default;\n\n$typography-font-family-base: 'RO Sans', Calibri, sans-serif!default;\n\n$typography-font-size-text-mobile: 16/16*1rem!default;\n$typography-font-size-text-tablet: 16/16*1rem!default;\n$typography-font-size-text-laptop: 16/16*1rem!default;\n$typography-font-size-text-desktop: 18/16*1rem!default;\n\n$typography-font-size-text-big-mobile: 20/16*1rem!default;\n$typography-font-size-text-big-tablet: 21/16*1rem!default;\n$typography-font-size-text-big-laptop: 21/16*1rem!default;\n$typography-font-size-text-big-desktop: 24/16*1rem!default;\n\n$typography-font-size-text-small-mobile: 12/16*1rem!default;\n$typography-font-size-text-small-tablet: 12/16*1rem!default;\n$typography-font-size-text-small-laptop: 12/16*1rem!default;\n$typography-font-size-text-small-desktop: 14/16*1rem!default;\n\n$typography-font-size-h1-mobile: 26/16*1rem!default;\n$typography-font-size-h1-tablet: 28/16*1rem!default;\n$typography-font-size-h1-laptop: 28/16*1rem!default;\n$typography-font-size-h1-desktop: 32/16*1rem!default;\n\n$typography-font-size-h2-mobile: 21/16*1rem!default;\n$typography-font-size-h2-tablet: 21/16*1rem!default;\n$typography-font-size-h2-laptop: 21/16*1rem!default;\n$typography-font-size-h2-desktop: 24/16*1rem!default;\n\n$typography-font-size-h3-mobile: 18/16*1rem!default;\n$typography-font-size-h3-tablet: 18/16*1rem!default;\n$typography-font-size-h3-laptop: 18/16*1rem!default;\n$typography-font-size-h3-desktop: 20/16*1rem!default;\n\n$typography-font-size-h4-mobile: 16/16*1rem!default;\n$typography-font-size-h4-tablet: 16/16*1rem!default;\n$typography-font-size-h4-laptop: 16/16*1rem!default;\n$typography-font-size-h4-desktop: 18/16*1rem!default;\n\n$typography-font-size-h5-mobile: $typography-font-size-text-mobile!default;\n$typography-font-size-h5-tablet: $typography-font-size-text-tablet!default;\n$typography-font-size-h5-laptop: $typography-font-size-text-laptop!default;\n$typography-font-size-h5-desktop: $typography-font-size-text-desktop!default;\n\n$typography-font-size-h6-mobile: $typography-font-size-text-mobile!default;\n$typography-font-size-h6-tablet: $typography-font-size-text-tablet!default;\n$typography-font-size-h6-laptop: $typography-font-size-text-laptop!default;\n$typography-font-size-h6-desktop: $typography-font-size-text-desktop!default;\n\n\n$typography-font-weight-text: 400!default;\n$typography-font-weight-h: 700!default;\n\n\n$typography-line-height-text-mobile: 22/16!default;\n$typography-line-height-text-tablet: 22/16!default;\n$typography-line-height-text-laptop: 26/16!default;\n$typography-line-height-text-desktop: 29/19!default;\n\n$typography-line-height-text-big-mobile: 26/20!default;\n$typography-line-height-text-big-tablet: 32/21!default;\n$typography-line-height-text-big-laptop: 32/21!default;\n$typography-line-height-text-big-desktop: 36/24!default;\n\n$typography-line-height-h1-mobile: 30/26!default;\n$typography-line-height-h1-tablet: 32/28!default;\n$typography-line-height-h1-laptop: 32/28!default;\n$typography-line-height-h1-desktop: 36/32!default;\n\n$typography-line-height-h2-mobile: 26/21!default;\n$typography-line-height-h2-tablet: 26/21!default;\n$typography-line-height-h2-laptop: 26/21!default;\n$typography-line-height-h2-desktop: 29/24!default;\n\n$typography-line-height-h3-mobile: 26/18!default;\n$typography-line-height-h3-tablet: 26/18!default;\n$typography-line-height-h3-laptop: 26/18!default;\n$typography-line-height-h3-desktop: 29/20!default;\n\n$typography-line-height-h4-mobile: 26/16!default;\n$typography-line-height-h4-tablet: 26/16!default;\n$typography-line-height-h4-laptop: 26/16!default;\n$typography-line-height-h4-desktop: 29/18!default;\n\n\n$typography-margin-base: .8125rem!default;\n$typography-margin-h: 0!default;\n\n$typography-margin-h1-mobile: 0px 0px .7692em!default;\n$typography-margin-h1-tablet: 0px 0px .7692em!default;\n$typography-margin-h1-laptop: 0px 0px 1em!default;\n$typography-margin-h1-desktop: 0px 0px 1em!default;\n\n$typography-margin-h2-mobile: .952em 0 .2em!default;\n$typography-margin-h2-tablet: .952em 0 .2em!default;\n$typography-margin-h2-laptop: 2em 0 .2em!default;\n$typography-margin-h2-desktop: 2em 0 .2em!default;\n\n$typography-margin-h3-mobile: 0px 0px 0px!default;\n$typography-margin-h3-tablet: 0px 0px 0px!default;\n$typography-margin-h3-laptop: 0px 0px 0px!default;\n$typography-margin-h3-desktop: 0px 0px 0px!default;\n\n$typography-margin-h4-mobile: 0px 0px 60px!default;\n$typography-margin-h4-tablet: 0px 0px 60px!default;\n$typography-margin-h4-laptop: 0px 0px 60px!default;\n$typography-margin-h4-desktop: 0px 0px 60px!default;\n\n\n$typography-margin-property-h: margin!default;\n\n\n$typography-padding-table: 0!default;\n","////\n/// Microscope(-sass) responsive library.\n/// @group responsive\n////\n\n/// @name Import responsive library.\n/// @example @import '~microscope-sass/lib/responsive';\n\n@import 'util';\n\n\n///\n$breakpoint-mobile-s: 320px !default;\n///\n$breakpoint-mobile-m: 375px !default;\n///\n$breakpoint-mobile-l: 425px !default;\n\n///\n$breakpoint-tablet: 768px !default;\n\n///\n$breakpoint-laptop: 992px !default;\n///\n$breakpoint-desktop: 1200px !default;\n\n///\n$responsive-default-media: all !default;\n\n\n/// Wraps content block in a media query based on `$min`, `$max` and `$media`.\n/// If either $min and/or $max is set to null (default) the specific expression is not set.\n///\n/// @param {number (with unit)} $min [null] - Minimal screen width.\n/// @param {number (with unit)} $max [null] - Maximum screen width.\n/// @param {string} $media [$responsive-default-media] - Media (e.g. all, screen or print).\n/// @content Rules to apply when screen size meets condition.\n@mixin breakpoint($min: null, $max: null, $media: $responsive-default-media) {\n\n  @if $min and not $max {\n    @media #{$media} and (min-width: $min) {\n      @content;\n    }\n  }\n\n  @if not $min and $max {\n    @media #{$media} and (max-width: $max) {\n      @content;\n    }\n  }\n\n  @if $min and $max {\n    @media #{$media} and (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n\n/// Applies specific value to all `$properties` based on active breakpoint.\n/// Requires at least, `$value-mobile` and `$value-tablet` to be set.\n/// If any value is the same as the previous, or set to null (default), no media query is generated and styling relies\n/// on inheritance of the previous breakpoint.\n///\n/// @param {list | string} $properties - One or more properties to set.\n/// @param {string} $value-mobile - The mobile value.\n/// @param {string} $value-tablet - The tablet value.\n/// @param {string} $value-laptop [null] - The laptop value.\n/// @param {string} $value-desktop [null] - The desktop value.\n/// @param {string} $media [$responsive-default-media] - Media (e.g. all, screen or print).\n@mixin responsive($properties, $value-mobile, $value-tablet, $value-laptop: null, $value-desktop: null, $media: $responsive-default-media) {\n  @include properties($properties, $value-mobile);\n\n  @if $value-tablet and $value-tablet != $value-mobile {\n    @include tablet {\n      @include properties($properties, $value-tablet);\n    }\n  }\n\n  @if $value-laptop and $value-laptop != $value-tablet {\n    @include laptop {\n      @include properties($properties, $value-laptop);\n    }\n  }\n\n  @if $value-desktop and $value-desktop != $value-laptop {\n    @include desktop {\n      @include properties($properties, $value-desktop);\n    }\n  }\n}\n\n\n/// Wraps content block in a media query matching screen sizes smaller than `$breakpoint-tablet` (mobile).\n///\n/// @param {string} $media [$responsive-default-media] - Media (e.g. all, screen or print).\n/// @content Rules to apply when screen size meets condition.\n@mixin mobile-only($media: $responsive-default-media) {\n  @include breakpoint($max: $breakpoint-tablet - 1px, $media: $media) {\n    @content;\n  }\n}\n\n\n/// Wraps content block in a media query matching screen sizes larger or equal than `$breakpoint-tablet`.\n///\n/// @param {boolean} $only [false] - If true, adds max-width expression to media query preventing inheritance by larger\n/// breakpoints.\n/// @param {string} $media [$responsive-default-media] - Media (e.g. all, screen or print).\n/// @content Rules to apply when screen size meets condition.\n@mixin tablet($only: false, $media: $responsive-default-media) {\n  @if $only == false {\n    @include breakpoint($breakpoint-tablet, $media: $media) {\n      @content;\n    }\n  } @else {\n    @include breakpoint($breakpoint-tablet, $breakpoint-laptop - 1px, $media: $media) {\n      @content;\n    }\n  }\n}\n\n\n/// Wraps content block in a media query matching screen sizes larger or equal than `$breakpoint-laptop`.\n///\n/// @param {boolean} $only [false] - If true, adds max-width expression to media query preventing inheritance by larger\n/// breakpoints.\n/// @param {string} $media [$responsive-default-media] - Media (e.g. all, screen or print).\n/// @content Rules to apply when screen size meets condition.\n@mixin laptop($only: false, $media: $responsive-default-media) {\n  @if $only == false {\n    @include breakpoint($breakpoint-laptop, $media: $media) {\n      @content;\n    }\n  } @else {\n    @include breakpoint($breakpoint-laptop, $breakpoint-desktop - 1px, $media: $media) {\n      @content;\n    }\n  }\n}\n\n\n/// Wraps content block in a media query matching screen sizes larger or equal than `$breakpoint-desktop`.\n///\n/// @param {string} $media [$responsive-default-media] - Media (e.g. all, screen or print).\n/// @content Rules to apply when screen size meets condition.\n@mixin desktop($media: $responsive-default-media) {\n  @include breakpoint($breakpoint-desktop, $media: $media) {\n    @content;\n  }\n}\n\n\n/// Hides element (`display: none;`) by default, only showing it on mobile screen sizes.\n///\n/// @param {string} $display [block] - Display mode used when visible.\n/// @content Rules to apply when screen size meets condition.\n@mixin show-on-mobile($display: block) {\n  display: none;\n  @include mobile-only {\n    display: $display;\n  }\n}\n\n\n/// Hides element (`display: none;`) by default, only showing it on tablet screen sizes.\n///\n/// @param {string} $display [block] - Display mode used when visible.\n/// @param {boolean} $only [false] - If true, adds max-width expression to media query preventing inheritance by larger\n/// breakpoints.\n/// @content Rules to apply when screen size meets condition.\n@mixin show-on-tablet($display: block, $only: false) {\n  display: none;\n\n  @include tablet($only) {\n    display: $display;\n  }\n}\n\n\n/// Hides element (`display: none;`) by default, only showing it on laptop screen sizes.\n///\n/// @param {string} $display [block] - Display mode used when visible.\n/// @param {boolean} $only [false] - If true, adds max-width expression to media query preventing inheritance by larger\n/// breakpoints.\n/// @content Rules to apply when screen size meets condition.\n@mixin show-on-laptop($display: block, $only: false) {\n  display: none;\n\n  @include laptop($only) {\n    display: $display;\n  }\n}\n\n\n/// Hides element (`display: none;`) by default, only showing it on desktop screen sizes.\n///\n/// @param {string} $display [block] - Display mode used when visible.\n/// @content Rules to apply when screen size meets condition.\n@mixin show-on-desktop($display: block) {\n  display: none;\n\n  @include desktop($only) {\n    display: $display;\n  }\n}\n\n\n/// Shows element by default, only hiding it (`display: none;`) on mobile screen sizes.\n///\n/// @param {string} $display [block] - Display mode used when visible.\n/// @content Rules to apply when screen size meets condition.\n@mixin hide-on-mobile($display: block) {\n  display: $display;\n  @include mobile-only {\n    display: none;\n  }\n}\n\n\n/// Shows element by default, only hiding it (`display: none;`) on tablet screen sizes.\n///\n/// @param {string} $display [block] - Display mode used when visible.\n/// @param {boolean} $only [false] - If true, adds max-width expression to media query preventing inheritance by larger\n/// breakpoints.\n/// @content Rules to apply when screen size meets condition.\n@mixin hide-on-tablet($display: block, $only: false) {\n  display: $display;\n\n  @include tablet($only) {\n    display: none;\n  }\n}\n\n\n/// Shows element by default, only hiding it (`display: none;`) on laptop screen sizes.\n///\n/// @param {string} $display [block] - Display mode used when visible.\n/// @param {boolean} $only [false] - If true, adds max-width expression to media query preventing inheritance by larger\n/// breakpoints.\n/// @content Rules to apply when screen size meets condition.\n@mixin hide-on-laptop($display: block, $only: false) {\n  display: $display;\n\n  @include laptop($only) {\n    display: none;\n  }\n}\n\n\n/// Shows element by default, only hiding it (`display: none;`) on desktop screen sizes.\n///\n/// @param {string} $display [block] - Display mode used when visible.\n/// @param {boolean} $only [false] - If true, adds max-width expression to media query preventing inheritance by larger\n/// breakpoints.\n/// @content Rules to apply when screen size meets condition.\n@mixin hide-on-desktop($display: block) {\n  display: $display;\n\n  @include desktop($only) {\n    display: none;\n  }\n}\n","@import '../../settings/all';\n@import '~microscope-sass/lib/grid';\n\n.layout {\n  &--auto-columns &__section {\n    @include tablet {\n      column-count: 2;\n      column-gap: 0;\n    }\n  }\n\n  &--auto-columns &__section > * {\n    break-inside: avoid;\n  }\n}\n"],"names":[],"sourceRoot":""}