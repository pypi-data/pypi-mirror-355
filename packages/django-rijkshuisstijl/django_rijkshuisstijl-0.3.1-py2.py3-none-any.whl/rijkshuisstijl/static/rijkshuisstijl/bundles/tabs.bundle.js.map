{"version":3,"file":"tabs.bundle.js","mappings":"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","sources":["webpack://django-rijkshuisstijl/./rijkshuisstijl/js/components/tabs/tabs.js"],"sourcesContent":["import BEM from 'bem.js';\nimport {\n    BLOCK_TABS,\n    ELEMENT_LINK,\n    ELEMENT_LIST_ITEM,\n    ELEMENT_TAB,\n    ELEMENT_TRACK,\n    MODIFIER_ACTIVE,\n    TABS\n} from './constants';\n\n/**\n * Contains logic for tabs.\n * @class\n */\nclass Tabs {\n    /**\n     * Constructor method.\n     * @param {HTMLElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLElement} */\n        this.node = node;\n\n        /** @type {NodeList} */\n        this.listItems = BEM.getChildBEMNodes(this.node, BLOCK_TABS, ELEMENT_LIST_ITEM);\n\n        /** @type {NodeList} */\n        this.links = BEM.getChildBEMNodes(this.node, BLOCK_TABS, ELEMENT_LINK);\n\n        /** @type {NodeList} */\n        this.track = BEM.getChildBEMNode(this.node, BLOCK_TABS, ELEMENT_TRACK);\n\n        /** @type {NodeList} */\n        this.tabs = BEM.getChildBEMNodes(this.node, BLOCK_TABS, ELEMENT_TAB);\n\n        this.bindEvents();\n        if (!this.activateHashLinkTab()) {\n            this.activateCurrentTab();\n        }\n\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        [...this.links].forEach(link => this.bindLink(link));\n        window.addEventListener('popstate', this.activateHashLinkTab.bind(this));\n        window.addEventListener('resize', this.activateCurrentTab.bind(this));\n    }\n\n    /**\n     * Binds link click to callback.\n     * @param {HTMLAnchorElement} link\n     */\n    bindLink(link) {\n        link.addEventListener('click', this.onClick.bind(this));\n    }\n\n    /**\n     * (Re)activates the active tab, or the first tab.\n     */\n    activateCurrentTab() {\n        let id = this.getActiveTabId();\n        if (id) {\n            this.activateTab(id);\n        }\n    }\n\n    /**\n     * (Re)activates the active tab, or the first tab.\n     */\n    activateHashLinkTab() {\n        const id = window.location.hash.replace('#', '');\n\n        const node = document.getElementById(id);\n        if (node && node.classList.contains(BEM.getBEMClassName(BLOCK_TABS, ELEMENT_TAB))) {\n            const listener = () => {\n                window.scrollTo(0, 0);\n                window.removeEventListener('scroll', listener);\n            };\n            window.addEventListener('scroll', listener);\n            this.activateTab(id);\n\n            return true;\n        }\n    }\n\n    /**\n     * Returns the active tab id (this.node.dataset.tabId) or the first tab's id.\n     * @returns {(string|void)}\n     */\n    getActiveTabId() {\n        let tabId = this.node.dataset.tabId;\n\n        if (tabId) {\n            return tabId;\n        } else {\n            try {\n                return this.tabs[0].id;\n            } catch (e) {\n            }\n        }\n\n    }\n\n    /**\n     * Handles link click event.\n     * @param {MouseEvent} e\n     */\n    onClick(e) {\n        e.preventDefault();\n        let link = e.target;\n        let id = link.attributes.href.value.replace('#', '');\n        history.pushState({}, document.title, link);\n        this.activateTab(id);\n    }\n\n    /**\n     * Activates tab with id.\n     * @param {string} id The id of the tab.\n     * @return {HTMLElement}\n     */\n    activateTab(id) {\n        let link = [...this.links].find(link => link.attributes.href.value === '#' + id);\n        let listItem = this.getListItemByLink(link);\n        let tabIndex = [...this.tabs].findIndex(tab => tab.id === id);\n        let tab = this.tabs[tabIndex];\n\n        [...this.listItems, ...this.tabs].forEach(node => BEM.removeModifier(node, MODIFIER_ACTIVE));\n        [listItem, tab].forEach(node => BEM.addModifier(node, MODIFIER_ACTIVE));\n        this.node.dataset.tabId = id;\n\n        // Support leaflet.\n        //\n        // Leaflet won't render correctly if not visible. Therefore, we need to invalidate it's size to re-render it.\n        // We don't have a direct reference to the leaflet instances so we try to find the callbacks in\n        // window._leaflet_events, then call it when activating the tab (if the even name matches resize).\n        //\n        // FIXME: There is probably a better way to do this.\n        try {\n            Object.entries(window._leaflet_events).forEach(([event_name, callback]) => {\n               if (event_name.indexOf('resize') > -1) {\n                    callback();\n               }\n            });\n        } catch (e) {}\n    }\n\n    /**\n     * Finds the list item containing link up the DOM tree.\n     * @param {HTMLAnchorElement} link\n     */\n    getListItemByLink(link) {\n        let listItemClassName = BEM.getBEMClassName(BLOCK_TABS, ELEMENT_LIST_ITEM);\n        let i = 0;\n\n        while (!link.classList.contains(listItemClassName)) {\n            link = link.parentElement;\n\n            if (i > 100) {\n                console.error('Failed to find list item');\n                break;\n            }\n        }\n        return link;\n    }\n}\n\n\n// Start!\n[...TABS].forEach(tabs => new Tabs(tabs));\n\n"],"names":["Tabs","node","this","listItems","BEM","BLOCK_TABS","ELEMENT_LIST_ITEM","links","ELEMENT_LINK","track","ELEMENT_TRACK","tabs","ELEMENT_TAB","bindEvents","activateHashLinkTab","activateCurrentTab","forEach","link","bindLink","window","addEventListener","bind","onClick","id","getActiveTabId","activateTab","location","hash","replace","document","getElementById","classList","contains","listener","scrollTo","removeEventListener","tabId","dataset","e","preventDefault","target","attributes","href","value","history","pushState","title","find","listItem","getListItemByLink","tabIndex","findIndex","tab","MODIFIER_ACTIVE","Object","entries","_leaflet_events","event_name","callback","indexOf","listItemClassName","parentElement","TABS"],"sourceRoot":""}