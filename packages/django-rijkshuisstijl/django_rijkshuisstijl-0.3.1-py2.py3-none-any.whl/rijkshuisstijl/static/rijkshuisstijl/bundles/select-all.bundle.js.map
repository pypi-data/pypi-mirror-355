{"version":3,"file":"select-all.bundle.js","mappings":"slCASO,IAAMA,EAAb,WAKI,WAAYC,I,4FAAO,CAAD,QAEdC,KAAKD,KAAOA,EAEZC,KAAKC,a,QATb,O,EAAA,E,EAAA,yBAeI,WACID,KAAKD,KAAKG,iBAAiB,QAASF,KAAKG,QAAQC,KAAKJ,SAhB9D,qBAuBI,SAAQK,GACJA,EAAEC,kBACFD,EAAEE,iBACFC,WAAWR,KAAKS,OAAOL,KAAKJ,SA1BpC,oBAiCI,WAAgC,IAAzBU,EAAwB,wDAAjBV,KAAKW,WACfX,KAAKY,aACAC,SAAQ,SAAAC,GACL,IAAIC,EAAQC,SAASC,YAAY,SACjCF,EAAMG,UAAU,UAAU,GAAM,GAChCV,YAAW,kBAAMM,EAAOK,cAAcJ,MACtCD,EAAOM,QAAUV,KAEzBV,KAAKD,KAAKqB,QAAUV,IAzC5B,sBAgDI,WACI,OAAOV,KAAKD,KAAKqB,UAjDzB,wBAwDI,WACI,IAAIC,EAAU,GAKd,OAJerB,KAAKD,KAAKuB,QAAQC,UACxBC,MAAM,KACVC,QAAO,SAAAC,GAAQ,OAAIA,EAASC,UAC5Bd,SAAQ,SAAAa,GAAQ,OAAIL,EAAO,YAAOA,GAAP,EAAmBL,SAASY,iBAAiBF,QACtEL,K,uEA9Df,KAmEA,EAAIQ,EAAAA,IAAahB,SAAQ,SAAAd,GAAI,OAAI,IAAID,EAAUC","sources":["webpack://django-rijkshuisstijl/./rijkshuisstijl/js/components/toggle/select-all.js"],"sourcesContent":["import {SELECT_ALLS} from './constants';\n\n\n/**\n * Class for generic select all checkboxes.\n * Toggle should have BLOCK_SELECT_ALL present in classList for detection.\n * Toggle should have data-select-all set to queryselector for target(s).\n * @class\n */\nexport class SelectAll {\n    /**\n     * Constructor method.\n     * @param {HTMLInputElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLInputElement} */\n        this.node = node;\n\n        this.bindEvents();\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        this.node.addEventListener('click', this.onClick.bind(this));\n    }\n\n    /**\n     * Callback for this.node click.\n     * @param {Event} e\n     */\n    onClick(e) {\n        e.stopPropagation();\n        e.preventDefault();\n        setTimeout(this.toggle.bind(this));\n    }\n\n    /**\n     * Performs toggle.\n     * @param {boolean} [exp] If passed, add/removes this.toggleModifier based on exp.\n     */\n    toggle(exp = !this.getState()) {\n        this.getTargets()\n            .forEach(target => {\n                let event = document.createEvent('Event');\n                event.initEvent('change', true, true);\n                setTimeout(() => target.dispatchEvent(event));\n                target.checked = exp;\n            });\n        this.node.checked = exp;\n    }\n\n    /**\n     * Returns the checkbox state.\n     * @returns {boolean} Boolean\n     */\n    getState() {\n        return this.node.checked;\n    }\n\n    /**\n     * Returns all the targets for this.node.\n     * @returns {*}\n     */\n    getTargets() {\n        let targets = [];\n        let selector = this.node.dataset.selectAll;\n        selector.split(',')\n            .filter(selector => selector.length)\n            .forEach(selector => targets = [...targets, ...document.querySelectorAll(selector)]);\n        return targets;\n    }\n}\n\n// Start!\n[...SELECT_ALLS].forEach(node => new SelectAll(node));\n"],"names":["SelectAll","node","this","bindEvents","addEventListener","onClick","bind","e","stopPropagation","preventDefault","setTimeout","toggle","exp","getState","getTargets","forEach","target","event","document","createEvent","initEvent","dispatchEvent","checked","targets","dataset","selectAll","split","filter","selector","length","querySelectorAll","SELECT_ALLS"],"sourceRoot":""}