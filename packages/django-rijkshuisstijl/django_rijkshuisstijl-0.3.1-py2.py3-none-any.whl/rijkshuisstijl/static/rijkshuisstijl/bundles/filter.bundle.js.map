{"version":3,"file":"filter.bundle.js","mappings":"smCAiBO,IAAMA,EAAb,WAKI,WAAYC,I,4FAAO,CAAD,QAEdC,KAAKD,KAAOA,EAGZC,KAAKC,MAAQC,IAAAA,gBAAoBF,KAAKD,KAAMI,EAAAA,EAAcC,EAAAA,IAE1DJ,KAAKK,aACLL,KAAKM,c,QAbb,O,EAAA,G,EAAA,yBAmBI,WACIN,KAAKD,KAAKQ,iBAAiB,QAASP,KAAKQ,OAAOC,KAAKT,SApB7D,oBA0BI,WACQA,KAAKC,MAAMS,MACXV,KAAKM,cAELN,KAAKW,kBA9BjB,yBAqCI,WAAe,IAAD,OACVC,YAAW,WACP,IAAIC,EAAYC,SAASC,iBAAiB,EAAKhB,KAAKiB,QAAQC,cACxDC,EAAQ,EAAKjB,MAAMS,MAAMS,cAE7B,EAAIN,GAAWO,SAAQ,SAAArB,GACnBG,IAAAA,YAAgBH,EAAMsB,EAAAA,IACtBnB,IAAAA,eAAmBH,EAAMuB,EAAAA,IAErBpB,IAAAA,YAAgB,EAAKH,KAAMwB,EAAAA,KAC3BxB,EAAKyB,MAAMC,eAAe,WAGzB1B,EAAK2B,YAAYP,cAAcQ,MAAMT,KACtChB,IAAAA,eAAmBH,EAAMsB,EAAAA,IACzBnB,IAAAA,YAAgBH,EAAMuB,EAAAA,IAElBpB,IAAAA,YAAgB,EAAKH,KAAMwB,EAAAA,MAC3BxB,EAAKyB,MAAMI,QAAU,iBAvD7C,2BAiEI,WAAiB,IAAD,OAEZ,EADgBd,SAASC,iBAAiBf,KAAKD,KAAKiB,QAAQC,eAC7CG,SAAQ,SAAArB,GACfG,IAAAA,YAAgB,EAAKH,KAAMwB,EAAAA,KAC3BxB,EAAKyB,MAAMC,eAAe,WAE9BvB,IAAAA,eAAmBH,EAAMuB,EAAAA,IACzBpB,IAAAA,YAAgBH,EAAMsB,EAAAA,Y,oEAxElC,KA+EA,EAAIQ,EAAAA,IAAST,SAAQ,SAAAZ,GAAM,OAAI,IAAIV,EAAOU","sources":["webpack://django-rijkshuisstijl/./rijkshuisstijl/js/components/filter/filter.js"],"sourcesContent":["import BEM from 'bem.js';\nimport {\n    BLOCK_FILTER,\n    ELEMENT_INPUT,\n    FILTERS,\n    MODIFIER_CLASS_ONLY,\n    MODIFIER_MATCH,\n    MODIFIER_NO_MATCH\n} from './constants';\n\n\n/**\n * Class for generic filters.\n * Filter should have MODIFIER_FILTER present in classList for detection.\n * Filter should have data-filter-target set to query selector for targets.\n * @class\n */\nexport class Filter {\n    /**\n     * Constructor method.\n     * @param {HTMLElement} node\n     */\n    constructor(node) {\n        /** @type {HTMLElement} */\n        this.node = node;\n\n        /** @type {HTMLInputElement} */\n        this.input = BEM.getChildBEMNode(this.node, BLOCK_FILTER, ELEMENT_INPUT);\n\n        this.bindEvents();\n        this.applyFilter();\n    }\n\n    /**\n     * Binds events to callbacks.\n     */\n    bindEvents() {\n        this.node.addEventListener('input', this.filter.bind(this));\n    }\n\n    /**\n     * Applies/discard the filter based on this.input.value.\n     */\n    filter() {\n        if (this.input.value) {\n            this.applyFilter();\n        } else {\n            this.discardFilter();\n        }\n    }\n\n    /**\n     * Hides all the nodes matching query selector set in data-filter-target that don't match this.input.value.\n     */\n    applyFilter() {\n        setTimeout(() => {\n            let selection = document.querySelectorAll(this.node.dataset.filterTarget);\n            let query = this.input.value.toUpperCase();\n\n            [...selection].forEach(node => {\n                BEM.addModifier(node, MODIFIER_MATCH);\n                BEM.removeModifier(node, MODIFIER_NO_MATCH);\n\n                if(!BEM.hasModifier(this.node, MODIFIER_CLASS_ONLY)) {\n                    node.style.removeProperty('display');\n                }\n\n                if (!node.textContent.toUpperCase().match(query)) {\n                    BEM.removeModifier(node, MODIFIER_MATCH);\n                    BEM.addModifier(node, MODIFIER_NO_MATCH);\n\n                    if(!BEM.hasModifier(this.node, MODIFIER_CLASS_ONLY)) {\n                        node.style.display = 'none';\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Removes display property from inline style of every node matching query selector set in data-filter-target.\n     */\n    discardFilter() {\n        let selection = document.querySelectorAll(this.node.dataset.filterTarget);\n        [...selection].forEach(node => {\n            if(!BEM.hasModifier(this.node, MODIFIER_CLASS_ONLY)) {\n                node.style.removeProperty('display');\n            }\n            BEM.removeModifier(node, MODIFIER_NO_MATCH);\n            BEM.addModifier(node, MODIFIER_MATCH);\n        });\n    }\n}\n\n\n// Start!\n[...FILTERS].forEach(filter => new Filter(filter));\n"],"names":["Filter","node","this","input","BEM","BLOCK_FILTER","ELEMENT_INPUT","bindEvents","applyFilter","addEventListener","filter","bind","value","discardFilter","setTimeout","selection","document","querySelectorAll","dataset","filterTarget","query","toUpperCase","forEach","MODIFIER_MATCH","MODIFIER_NO_MATCH","MODIFIER_CLASS_ONLY","style","removeProperty","textContent","match","display","FILTERS"],"sourceRoot":""}