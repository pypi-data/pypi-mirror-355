# Git Analytics Report

**Generated on:** {{ generated_at }}
**Repository:** {{ repo_path }}
**Date Range:** {{ start_date }} to {{ end_date }}

---

## Executive Summary

{{ executive_summary }}

---

{% if trend_analysis %}
## Historical Trend Analysis

### Growth Metrics
- **Contributor Growth:** {{ trend_analysis.contributor_growth }} contributors
- **Commit Frequency Change:** {{ trend_analysis.commit_frequency_change | round(2) }} commits/day
- **Total Size Change:** {{ (trend_analysis.total_size_change / 1024) | round(2) }} KB
- **Size Change Rate:** {{ (trend_analysis.size_change_per_day / 1024) | round(2) }} KB/day
- **Analysis Period:** {{ trend_analysis.period_days }} days

{% if baseline_comparison %}
### Comparison with Baseline ({{ baseline_name }})
- **Contributor Change:** {{ baseline_comparison.contributor_change }} contributors
- **Commit Frequency Change:** {{ baseline_comparison.commit_frequency_change | round(2) }} commits/day
- **Total Size Change:** {{ (baseline_comparison.total_size_change / 1024) | round(2) }} KB
- **Size Change Rate:** {{ (baseline_comparison.size_change_per_day / 1024) | round(2) }} KB/day
- **Days Since Baseline:** {{ baseline_comparison.days_since_baseline }} days
{% endif %}
{% endif %}

---

{% if security_results %}
## Security Analysis

*Scan performed using `{{ security_results.tool }}` for `{{ security_results.language }}`.*

{% if security_results.findings and (security_results.findings.HIGH or security_results.findings.MEDIUM or security_results.findings.LOW) %}
{% if security_results.findings.HIGH %}
#### ðŸ”´ High Severity Issues
| File | Line | Issue |
|:---|:---|:---|
{% for issue in security_results.findings.HIGH %}
| `{{ issue.file }}` | {{ issue.line }} | **{{ issue.issue }}** |
{% endfor %}
{% endif %}

{% if security_results.findings.MEDIUM %}
#### ðŸŸ  Medium Severity Issues
| File | Line | Issue |
|:---|:---|:---|
{% for issue in security_results.findings.MEDIUM %}
| `{{ issue.file }}` | {{ issue.line }} | {{ issue.issue }} |
{% endfor %}
{% endif %}

{% if security_results.findings.LOW %}
#### ðŸŸ¡ Low Severity Issues
| File | Line | Issue |
|:---|:---|:---|
{% for issue in security_results.findings.LOW %}
| `{{ issue.file }}` | {{ issue.line }} | {{ issue.issue }} |
{% endfor %}
{% endif %}
{% elif security_results.error %}
*ðŸ”´ {{ security_results.error }}*
{% else %}
*âœ… No security issues found.*
{% endif %}
{% endif %}

## Thematic Analysis

{% for category, results in categorized_commits.items() %}
### {{ category }} ({{ results | length }} commit{{ 's' if (results | length) > 1 else '' }})
{% for result in results %}
- **{{ result.commit.commit_hash[:7] }}** by {{ result.commit.author_name }} on {{ result.commit.date_str }}: {{ result.summary }}
{% endfor %}
{% endfor %}

{% if author_summary %}
## Contributor Summary

| Author        | Features | Bug Fixes | Docs | Refactor | Tests | Build | Perf. | Chores |
|---------------|----------|-----------|------|----------|-------|-------|-------|--------|
{% for author, categories in author_summary.items() %}
| **{{ author }}** | {{ categories.get('Features', 0) }} | {{ categories.get('Bug Fixes', 0) }} | {{ categories.get('Documentation', 0) }} | {{ categories.get('Code Refactoring', 0) }} | {{ categories.get('Tests', 0) }} | {{ categories.get('Build System', 0) }} | {{ categories.get('Performance Improvements', 0) }} | {{ categories.get('Chores', 0) }} |
{% endfor %}
{% endif %}

{% if code_health_summary %}
## Code Health Summary

This section highlights the top 5 most frequently modified Python files (churn) and pinpoints the most complex functions within them. High churn and complexity can indicate areas of potential technical debt.

{% for item in code_health_summary %}
---
#### `{{ item.file_path }}`
- **Churn:** {{ item.churn_count }} commit{{ 's' if item.churn_count > 1 else '' }}
- **Average Complexity:** {{ item.complexity.average_complexity }}

{% if item.complexity.functions %}
| Function | Complexity |
|:---|:---|
{% for func in item.complexity.functions[:5] %}
| `{{ func.name }}` | **{{ func.complexity }}** |
{% endfor %}
{% else %}
*No functions found or file could not be parsed.*
{% endif %}
{% endfor %}
{% endif %}

---
*Report generated by Git Analytics at {{ generated_at }}*
