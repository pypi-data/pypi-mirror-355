[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "jaxmsst"
version = "0.1.0"
description = "JAX Music Source Separation Toolkit"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
  { name="flyingblackshark", email="aliu2000@outlook.com" },
]
keywords = [
    "music",
    "source separation",
    "jax",
    "machine learning",
    "audio processing",
    "transformer",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
]
dependencies = [
    "jaxlib>=0.4.30",
    "flax>=0.10.2",
    "optax>=0.2.3",
    "argparse",
    "einops",
    "librosa",
    "OmegaConf",
    "torch==2.5.1",
    "torchvision==0.20.1",
    "gradio",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
train = [
    "wandb",
    "tensorboard",
]



[project.urls]
Homepage = "https://github.com/your-username/jax-Music-Source-Separation"
Repository = "https://github.com/your-username/jax-Music-Source-Separation"
Issues = "https://github.com/your-username/jax-Music-Source-Separation/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
jaxmsst = ["configs/*.yaml", "configs/**/*.yaml"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]