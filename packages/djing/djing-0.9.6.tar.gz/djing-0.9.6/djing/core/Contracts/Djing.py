from typing import Protocol


class Djing(Protocol):
    @classmethod
    def reset(cls): ...

    @classmethod
    def with_authentication(cls): ...

    @classmethod
    def with_breadcrumbs(cls, with_breadcrumbs): ...

    @classmethod
    def breadcrumbs_enabled(cls): ...

    @classmethod
    def without_global_search(cls): ...

    @classmethod
    def authorized_resources(cls, request): ...

    @classmethod
    def globally_searchable_resources(cls, request): ...

    @classmethod
    def has_globally_searchable_resources(cls): ...

    @classmethod
    def main_menu(cls, callback): ...

    @classmethod
    def resolve_main_menu(cls, request): ...

    @classmethod
    def default_main_menu(cls, request): ...

    @classmethod
    def logo(cls): ...

    @classmethod
    def brand_colors(cls): ...

    @classmethod
    def username_field(cls): ...

    @classmethod
    def path(cls): ...

    @classmethod
    def base_directory(cls): ...

    @classmethod
    def app_directory(cls): ...

    @classmethod
    def login_path(cls): ...

    @classmethod
    def initial_path(cls, callback): ...

    @classmethod
    def resolve_initial_path(cls, request): ...

    @classmethod
    def routes(cls): ...

    @classmethod
    def tools(cls, tools): ...

    @classmethod
    def user(cls, request): ...

    @classmethod
    def json_variables(cls, request): ...

    @classmethod
    def resource_information(cls, request): ...

    @classmethod
    def footer(cls, callback): ...

    @classmethod
    def default_footer(cls, request): ...

    @classmethod
    def resolve_footer(cls, request): ...

    @classmethod
    def provide_to_script(cls, variables): ...

    @classmethod
    def version(cls): ...

    @classmethod
    def check_license_validity(cls, request): ...

    @classmethod
    def check_license(cls, request): ...

    @classmethod
    def dashboards(cls, dashboards): ...

    @classmethod
    def available_dashboards(cls, request): ...

    @classmethod
    def available_resources(cls, request): ...

    @classmethod
    def available_tools(cls, request): ...

    @classmethod
    def boot_tools(cls, request): ...

    @classmethod
    def resources(cls, resources): ...

    @classmethod
    def resources_in(cls, resource_path): ...

    @classmethod
    def humanize(cls, value): ...

    @classmethod
    def grouped_resources_for_navigation(cls, request): ...

    @classmethod
    def sort_resources_by(cls, callback): ...

    @classmethod
    def sort_resources_with(cls): ...

    @classmethod
    def dashboard_for_key(cls, key, request): ...

    @classmethod
    def resource_for_key(cls, key): ...

    @classmethod
    def available_dashboard_cards_for_dashboard(cls, key, request): ...
