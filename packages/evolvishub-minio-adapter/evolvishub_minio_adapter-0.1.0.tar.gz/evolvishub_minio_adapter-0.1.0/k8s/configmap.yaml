apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-adapter-config
  namespace: minio-adapter
  labels:
    app.kubernetes.io/name: minio-adapter
    app.kubernetes.io/component: config
data:
  minio_config.yaml: |
    endpoint: "minio-service:9000"
    access_key: "minioadmin"
    secret_key: "minioadmin"
    secure: false
    region: "us-east-1"
    bucket_name: "k8s-bucket"
  
  minio_config.ini: |
    [minio]
    endpoint = minio-service:9000
    access_key = minioadmin
    secret_key = minioadmin
    secure = false
    region = us-east-1
    bucket_name = k8s-bucket
    
    [minio_production]
    endpoint = minio-prod-service:9000
    access_key = ${MINIO_ACCESS_KEY}
    secret_key = ${MINIO_SECRET_KEY}
    secure = true
    region = us-west-2
    bucket_name = production-bucket

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-adapter-logging
  namespace: minio-adapter
  labels:
    app.kubernetes.io/name: minio-adapter
    app.kubernetes.io/component: logging
data:
  logging.yaml: |
    version: 1
    disable_existing_loggers: false
    formatters:
      standard:
        format: '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
      json:
        format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s"}'
    handlers:
      console:
        class: logging.StreamHandler
        level: INFO
        formatter: json
        stream: ext://sys.stdout
      file:
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: standard
        filename: /app/logs/minio_adapter.log
        maxBytes: 10485760  # 10MB
        backupCount: 5
    loggers:
      minio_adapter:
        level: DEBUG
        handlers: [console, file]
        propagate: false
    root:
      level: INFO
      handlers: [console]
