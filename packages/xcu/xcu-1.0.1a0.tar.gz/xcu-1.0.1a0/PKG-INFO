Metadata-Version: 2.4
Name: xcu
Version: 1.0.1a0
Summary: LibrerÃ­a para facilitar la instalaciÃ³n de paquetes de python en Cuba sin gastar megas
Author-email: KeimaSenpai <KeimaSenpai@proton.me>
License: MIT License
        
        Copyright (c) 2025 KeimaSenpai
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/KeimaSenpai
Project-URL: Documentation, https://github.com/KeimaSenpai
Project-URL: Source, https://github.com/KeimaSenpai
Project-URL: Issues, https://github.com/KeimaSenpai
Project-URL: Community, https://t.me/KeimaSenpai
Keywords: Cuba,pip,packages
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

![xcu](https://github.com/user-attachments/assets/1c3e9cc6-645f-448f-85b6-476ae4095f66)
# xcu - Instalador de paquetes Python para Cuba ðŸ‡¨ðŸ‡º

`xcu` es un wrapper de pip que facilita la instalaciÃ³n de paquetes de Python desde el repositorio PyPI de Cuba, eliminando la necesidad de escribir comandos largos con parÃ¡metros de configuraciÃ³n.

## CaracterÃ­sticas

- âœ… Compatible con Windows, macOS y Linux
- âœ… Interfaz simple y familiar (como pip)
- âœ… ConfiguraciÃ³n automÃ¡tica del repositorio cubano
- âœ… Soporte para todos los comandos de pip
- âœ… InstalaciÃ³n de paquetes sin gasto de megas
- âœ… InstalaciÃ³n sencilla
- âœ… Inicia proyecto con simples plantillas

## InstalaciÃ³n

### OpciÃ³n 1: Desde el cÃ³digo fuente
```bash
git clone https://github.com/KeimaSenpai/xcu.git
cd xcu
pip install .
```

### OpciÃ³n 2: InstalaciÃ³n desde pypi
```bash
pip install xcu
```

## Uso

Una vez instalado, puedes usar `xcu` como si fuera `pip`:

### Iniciar un proyecto
```bash
xcu init Mi-proyecto
```

### Para iniciarlo desde la carpeta inicial
```bash
xcu init .
```

### Instalar un paquete
```bash
xcu install requests
```

### Instalar mÃºltiples paquetes
```bash
xcu install numpy pandas matplotlib
```

### Instalar desde requirements.txt
```bash
xcu install -r requirements.txt
```

### Otros comandos (funcionan igual que pip)
```bash
xcu list                    # Listar paquetes instalados
xcu show requests           # Mostrar informaciÃ³n de un paquete
xcu uninstall requests      # Desinstalar un paquete
xcu --help                  # Mostrar ayuda
```

## Â¿QuÃ© hace por detrÃ¡s?

Cuando ejecutas:
```bash
xcu install requests
```

En realidad se ejecuta:
```bash
python -m pip install requests --index-url http://nexus.prod.uci.cu/repository/pypi-proxy/simple/ --trusted-host nexus.prod.uci.cu
```

## Estructura del proyecto

```
xcu/
â”œâ”€â”€ xcu/
â”‚   â”œâ”€â”€ __init__.py
â”‚   â””â”€â”€ main.py
â”œâ”€â”€ README.md
â””â”€â”€ LICENSE
```

## Requisitos

- Python 3.6 o superior
- pip (incluido con Python)

## Contribuir

1. Fork el repositorio
2. Crea una rama para tu feature (`git checkout -b feature/nueva-funcionalidad`)
3. Commit tus cambios (`git commit -am 'Agregar nueva funcionalidad'`)
4. Push a la rama (`git push origin feature/nueva-funcionalidad`)
5. Crea un Pull Request

## Licencia

Este proyecto estÃ¡ licenciado bajo la Licencia MIT - ver el archivo LICENSE para mÃ¡s detalles.

## Repositorio PyPI de Cuba

- **URL**: http://nexus.prod.uci.cu/repository/pypi-proxy/simple/
- **Host de confianza**: nexus.prod.uci.cu

## Soporte

Si encuentras algÃºn problema o tienes sugerencias, por favor crea un issue en el repositorio de GitHub.
