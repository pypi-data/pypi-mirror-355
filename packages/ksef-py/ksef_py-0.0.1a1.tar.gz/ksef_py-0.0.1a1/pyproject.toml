[tool.poetry]
name = "ksef-py"
version = "0.0.1a1"
description = "Modern Python SDK + CLI for Poland's National e-Invoice System (KSeF)"
authors = ["Kamil"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/Kamil-Dab/ksef-py"
repository = "https://github.com/Kamil-Dab/ksef-py"
documentation = "https://ksef-py.readthedocs.io"
keywords = ["ksef", "einvoice", "poland", "tax", "api", "sdk"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Accounting",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "ksef"}]

[tool.poetry.dependencies]
python = "^3.9"
httpx = {extras = ["http2"], version = "^0.27.0"}
pydantic = "^2.0.0"
click = "^8.1.0"
lxml = "^5.0.0"
zeep = "^4.2.0"
pydantic-settings = "^2.0.0"
rich = "^13.0.0"  # For beautiful CLI output
tenacity = "^8.0.0"  # For retry logic
cryptography = "^41.0.0"  # For signature handling
python-dateutil = "^2.8.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-xdist = "^3.3.0"
pytest-cov = "^4.1.0"
respx = "^0.20.0"
mypy = "^1.5.0"
ruff = "^0.1.0"
pre-commit = "^3.4.0"
types-requests = "^2.31.0"
types-python-dateutil = "^2.8.0"
fastapi = "^0.104.0"  # For stub server
uvicorn = "^0.23.0"   # For stub server
safety = "^3.0.0"     # For security vulnerability checks

[tool.poetry.scripts]
ksef = "ksef.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_unimported = true
no_implicit_optional = true
warn_return_any = true

[[tool.mypy.overrides]]
module = [
    "zeep.*",
    "lxml.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ksef",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=40",
]
markers = [
    "unit: marks tests as unit tests (deselect with '-m \"not unit\"')",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["ksef"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 