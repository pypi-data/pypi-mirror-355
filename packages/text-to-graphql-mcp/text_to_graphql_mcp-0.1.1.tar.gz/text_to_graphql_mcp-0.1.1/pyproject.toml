[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "text-to-graphql-mcp"
version = "0.1.1"
description = "Transform natural language queries into GraphQL queries using an MCP server"
readme = "README.md"
license = "LicenseRef-Elastic-2.0"
authors = [
    { name = "Anthony Abercrombie", email = "anthony@arize.com" }
]
maintainers = [
    { name = "Anthony Abercrombie", email = "anthony@arize.com" },
    { name = "John Gilhuly", email = "john@arize.com" }
]
keywords = [
    "graphql",
    "mcp",
    "ai",
    "natural-language",
    "langchain",
    "langgraph"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
requires-python = ">=3.10"
dependencies = [
    # Core dependencies
    "fastapi>=0.101.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.1.0",
    "python-dotenv>=1.0.0",
    "pydantic-settings",
    
    # LangChain and related packages
    "langchain>=0.0.267",
    "langchain-openai>=0.0.2",
    "langgraph>=0.0.17",
    "openai>=1.3.0",
    
    # GraphQL support
    "graphql-core>=3.0.0",
    "gql",
    
    # Utilities
    "requests>=2.31.0",
    "jinja2>=3.1.2",
    "python-multipart>=0.0.6",
    "termcolor",
    "loguru",
    

    
    # MCP support
    "fastmcp>=0.1.0",
    
    # Development utilities
    "ipykernel>=6.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0"
]

[project.urls]
Homepage = "https://github.com/Arize-ai/text-to-graphql-mcp/"
Repository = "https://github.com/Arize-ai/text-to-graphql-mcp/"
Documentation = "https://github.com/Arize-ai/text-to-graphql-mcp#readme"

[project.scripts]
text-to-graphql-mcp = "text_to_graphql_mcp.mcp_server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/text_to_graphql_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml"
]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["text_to_graphql_mcp"]

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/text_to_graphql_mcp --cov-report=html --cov-report=term-missing"
asyncio_mode = "auto"

# mypy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fastmcp.*",
    "gql.*"
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
] 