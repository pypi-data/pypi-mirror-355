# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _rizin
else:
    import _rizin

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

class Array_String(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _rizin.Array_String_swiginit(self, _rizin.new_Array_String(nelements))
    __swig_destroy__ = _rizin.delete_Array_String

    def __getitem__(self, index):
        return _rizin.Array_String___getitem__(self, index)

    def __setitem__(self, index, value):
        return _rizin.Array_String___setitem__(self, index, value)

    def cast(self):
        return _rizin.Array_String_cast(self)

    @staticmethod
    def frompointer(t):
        return _rizin.Array_String_frompointer(t)

# Register Array_String in _rizin:
_rizin.Array_String_swigregister(Array_String)
cvar = _rizin.cvar


core = None

class CmdDirector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def run(self, core, argc, argv):
        return _rizin.CmdDirector_run(self, core, argc, argv)

    def __init__(self):
        if self.__class__ == CmdDirector:
            _self = None
        else:
            _self = self
        _rizin.CmdDirector_swiginit(self, _rizin.new_CmdDirector(_self, ))
    __swig_destroy__ = _rizin.delete_CmdDirector
    def __disown__(self):
        self.this.disown()
        _rizin.disown_CmdDirector(self)
        return weakref.proxy(self)

# Register CmdDirector in _rizin:
_rizin.CmdDirector_swigregister(CmdDirector)
class Array_RzCmdDescArg(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, nelements):
        _rizin.Array_RzCmdDescArg_swiginit(self, _rizin.new_Array_RzCmdDescArg(nelements))
    __swig_destroy__ = _rizin.delete_Array_RzCmdDescArg

    def __getitem__(self, index):
        return _rizin.Array_RzCmdDescArg___getitem__(self, index)

    def __setitem__(self, index, value):
        return _rizin.Array_RzCmdDescArg___setitem__(self, index, value)

    def cast(self):
        return _rizin.Array_RzCmdDescArg_cast(self)

    @staticmethod
    def frompointer(t):
        return _rizin.Array_RzCmdDescArg_frompointer(t)

# Register Array_RzCmdDescArg in _rizin:
_rizin.Array_RzCmdDescArg_swigregister(Array_RzCmdDescArg)

class RzNumArg: pass
class RzFilenameArg: pass


class RzListIterator:
    def __init__(self, rzlist):
        self.iter = rzlist.iterator()

    def __next__(self):
        if self.iter is None:
            raise StopIteration
        data = self.iter.data()
        self.iter = self.iter.next()
        return data


class RzVectorIterator:
    def __init__(self, rzvector):
        self.rzvector = rzvector
        self.index = 0

    def __next__(self):
        if self.index >= len(self.rzvector):
            raise StopIteration
        data = self.rzvector.index_ptr(self.index)
        self.index += 1
        return data


class RzPVectorIterator:
    def __init__(self, rzpvector):
        self.rzpvector = rzpvector
        self.index = 0

    def __next__(self):
        if self.index >= len(self.rzpvector):
            raise StopIteration
        data = self.rzpvector.at(self.index)
        self.index += 1
        return data

class RzListIter_RzFlagZoneItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzFlagZoneItem_next(self)

    def data(self):
        return _rizin.RzListIter_RzFlagZoneItem_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzFlagZoneItem

# Register RzListIter_RzFlagZoneItem in _rizin:
_rizin.RzListIter_RzFlagZoneItem_swigregister(RzListIter_RzFlagZoneItem)
class RzListIter_RzType(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzType_next(self)

    def data(self):
        return _rizin.RzListIter_RzType_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzType

# Register RzListIter_RzType in _rizin:
_rizin.RzListIter_RzType_swigregister(RzListIter_RzType)
class RzListIter_RzAnalysisCycleHook(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisCycleHook_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisCycleHook_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisCycleHook

# Register RzListIter_RzAnalysisCycleHook in _rizin:
_rizin.RzListIter_RzAnalysisCycleHook_swigregister(RzListIter_RzAnalysisCycleHook)
class RzListIter_RzBinFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzBinFile_next(self)

    def data(self):
        return _rizin.RzListIter_RzBinFile_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzBinFile

# Register RzListIter_RzBinFile in _rizin:
_rizin.RzListIter_RzBinFile_swigregister(RzListIter_RzBinFile)
class RzListIter_RzAnalysisEsilMemoryRegion(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisEsilMemoryRegion_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisEsilMemoryRegion_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisEsilMemoryRegion

# Register RzListIter_RzAnalysisEsilMemoryRegion in _rizin:
_rizin.RzListIter_RzAnalysisEsilMemoryRegion_swigregister(RzListIter_RzAnalysisEsilMemoryRegion)
class RzListIter_RzCmdDescriptor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzCmdDescriptor_next(self)

    def data(self):
        return _rizin.RzListIter_RzCmdDescriptor_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzCmdDescriptor

# Register RzListIter_RzCmdDescriptor in _rizin:
_rizin.RzListIter_RzCmdDescriptor_swigregister(RzListIter_RzCmdDescriptor)
class RzListIter_char(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_char_next(self)

    def data(self):
        return _rizin.RzListIter_char_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_char

# Register RzListIter_char in _rizin:
_rizin.RzListIter_char_swigregister(RzListIter_char)
class RzListIter_RzAnalysisFunction(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisFunction_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisFunction_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisFunction

# Register RzListIter_RzAnalysisFunction in _rizin:
_rizin.RzListIter_RzAnalysisFunction_swigregister(RzListIter_RzAnalysisFunction)
class RzListIter_RVTableInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RVTableInfo_next(self)

    def data(self):
        return _rizin.RzListIter_RVTableInfo_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RVTableInfo

# Register RzListIter_RVTableInfo in _rizin:
_rizin.RzListIter_RVTableInfo_swigregister(RzListIter_RVTableInfo)
class RzListIter_RzConfigNode(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzConfigNode_next(self)

    def data(self):
        return _rizin.RzListIter_RzConfigNode_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzConfigNode

# Register RzListIter_RzConfigNode in _rizin:
_rizin.RzListIter_RzConfigNode_swigregister(RzListIter_RzConfigNode)
class RzListIter_RzCoreFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzCoreFile_next(self)

    def data(self):
        return _rizin.RzListIter_RzCoreFile_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzCoreFile

# Register RzListIter_RzCoreFile in _rizin:
_rizin.RzListIter_RzCoreFile_swigregister(RzListIter_RzCoreFile)
class RzListIter_RzIOMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzIOMap_next(self)

    def data(self):
        return _rizin.RzListIter_RzIOMap_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzIOMap

# Register RzListIter_RzIOMap in _rizin:
_rizin.RzListIter_RzIOMap_swigregister(RzListIter_RzIOMap)
class RzListIter_RzIODesc(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzIODesc_next(self)

    def data(self):
        return _rizin.RzListIter_RzIODesc_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzIODesc

# Register RzListIter_RzIODesc in _rizin:
_rizin.RzListIter_RzIODesc_swigregister(RzListIter_RzIODesc)
class RzListIter_SdbNs(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_SdbNs_next(self)

    def data(self):
        return _rizin.RzListIter_SdbNs_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_SdbNs

# Register RzListIter_SdbNs in _rizin:
_rizin.RzListIter_SdbNs_swigregister(RzListIter_SdbNs)
class RzListIter_RzBacktrace(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzBacktrace_next(self)

    def data(self):
        return _rizin.RzListIter_RzBacktrace_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzBacktrace

# Register RzListIter_RzBacktrace in _rizin:
_rizin.RzListIter_RzBacktrace_swigregister(RzListIter_RzBacktrace)
class RzListIter_RzAnalysisXRef(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisXRef_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisXRef_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisXRef

# Register RzListIter_RzAnalysisXRef in _rizin:
_rizin.RzListIter_RzAnalysisXRef_swigregister(RzListIter_RzAnalysisXRef)
class RzListIter_RzAnalysisOp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisOp_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisOp_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisOp

# Register RzListIter_RzAnalysisOp in _rizin:
_rizin.RzListIter_RzAnalysisOp_swigregister(RzListIter_RzAnalysisOp)
class RzListIter_RzBinSymbol(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzBinSymbol_next(self)

    def data(self):
        return _rizin.RzListIter_RzBinSymbol_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzBinSymbol

# Register RzListIter_RzBinSymbol in _rizin:
_rizin.RzListIter_RzBinSymbol_swigregister(RzListIter_RzBinSymbol)
class RzListIter_RzAnalysisRefline(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisRefline_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisRefline_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisRefline

# Register RzListIter_RzAnalysisRefline in _rizin:
_rizin.RzListIter_RzAnalysisRefline_swigregister(RzListIter_RzAnalysisRefline)
class RzListIter_RzAnalysisVarGlobal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisVarGlobal_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisVarGlobal_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisVarGlobal

# Register RzListIter_RzAnalysisVarGlobal in _rizin:
_rizin.RzListIter_RzAnalysisVarGlobal_swigregister(RzListIter_RzAnalysisVarGlobal)
class RzListIter_RzCoreAsmHit(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzCoreAsmHit_next(self)

    def data(self):
        return _rizin.RzListIter_RzCoreAsmHit_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzCoreAsmHit

# Register RzListIter_RzCoreAsmHit in _rizin:
_rizin.RzListIter_RzCoreAsmHit_swigregister(RzListIter_RzCoreAsmHit)
class RzListIter_RzAnalysisVar(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisVar_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisVar_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisVar

# Register RzListIter_RzAnalysisVar in _rizin:
_rizin.RzListIter_RzAnalysisVar_swigregister(RzListIter_RzAnalysisVar)
class RzListIter_RzBaseType(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzBaseType_next(self)

    def data(self):
        return _rizin.RzListIter_RzBaseType_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzBaseType

# Register RzListIter_RzBaseType in _rizin:
_rizin.RzListIter_RzBaseType_swigregister(RzListIter_RzBaseType)
class RzListIter_RzTypeFormat(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzTypeFormat_next(self)

    def data(self):
        return _rizin.RzListIter_RzTypeFormat_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzTypeFormat

# Register RzListIter_RzTypeFormat in _rizin:
_rizin.RzListIter_RzTypeFormat_swigregister(RzListIter_RzTypeFormat)
class RzListIter_RzTypePath(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzTypePath_next(self)

    def data(self):
        return _rizin.RzListIter_RzTypePath_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzTypePath

# Register RzListIter_RzTypePath in _rizin:
_rizin.RzListIter_RzTypePath_swigregister(RzListIter_RzTypePath)
class RzListIter_RzAnalysisBlock(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisBlock_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisBlock_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisBlock

# Register RzListIter_RzAnalysisBlock in _rizin:
_rizin.RzListIter_RzAnalysisBlock_swigregister(RzListIter_RzAnalysisBlock)
class RzListIter_RzCoreCmpWatcher(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzCoreCmpWatcher_next(self)

    def data(self):
        return _rizin.RzListIter_RzCoreCmpWatcher_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzCoreCmpWatcher

# Register RzListIter_RzCoreCmpWatcher in _rizin:
_rizin.RzListIter_RzCoreCmpWatcher_swigregister(RzListIter_RzCoreCmpWatcher)
class RzListIter_RzCoreSeekItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzCoreSeekItem_next(self)

    def data(self):
        return _rizin.RzListIter_RzCoreSeekItem_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzCoreSeekItem

# Register RzListIter_RzCoreSeekItem in _rizin:
_rizin.RzListIter_RzCoreSeekItem_swigregister(RzListIter_RzCoreSeekItem)
class RzListIter_RzCoreGadget(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzCoreGadget_next(self)

    def data(self):
        return _rizin.RzListIter_RzCoreGadget_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzCoreGadget

# Register RzListIter_RzCoreGadget in _rizin:
_rizin.RzListIter_RzCoreGadget_swigregister(RzListIter_RzCoreGadget)
class RzListIter_RzAnalysisFuncArg(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzAnalysisFuncArg_next(self)

    def data(self):
        return _rizin.RzListIter_RzAnalysisFuncArg_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzAnalysisFuncArg

# Register RzListIter_RzAnalysisFuncArg in _rizin:
_rizin.RzListIter_RzAnalysisFuncArg_swigregister(RzListIter_RzAnalysisFuncArg)
class RzListIter_RzSearchKeyword(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzSearchKeyword_next(self)

    def data(self):
        return _rizin.RzListIter_RzSearchKeyword_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzSearchKeyword

# Register RzListIter_RzSearchKeyword in _rizin:
_rizin.RzListIter_RzSearchKeyword_swigregister(RzListIter_RzSearchKeyword)
class RzListIter_RzFlagItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzFlagItem_next(self)

    def data(self):
        return _rizin.RzListIter_RzFlagItem_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzFlagItem

# Register RzListIter_RzFlagItem in _rizin:
_rizin.RzListIter_RzFlagItem_swigregister(RzListIter_RzFlagItem)
class RzListIter_RzSearchHit(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzSearchHit_next(self)

    def data(self):
        return _rizin.RzListIter_RzSearchHit_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzSearchHit

# Register RzListIter_RzSearchHit in _rizin:
_rizin.RzListIter_RzSearchHit_swigregister(RzListIter_RzSearchHit)
class RzListIter_RzTypePathTuple(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzTypePathTuple_next(self)

    def data(self):
        return _rizin.RzListIter_RzTypePathTuple_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzTypePathTuple

# Register RzListIter_RzTypePathTuple in _rizin:
_rizin.RzListIter_RzTypePathTuple_swigregister(RzListIter_RzTypePathTuple)
class RzListIter_RzSigDBEntry(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzSigDBEntry_next(self)

    def data(self):
        return _rizin.RzListIter_RzSigDBEntry_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzSigDBEntry

# Register RzListIter_RzSigDBEntry in _rizin:
_rizin.RzListIter_RzSigDBEntry_swigregister(RzListIter_RzSigDBEntry)
class RzListIter_RzBinXtrData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzBinXtrData_next(self)

    def data(self):
        return _rizin.RzListIter_RzBinXtrData_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzBinXtrData

# Register RzListIter_RzBinXtrData in _rizin:
_rizin.RzListIter_RzBinXtrData_swigregister(RzListIter_RzBinXtrData)
class RzListIter_RzRegItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def next(self):
        return _rizin.RzListIter_RzRegItem_next(self)

    def data(self):
        return _rizin.RzListIter_RzRegItem_data(self)
    __swig_destroy__ = _rizin.delete_RzListIter_RzRegItem

# Register RzListIter_RzRegItem in _rizin:
_rizin.RzListIter_RzRegItem_swigregister(RzListIter_RzRegItem)
class RzList_RzFlagZoneItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzFlagZoneItem_length(self)

    def first(self):
        return _rizin.RzList_RzFlagZoneItem_first(self)

    def last(self):
        return _rizin.RzList_RzFlagZoneItem_last(self)

    def iterator(self):
        return _rizin.RzList_RzFlagZoneItem_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzFlagZoneItem_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzFlagZoneItem_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzFlagZoneItem

# Register RzList_RzFlagZoneItem in _rizin:
_rizin.RzList_RzFlagZoneItem_swigregister(RzList_RzFlagZoneItem)
class RzList_RzType(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzType_length(self)

    def first(self):
        return _rizin.RzList_RzType_first(self)

    def last(self):
        return _rizin.RzList_RzType_last(self)

    def iterator(self):
        return _rizin.RzList_RzType_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzType_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzType_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzType

# Register RzList_RzType in _rizin:
_rizin.RzList_RzType_swigregister(RzList_RzType)
class RzList_RzAnalysisCycleHook(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisCycleHook_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisCycleHook_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisCycleHook_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisCycleHook_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisCycleHook_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisCycleHook_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisCycleHook

# Register RzList_RzAnalysisCycleHook in _rizin:
_rizin.RzList_RzAnalysisCycleHook_swigregister(RzList_RzAnalysisCycleHook)
class RzList_RzBinFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzBinFile_length(self)

    def first(self):
        return _rizin.RzList_RzBinFile_first(self)

    def last(self):
        return _rizin.RzList_RzBinFile_last(self)

    def iterator(self):
        return _rizin.RzList_RzBinFile_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzBinFile_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzBinFile_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzBinFile

# Register RzList_RzBinFile in _rizin:
_rizin.RzList_RzBinFile_swigregister(RzList_RzBinFile)
class RzList_RzAnalysisEsilMemoryRegion(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisEsilMemoryRegion_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisEsilMemoryRegion_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisEsilMemoryRegion_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisEsilMemoryRegion_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisEsilMemoryRegion_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisEsilMemoryRegion_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisEsilMemoryRegion

# Register RzList_RzAnalysisEsilMemoryRegion in _rizin:
_rizin.RzList_RzAnalysisEsilMemoryRegion_swigregister(RzList_RzAnalysisEsilMemoryRegion)
class RzList_RzCmdDescriptor(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzCmdDescriptor_length(self)

    def first(self):
        return _rizin.RzList_RzCmdDescriptor_first(self)

    def last(self):
        return _rizin.RzList_RzCmdDescriptor_last(self)

    def iterator(self):
        return _rizin.RzList_RzCmdDescriptor_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzCmdDescriptor_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzCmdDescriptor_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzCmdDescriptor

# Register RzList_RzCmdDescriptor in _rizin:
_rizin.RzList_RzCmdDescriptor_swigregister(RzList_RzCmdDescriptor)
class RzList_char(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_char_length(self)

    def first(self):
        return _rizin.RzList_char_first(self)

    def last(self):
        return _rizin.RzList_char_last(self)

    def iterator(self):
        return _rizin.RzList_char_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_char_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_char_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_char

# Register RzList_char in _rizin:
_rizin.RzList_char_swigregister(RzList_char)
class RzList_RzAnalysisFunction(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisFunction_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisFunction_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisFunction_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisFunction_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisFunction_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisFunction_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisFunction

# Register RzList_RzAnalysisFunction in _rizin:
_rizin.RzList_RzAnalysisFunction_swigregister(RzList_RzAnalysisFunction)
class RzList_RVTableInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RVTableInfo_length(self)

    def first(self):
        return _rizin.RzList_RVTableInfo_first(self)

    def last(self):
        return _rizin.RzList_RVTableInfo_last(self)

    def iterator(self):
        return _rizin.RzList_RVTableInfo_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RVTableInfo_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RVTableInfo_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RVTableInfo

# Register RzList_RVTableInfo in _rizin:
_rizin.RzList_RVTableInfo_swigregister(RzList_RVTableInfo)
class RzList_RzConfigNode(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzConfigNode_length(self)

    def first(self):
        return _rizin.RzList_RzConfigNode_first(self)

    def last(self):
        return _rizin.RzList_RzConfigNode_last(self)

    def iterator(self):
        return _rizin.RzList_RzConfigNode_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzConfigNode_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzConfigNode_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzConfigNode

# Register RzList_RzConfigNode in _rizin:
_rizin.RzList_RzConfigNode_swigregister(RzList_RzConfigNode)
class RzList_RzCoreFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzCoreFile_length(self)

    def first(self):
        return _rizin.RzList_RzCoreFile_first(self)

    def last(self):
        return _rizin.RzList_RzCoreFile_last(self)

    def iterator(self):
        return _rizin.RzList_RzCoreFile_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzCoreFile_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzCoreFile_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzCoreFile

# Register RzList_RzCoreFile in _rizin:
_rizin.RzList_RzCoreFile_swigregister(RzList_RzCoreFile)
class RzList_RzIOMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzIOMap_length(self)

    def first(self):
        return _rizin.RzList_RzIOMap_first(self)

    def last(self):
        return _rizin.RzList_RzIOMap_last(self)

    def iterator(self):
        return _rizin.RzList_RzIOMap_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzIOMap_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzIOMap_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzIOMap

# Register RzList_RzIOMap in _rizin:
_rizin.RzList_RzIOMap_swigregister(RzList_RzIOMap)
class RzList_RzIODesc(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzIODesc_length(self)

    def first(self):
        return _rizin.RzList_RzIODesc_first(self)

    def last(self):
        return _rizin.RzList_RzIODesc_last(self)

    def iterator(self):
        return _rizin.RzList_RzIODesc_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzIODesc_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzIODesc_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzIODesc

# Register RzList_RzIODesc in _rizin:
_rizin.RzList_RzIODesc_swigregister(RzList_RzIODesc)
class RzList_SdbNs(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_SdbNs_length(self)

    def first(self):
        return _rizin.RzList_SdbNs_first(self)

    def last(self):
        return _rizin.RzList_SdbNs_last(self)

    def iterator(self):
        return _rizin.RzList_SdbNs_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_SdbNs_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_SdbNs_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_SdbNs

# Register RzList_SdbNs in _rizin:
_rizin.RzList_SdbNs_swigregister(RzList_SdbNs)
class RzList_RzBacktrace(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzBacktrace_length(self)

    def first(self):
        return _rizin.RzList_RzBacktrace_first(self)

    def last(self):
        return _rizin.RzList_RzBacktrace_last(self)

    def iterator(self):
        return _rizin.RzList_RzBacktrace_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzBacktrace_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzBacktrace_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzBacktrace

# Register RzList_RzBacktrace in _rizin:
_rizin.RzList_RzBacktrace_swigregister(RzList_RzBacktrace)
class RzList_RzAnalysisXRef(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisXRef_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisXRef_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisXRef_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisXRef_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisXRef_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisXRef_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisXRef

# Register RzList_RzAnalysisXRef in _rizin:
_rizin.RzList_RzAnalysisXRef_swigregister(RzList_RzAnalysisXRef)
class RzList_RzAnalysisOp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisOp_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisOp_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisOp_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisOp_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisOp_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisOp_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisOp

# Register RzList_RzAnalysisOp in _rizin:
_rizin.RzList_RzAnalysisOp_swigregister(RzList_RzAnalysisOp)
class RzList_RzBinSymbol(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzBinSymbol_length(self)

    def first(self):
        return _rizin.RzList_RzBinSymbol_first(self)

    def last(self):
        return _rizin.RzList_RzBinSymbol_last(self)

    def iterator(self):
        return _rizin.RzList_RzBinSymbol_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzBinSymbol_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzBinSymbol_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)


    def __init__(self):
        _rizin.RzList_RzBinSymbol_swiginit(self, _rizin.new_RzList_RzBinSymbol())
    __swig_destroy__ = _rizin.delete_RzList_RzBinSymbol

# Register RzList_RzBinSymbol in _rizin:
_rizin.RzList_RzBinSymbol_swigregister(RzList_RzBinSymbol)
class RzList_RzAnalysisRefline(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisRefline_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisRefline_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisRefline_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisRefline_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisRefline_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisRefline_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisRefline

# Register RzList_RzAnalysisRefline in _rizin:
_rizin.RzList_RzAnalysisRefline_swigregister(RzList_RzAnalysisRefline)
class RzList_RzAnalysisVarGlobal(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisVarGlobal_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisVarGlobal_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisVarGlobal_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisVarGlobal_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisVarGlobal_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisVarGlobal_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisVarGlobal

# Register RzList_RzAnalysisVarGlobal in _rizin:
_rizin.RzList_RzAnalysisVarGlobal_swigregister(RzList_RzAnalysisVarGlobal)
class RzList_RzCoreAsmHit(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzCoreAsmHit_length(self)

    def first(self):
        return _rizin.RzList_RzCoreAsmHit_first(self)

    def last(self):
        return _rizin.RzList_RzCoreAsmHit_last(self)

    def iterator(self):
        return _rizin.RzList_RzCoreAsmHit_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzCoreAsmHit_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzCoreAsmHit_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzCoreAsmHit

# Register RzList_RzCoreAsmHit in _rizin:
_rizin.RzList_RzCoreAsmHit_swigregister(RzList_RzCoreAsmHit)
class RzList_RzAnalysisVar(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisVar_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisVar_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisVar_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisVar_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisVar_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisVar_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisVar

# Register RzList_RzAnalysisVar in _rizin:
_rizin.RzList_RzAnalysisVar_swigregister(RzList_RzAnalysisVar)
class RzList_RzBaseType(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzBaseType_length(self)

    def first(self):
        return _rizin.RzList_RzBaseType_first(self)

    def last(self):
        return _rizin.RzList_RzBaseType_last(self)

    def iterator(self):
        return _rizin.RzList_RzBaseType_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzBaseType_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzBaseType_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzBaseType

# Register RzList_RzBaseType in _rizin:
_rizin.RzList_RzBaseType_swigregister(RzList_RzBaseType)
class RzList_RzTypeFormat(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzTypeFormat_length(self)

    def first(self):
        return _rizin.RzList_RzTypeFormat_first(self)

    def last(self):
        return _rizin.RzList_RzTypeFormat_last(self)

    def iterator(self):
        return _rizin.RzList_RzTypeFormat_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzTypeFormat_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzTypeFormat_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzTypeFormat

# Register RzList_RzTypeFormat in _rizin:
_rizin.RzList_RzTypeFormat_swigregister(RzList_RzTypeFormat)
class RzList_RzTypePath(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzTypePath_length(self)

    def first(self):
        return _rizin.RzList_RzTypePath_first(self)

    def last(self):
        return _rizin.RzList_RzTypePath_last(self)

    def iterator(self):
        return _rizin.RzList_RzTypePath_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzTypePath_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzTypePath_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzTypePath

# Register RzList_RzTypePath in _rizin:
_rizin.RzList_RzTypePath_swigregister(RzList_RzTypePath)
class RzList_RzAnalysisBlock(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisBlock_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisBlock_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisBlock_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisBlock_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisBlock_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisBlock_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisBlock

# Register RzList_RzAnalysisBlock in _rizin:
_rizin.RzList_RzAnalysisBlock_swigregister(RzList_RzAnalysisBlock)
class RzList_RzCoreCmpWatcher(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzCoreCmpWatcher_length(self)

    def first(self):
        return _rizin.RzList_RzCoreCmpWatcher_first(self)

    def last(self):
        return _rizin.RzList_RzCoreCmpWatcher_last(self)

    def iterator(self):
        return _rizin.RzList_RzCoreCmpWatcher_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzCoreCmpWatcher_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzCoreCmpWatcher_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzCoreCmpWatcher

# Register RzList_RzCoreCmpWatcher in _rizin:
_rizin.RzList_RzCoreCmpWatcher_swigregister(RzList_RzCoreCmpWatcher)
class RzList_RzCoreSeekItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzCoreSeekItem_length(self)

    def first(self):
        return _rizin.RzList_RzCoreSeekItem_first(self)

    def last(self):
        return _rizin.RzList_RzCoreSeekItem_last(self)

    def iterator(self):
        return _rizin.RzList_RzCoreSeekItem_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzCoreSeekItem_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzCoreSeekItem_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzCoreSeekItem

# Register RzList_RzCoreSeekItem in _rizin:
_rizin.RzList_RzCoreSeekItem_swigregister(RzList_RzCoreSeekItem)
class RzList_RzCoreGadget(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzCoreGadget_length(self)

    def first(self):
        return _rizin.RzList_RzCoreGadget_first(self)

    def last(self):
        return _rizin.RzList_RzCoreGadget_last(self)

    def iterator(self):
        return _rizin.RzList_RzCoreGadget_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzCoreGadget_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzCoreGadget_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzCoreGadget

# Register RzList_RzCoreGadget in _rizin:
_rizin.RzList_RzCoreGadget_swigregister(RzList_RzCoreGadget)
class RzList_RzAnalysisFuncArg(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzAnalysisFuncArg_length(self)

    def first(self):
        return _rizin.RzList_RzAnalysisFuncArg_first(self)

    def last(self):
        return _rizin.RzList_RzAnalysisFuncArg_last(self)

    def iterator(self):
        return _rizin.RzList_RzAnalysisFuncArg_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzAnalysisFuncArg_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzAnalysisFuncArg_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzAnalysisFuncArg

# Register RzList_RzAnalysisFuncArg in _rizin:
_rizin.RzList_RzAnalysisFuncArg_swigregister(RzList_RzAnalysisFuncArg)
class RzList_RzSearchKeyword(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzSearchKeyword_length(self)

    def first(self):
        return _rizin.RzList_RzSearchKeyword_first(self)

    def last(self):
        return _rizin.RzList_RzSearchKeyword_last(self)

    def iterator(self):
        return _rizin.RzList_RzSearchKeyword_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzSearchKeyword_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzSearchKeyword_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzSearchKeyword

# Register RzList_RzSearchKeyword in _rizin:
_rizin.RzList_RzSearchKeyword_swigregister(RzList_RzSearchKeyword)
class RzList_RzFlagItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzFlagItem_length(self)

    def first(self):
        return _rizin.RzList_RzFlagItem_first(self)

    def last(self):
        return _rizin.RzList_RzFlagItem_last(self)

    def iterator(self):
        return _rizin.RzList_RzFlagItem_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzFlagItem_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzFlagItem_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzFlagItem

# Register RzList_RzFlagItem in _rizin:
_rizin.RzList_RzFlagItem_swigregister(RzList_RzFlagItem)
class RzList_RzSearchHit(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzSearchHit_length(self)

    def first(self):
        return _rizin.RzList_RzSearchHit_first(self)

    def last(self):
        return _rizin.RzList_RzSearchHit_last(self)

    def iterator(self):
        return _rizin.RzList_RzSearchHit_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzSearchHit_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzSearchHit_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzSearchHit

# Register RzList_RzSearchHit in _rizin:
_rizin.RzList_RzSearchHit_swigregister(RzList_RzSearchHit)
class RzList_RzTypePathTuple(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzTypePathTuple_length(self)

    def first(self):
        return _rizin.RzList_RzTypePathTuple_first(self)

    def last(self):
        return _rizin.RzList_RzTypePathTuple_last(self)

    def iterator(self):
        return _rizin.RzList_RzTypePathTuple_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzTypePathTuple_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzTypePathTuple_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzTypePathTuple

# Register RzList_RzTypePathTuple in _rizin:
_rizin.RzList_RzTypePathTuple_swigregister(RzList_RzTypePathTuple)
class RzList_RzSigDBEntry(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzSigDBEntry_length(self)

    def first(self):
        return _rizin.RzList_RzSigDBEntry_first(self)

    def last(self):
        return _rizin.RzList_RzSigDBEntry_last(self)

    def iterator(self):
        return _rizin.RzList_RzSigDBEntry_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzSigDBEntry_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzSigDBEntry_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzSigDBEntry

# Register RzList_RzSigDBEntry in _rizin:
_rizin.RzList_RzSigDBEntry_swigregister(RzList_RzSigDBEntry)
class RzList_RzBinXtrData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzBinXtrData_length(self)

    def first(self):
        return _rizin.RzList_RzBinXtrData_first(self)

    def last(self):
        return _rizin.RzList_RzBinXtrData_last(self)

    def iterator(self):
        return _rizin.RzList_RzBinXtrData_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzBinXtrData_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzBinXtrData_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzBinXtrData

# Register RzList_RzBinXtrData in _rizin:
_rizin.RzList_RzBinXtrData_swigregister(RzList_RzBinXtrData)
class RzList_RzRegItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzList_RzRegItem_length(self)

    def first(self):
        return _rizin.RzList_RzRegItem_first(self)

    def last(self):
        return _rizin.RzList_RzRegItem_last(self)

    def iterator(self):
        return _rizin.RzList_RzRegItem_iterator(self)

    def prepend(self, data):
        return _rizin.RzList_RzRegItem_prepend(self, data)

    def append(self, data):
        return _rizin.RzList_RzRegItem_append(self, data)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzListIterator(self)

    __swig_destroy__ = _rizin.delete_RzList_RzRegItem

# Register RzList_RzRegItem in _rizin:
_rizin.RzList_RzRegItem_swigregister(RzList_RzRegItem)
class RzVector_RzLineUndoEntry(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_RzLineUndoEntry_length(self)

    def head(self):
        return _rizin.RzVector_RzLineUndoEntry_head(self)

    def tail(self):
        return _rizin.RzVector_RzLineUndoEntry_tail(self)

    def at(self, index):
        return _rizin.RzVector_RzLineUndoEntry_at(self, index)

    def push(self, x):
        return _rizin.RzVector_RzLineUndoEntry_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_RzLineUndoEntry

# Register RzVector_RzLineUndoEntry in _rizin:
_rizin.RzVector_RzLineUndoEntry_swigregister(RzVector_RzLineUndoEntry)
class RzVector_RzAnalysisBaseClass(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_RzAnalysisBaseClass_length(self)

    def head(self):
        return _rizin.RzVector_RzAnalysisBaseClass_head(self)

    def tail(self):
        return _rizin.RzVector_RzAnalysisBaseClass_tail(self)

    def at(self, index):
        return _rizin.RzVector_RzAnalysisBaseClass_at(self, index)

    def push(self, x):
        return _rizin.RzVector_RzAnalysisBaseClass_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_RzAnalysisBaseClass

# Register RzVector_RzAnalysisBaseClass in _rizin:
_rizin.RzVector_RzAnalysisBaseClass_swigregister(RzVector_RzAnalysisBaseClass)
class RzVector_st16(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_st16_length(self)

    def head(self):
        return _rizin.RzVector_st16_head(self)

    def tail(self):
        return _rizin.RzVector_st16_tail(self)

    def at(self, index):
        return _rizin.RzVector_st16_at(self, index)

    def push(self, x):
        return _rizin.RzVector_st16_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_st16

# Register RzVector_st16 in _rizin:
_rizin.RzVector_st16_swigregister(RzVector_st16)
class RzVector_RzAnalysisMethod(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_RzAnalysisMethod_length(self)

    def head(self):
        return _rizin.RzVector_RzAnalysisMethod_head(self)

    def tail(self):
        return _rizin.RzVector_RzAnalysisMethod_tail(self)

    def at(self, index):
        return _rizin.RzVector_RzAnalysisMethod_at(self, index)

    def push(self, x):
        return _rizin.RzVector_RzAnalysisMethod_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_RzAnalysisMethod

# Register RzVector_RzAnalysisMethod in _rizin:
_rizin.RzVector_RzAnalysisMethod_swigregister(RzVector_RzAnalysisMethod)
class RzVector_RzAnalysisAddrHintRecord(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_RzAnalysisAddrHintRecord_length(self)

    def head(self):
        return _rizin.RzVector_RzAnalysisAddrHintRecord_head(self)

    def tail(self):
        return _rizin.RzVector_RzAnalysisAddrHintRecord_tail(self)

    def at(self, index):
        return _rizin.RzVector_RzAnalysisAddrHintRecord_at(self, index)

    def push(self, x):
        return _rizin.RzVector_RzAnalysisAddrHintRecord_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_RzAnalysisAddrHintRecord

# Register RzVector_RzAnalysisAddrHintRecord in _rizin:
_rizin.RzVector_RzAnalysisAddrHintRecord_swigregister(RzVector_RzAnalysisAddrHintRecord)
class RzVector_RzBinSectionMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_RzBinSectionMap_length(self)

    def head(self):
        return _rizin.RzVector_RzBinSectionMap_head(self)

    def tail(self):
        return _rizin.RzVector_RzBinSectionMap_tail(self)

    def at(self, index):
        return _rizin.RzVector_RzBinSectionMap_at(self, index)

    def push(self, x):
        return _rizin.RzVector_RzBinSectionMap_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_RzBinSectionMap

# Register RzVector_RzBinSectionMap in _rizin:
_rizin.RzVector_RzBinSectionMap_swigregister(RzVector_RzBinSectionMap)
class RzVector_ut64(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_ut64_length(self)

    def head(self):
        return _rizin.RzVector_ut64_head(self)

    def tail(self):
        return _rizin.RzVector_ut64_tail(self)

    def at(self, index):
        return _rizin.RzVector_ut64_at(self, index)

    def push(self, x):
        return _rizin.RzVector_ut64_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_ut64

# Register RzVector_ut64 in _rizin:
_rizin.RzVector_ut64_swigregister(RzVector_ut64)
class RzVector_RzAnalysisTaskItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_RzAnalysisTaskItem_length(self)

    def head(self):
        return _rizin.RzVector_RzAnalysisTaskItem_head(self)

    def tail(self):
        return _rizin.RzVector_RzAnalysisTaskItem_tail(self)

    def at(self, index):
        return _rizin.RzVector_RzAnalysisTaskItem_at(self, index)

    def push(self, x):
        return _rizin.RzVector_RzAnalysisTaskItem_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_RzAnalysisTaskItem

# Register RzVector_RzAnalysisTaskItem in _rizin:
_rizin.RzVector_RzAnalysisTaskItem_swigregister(RzVector_RzAnalysisTaskItem)
class RzVector_RzSearchValueRange(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_RzSearchValueRange_length(self)

    def head(self):
        return _rizin.RzVector_RzSearchValueRange_head(self)

    def tail(self):
        return _rizin.RzVector_RzSearchValueRange_tail(self)

    def at(self, index):
        return _rizin.RzVector_RzSearchValueRange_at(self, index)

    def push(self, x):
        return _rizin.RzVector_RzSearchValueRange_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_RzSearchValueRange

# Register RzVector_RzSearchValueRange in _rizin:
_rizin.RzVector_RzSearchValueRange_swigregister(RzVector_RzSearchValueRange)
class RzVector_RzAnalysisVTable(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzVector_RzAnalysisVTable_length(self)

    def head(self):
        return _rizin.RzVector_RzAnalysisVTable_head(self)

    def tail(self):
        return _rizin.RzVector_RzAnalysisVTable_tail(self)

    def at(self, index):
        return _rizin.RzVector_RzAnalysisVTable_at(self, index)

    def push(self, x):
        return _rizin.RzVector_RzAnalysisVTable_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzVector_RzAnalysisVTable

# Register RzVector_RzAnalysisVTable in _rizin:
_rizin.RzVector_RzAnalysisVTable_swigregister(RzVector_RzAnalysisVTable)
class RzPVector_RzBinString(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinString_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinString_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinString_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinString_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinString_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinString

# Register RzPVector_RzBinString in _rizin:
_rizin.RzPVector_RzBinString_swigregister(RzPVector_RzBinString)
class RzPVector_RzBinFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinFile_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinFile_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinFile_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinFile_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinFile_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinFile

# Register RzPVector_RzBinFile in _rizin:
_rizin.RzPVector_RzBinFile_swigregister(RzPVector_RzBinFile)
class RzPVector_char(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_char_length(self)

    def head(self):
        return _rizin.RzPVector_char_head(self)

    def tail(self):
        return _rizin.RzPVector_char_tail(self)

    def at(self, index):
        return _rizin.RzPVector_char_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_char_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_char

# Register RzPVector_char in _rizin:
_rizin.RzPVector_char_swigregister(RzPVector_char)
class RzPVector_RzIODesc(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzIODesc_length(self)

    def head(self):
        return _rizin.RzPVector_RzIODesc_head(self)

    def tail(self):
        return _rizin.RzPVector_RzIODesc_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzIODesc_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzIODesc_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzIODesc

# Register RzPVector_RzIODesc in _rizin:
_rizin.RzPVector_RzIODesc_swigregister(RzPVector_RzIODesc)
class RzPVector_RzIOMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzIOMap_length(self)

    def head(self):
        return _rizin.RzPVector_RzIOMap_head(self)

    def tail(self):
        return _rizin.RzPVector_RzIOMap_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzIOMap_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzIOMap_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzIOMap

# Register RzPVector_RzIOMap in _rizin:
_rizin.RzPVector_RzIOMap_swigregister(RzPVector_RzIOMap)
class RzPVector_RzBinResource(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinResource_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinResource_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinResource_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinResource_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinResource_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinResource

# Register RzPVector_RzBinResource in _rizin:
_rizin.RzPVector_RzBinResource_swigregister(RzPVector_RzBinResource)
class RzPVector_RzCoreDisasmOp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzCoreDisasmOp_length(self)

    def head(self):
        return _rizin.RzPVector_RzCoreDisasmOp_head(self)

    def tail(self):
        return _rizin.RzPVector_RzCoreDisasmOp_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzCoreDisasmOp_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzCoreDisasmOp_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzCoreDisasmOp

# Register RzPVector_RzCoreDisasmOp in _rizin:
_rizin.RzPVector_RzCoreDisasmOp_swigregister(RzPVector_RzCoreDisasmOp)
class RzPVector_RzBinField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinField_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinField_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinField_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinField_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinField_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinField

# Register RzPVector_RzBinField in _rizin:
_rizin.RzPVector_RzBinField_swigregister(RzPVector_RzBinField)
class RzPVector_RzBinSymbol(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinSymbol_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinSymbol_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinSymbol_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinSymbol_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinSymbol_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinSymbol

# Register RzPVector_RzBinSymbol in _rizin:
_rizin.RzPVector_RzBinSymbol_swigregister(RzPVector_RzBinSymbol)
class RzPVector_RzBinSection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinSection_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinSection_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinSection_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinSection_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinSection_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinSection

# Register RzPVector_RzBinSection in _rizin:
_rizin.RzPVector_RzBinSection_swigregister(RzPVector_RzBinSection)
class RzPVector_RzIOCache(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzIOCache_length(self)

    def head(self):
        return _rizin.RzPVector_RzIOCache_head(self)

    def tail(self):
        return _rizin.RzPVector_RzIOCache_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzIOCache_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzIOCache_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzIOCache

# Register RzPVector_RzIOCache in _rizin:
_rizin.RzPVector_RzIOCache_swigregister(RzPVector_RzIOCache)
class RzPVector_RzBinAddr(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinAddr_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinAddr_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinAddr_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinAddr_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinAddr_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinAddr

# Register RzPVector_RzBinAddr in _rizin:
_rizin.RzPVector_RzBinAddr_swigregister(RzPVector_RzBinAddr)
class RzPVector_RzBinVirtualFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinVirtualFile_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinVirtualFile_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinVirtualFile_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinVirtualFile_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinVirtualFile_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinVirtualFile

# Register RzPVector_RzBinVirtualFile in _rizin:
_rizin.RzPVector_RzBinVirtualFile_swigregister(RzPVector_RzBinVirtualFile)
class RzPVector_RzAnalysisVar(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzAnalysisVar_length(self)

    def head(self):
        return _rizin.RzPVector_RzAnalysisVar_head(self)

    def tail(self):
        return _rizin.RzPVector_RzAnalysisVar_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzAnalysisVar_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzAnalysisVar_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzAnalysisVar

# Register RzPVector_RzAnalysisVar in _rizin:
_rizin.RzPVector_RzAnalysisVar_swigregister(RzPVector_RzAnalysisVar)
class RzPVector_RzBinClass(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinClass_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinClass_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinClass_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinClass_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinClass_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinClass

# Register RzPVector_RzBinClass in _rizin:
_rizin.RzPVector_RzBinClass_swigregister(RzPVector_RzBinClass)
class RzPVector_RzAnalysisBlock(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzAnalysisBlock_length(self)

    def head(self):
        return _rizin.RzPVector_RzAnalysisBlock_head(self)

    def tail(self):
        return _rizin.RzPVector_RzAnalysisBlock_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzAnalysisBlock_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzAnalysisBlock_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzAnalysisBlock

# Register RzPVector_RzAnalysisBlock in _rizin:
_rizin.RzPVector_RzAnalysisBlock_swigregister(RzPVector_RzAnalysisBlock)
class RzPVector_RzBinTrycatch(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinTrycatch_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinTrycatch_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinTrycatch_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinTrycatch_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinTrycatch_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinTrycatch

# Register RzPVector_RzBinTrycatch in _rizin:
_rizin.RzPVector_RzBinTrycatch_swigregister(RzPVector_RzBinTrycatch)
class RzPVector_RzBinFileHash(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinFileHash_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinFileHash_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinFileHash_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinFileHash_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinFileHash_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinFileHash

# Register RzPVector_RzBinFileHash in _rizin:
_rizin.RzPVector_RzBinFileHash_swigregister(RzPVector_RzBinFileHash)
class RzPVector_RzBinReloc(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinReloc_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinReloc_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinReloc_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinReloc_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinReloc_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinReloc

# Register RzPVector_RzBinReloc in _rizin:
_rizin.RzPVector_RzBinReloc_swigregister(RzPVector_RzBinReloc)
class RzPVector_RzBinMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinMap_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinMap_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinMap_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinMap_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinMap_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinMap

# Register RzPVector_RzBinMap in _rizin:
_rizin.RzPVector_RzBinMap_swigregister(RzPVector_RzBinMap)
class RzPVector_SdbKv(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_SdbKv_length(self)

    def head(self):
        return _rizin.RzPVector_SdbKv_head(self)

    def tail(self):
        return _rizin.RzPVector_SdbKv_tail(self)

    def at(self, index):
        return _rizin.RzPVector_SdbKv_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_SdbKv_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_SdbKv

# Register RzPVector_SdbKv in _rizin:
_rizin.RzPVector_SdbKv_swigregister(RzPVector_SdbKv)
class RzPVector_RzBinMem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinMem_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinMem_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinMem_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinMem_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinMem_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinMem

# Register RzPVector_RzBinMem in _rizin:
_rizin.RzPVector_RzBinMem_swigregister(RzPVector_RzBinMem)
class RzPVector_RzBinImport(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def length(self):
        return _rizin.RzPVector_RzBinImport_length(self)

    def head(self):
        return _rizin.RzPVector_RzBinImport_head(self)

    def tail(self):
        return _rizin.RzPVector_RzBinImport_tail(self)

    def at(self, index):
        return _rizin.RzPVector_RzBinImport_at(self, index)

    def push(self, x):
        return _rizin.RzPVector_RzBinImport_push(self, x)

    def __len__(self):
        return self.length()


    def __iter__(self):
        return RzPVectorIterator(self)

    __swig_destroy__ = _rizin.delete_RzPVector_RzBinImport

# Register RzPVector_RzBinImport in _rizin:
_rizin.RzPVector_RzBinImport_swigregister(RzPVector_RzBinImport)
class RzAnalysis(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    core = property(_rizin.RzAnalysis_core_get, _rizin.RzAnalysis_core_set)
    ptr_alignment_I = property(_rizin.RzAnalysis_ptr_alignment_I_get, _rizin.RzAnalysis_ptr_alignment_I_set)
    cpu = property(_rizin.RzAnalysis_cpu_get, _rizin.RzAnalysis_cpu_set)
    os = property(_rizin.RzAnalysis_os_get, _rizin.RzAnalysis_os_set)
    bits = property(_rizin.RzAnalysis_bits_get, _rizin.RzAnalysis_bits_set)
    lineswidth = property(_rizin.RzAnalysis_lineswidth_get, _rizin.RzAnalysis_lineswidth_set)
    big_endian = property(_rizin.RzAnalysis_big_endian_get, _rizin.RzAnalysis_big_endian_set)
    sleep = property(_rizin.RzAnalysis_sleep_get, _rizin.RzAnalysis_sleep_set)
    cpp_abi = property(_rizin.RzAnalysis_cpp_abi_get, _rizin.RzAnalysis_cpp_abi_set)
    plugin_data = property(_rizin.RzAnalysis_plugin_data_get, _rizin.RzAnalysis_plugin_data_set)
    gp = property(_rizin.RzAnalysis_gp_get, _rizin.RzAnalysis_gp_set)
    bb_tree = property(_rizin.RzAnalysis_bb_tree_get, _rizin.RzAnalysis_bb_tree_set)
    fcns = property(_rizin.RzAnalysis_fcns_get, _rizin.RzAnalysis_fcns_set)
    ht_addr_fun = property(_rizin.RzAnalysis_ht_addr_fun_get, _rizin.RzAnalysis_ht_addr_fun_set)
    ht_name_fun = property(_rizin.RzAnalysis_ht_name_fun_get, _rizin.RzAnalysis_ht_name_fun_set)
    reg = property(_rizin.RzAnalysis_reg_get, _rizin.RzAnalysis_reg_set)
    last_disasm_reg = property(_rizin.RzAnalysis_last_disasm_reg_get, _rizin.RzAnalysis_last_disasm_reg_set)
    syscall = property(_rizin.RzAnalysis_syscall_get, _rizin.RzAnalysis_syscall_set)
    iob = property(_rizin.RzAnalysis_iob_get, _rizin.RzAnalysis_iob_set)
    flb = property(_rizin.RzAnalysis_flb_get, _rizin.RzAnalysis_flb_set)
    flg_class_set = property(_rizin.RzAnalysis_flg_class_set_get, _rizin.RzAnalysis_flg_class_set_set)
    flg_class_get = property(_rizin.RzAnalysis_flg_class_get_get, _rizin.RzAnalysis_flg_class_get_set)
    flg_fcn_set = property(_rizin.RzAnalysis_flg_fcn_set_get, _rizin.RzAnalysis_flg_fcn_set_set)
    binb = property(_rizin.RzAnalysis_binb_get, _rizin.RzAnalysis_binb_set)
    coreb = property(_rizin.RzAnalysis_coreb_get, _rizin.RzAnalysis_coreb_set)
    maxreflines = property(_rizin.RzAnalysis_maxreflines_get, _rizin.RzAnalysis_maxreflines_set)
    esil_goto_limit = property(_rizin.RzAnalysis_esil_goto_limit_get, _rizin.RzAnalysis_esil_goto_limit_set)
    pcalign = property(_rizin.RzAnalysis_pcalign_get, _rizin.RzAnalysis_pcalign_set)
    esil = property(_rizin.RzAnalysis_esil_get, _rizin.RzAnalysis_esil_set)
    esilinterstate = property(_rizin.RzAnalysis_esilinterstate_get, _rizin.RzAnalysis_esilinterstate_set)
    il_vm = property(_rizin.RzAnalysis_il_vm_get, _rizin.RzAnalysis_il_vm_set)
    cur = property(_rizin.RzAnalysis_cur_get, _rizin.RzAnalysis_cur_set)
    limit = property(_rizin.RzAnalysis_limit_get, _rizin.RzAnalysis_limit_set)
    plugins = property(_rizin.RzAnalysis_plugins_get, _rizin.RzAnalysis_plugins_set)
    sdb_noret = property(_rizin.RzAnalysis_sdb_noret_get, _rizin.RzAnalysis_sdb_noret_set)
    sdb_fmts = property(_rizin.RzAnalysis_sdb_fmts_get, _rizin.RzAnalysis_sdb_fmts_set)
    ht_xrefs_from = property(_rizin.RzAnalysis_ht_xrefs_from_get, _rizin.RzAnalysis_ht_xrefs_from_set)
    ht_xrefs_to = property(_rizin.RzAnalysis_ht_xrefs_to_get, _rizin.RzAnalysis_ht_xrefs_to_set)
    recursive_noreturn = property(_rizin.RzAnalysis_recursive_noreturn_get, _rizin.RzAnalysis_recursive_noreturn_set)
    sdb = property(_rizin.RzAnalysis_sdb_get, _rizin.RzAnalysis_sdb_set)
    addr_hints = property(_rizin.RzAnalysis_addr_hints_get, _rizin.RzAnalysis_addr_hints_set)
    arch_hints = property(_rizin.RzAnalysis_arch_hints_get, _rizin.RzAnalysis_arch_hints_set)
    bits_hints = property(_rizin.RzAnalysis_bits_hints_get, _rizin.RzAnalysis_bits_hints_set)
    hint_cbs = property(_rizin.RzAnalysis_hint_cbs_get, _rizin.RzAnalysis_hint_cbs_set)
    meta = property(_rizin.RzAnalysis_meta_get, _rizin.RzAnalysis_meta_set)
    meta_spaces = property(_rizin.RzAnalysis_meta_spaces_get, _rizin.RzAnalysis_meta_spaces_set)
    typedb = property(_rizin.RzAnalysis_typedb_get, _rizin.RzAnalysis_typedb_set)
    sdb_cc = property(_rizin.RzAnalysis_sdb_cc_get, _rizin.RzAnalysis_sdb_cc_set)
    sdb_classes = property(_rizin.RzAnalysis_sdb_classes_get, _rizin.RzAnalysis_sdb_classes_set)
    sdb_classes_attrs = property(_rizin.RzAnalysis_sdb_classes_attrs_get, _rizin.RzAnalysis_sdb_classes_attrs_set)
    cb = property(_rizin.RzAnalysis_cb_get, _rizin.RzAnalysis_cb_set)
    opt = property(_rizin.RzAnalysis_opt_get, _rizin.RzAnalysis_opt_set)
    reflines = property(_rizin.RzAnalysis_reflines_get, _rizin.RzAnalysis_reflines_set)
    columnSort = property(_rizin.RzAnalysis_columnSort_get, _rizin.RzAnalysis_columnSort_set)
    log = property(_rizin.RzAnalysis_log_get, _rizin.RzAnalysis_log_set)
    read_at = property(_rizin.RzAnalysis_read_at_get, _rizin.RzAnalysis_read_at_set)
    seggrn = property(_rizin.RzAnalysis_seggrn_get, _rizin.RzAnalysis_seggrn_set)
    flag_get = property(_rizin.RzAnalysis_flag_get_get, _rizin.RzAnalysis_flag_get_set)
    ev = property(_rizin.RzAnalysis_ev_get, _rizin.RzAnalysis_ev_set)
    imports = property(_rizin.RzAnalysis_imports_get, _rizin.RzAnalysis_imports_set)
    visited = property(_rizin.RzAnalysis_visited_get, _rizin.RzAnalysis_visited_set)
    constpool = property(_rizin.RzAnalysis_constpool_get, _rizin.RzAnalysis_constpool_set)
    arch_target = property(_rizin.RzAnalysis_arch_target_get, _rizin.RzAnalysis_arch_target_set)
    platform_target = property(_rizin.RzAnalysis_platform_target_get, _rizin.RzAnalysis_platform_target_set)
    ht_global_var = property(_rizin.RzAnalysis_ht_global_var_get, _rizin.RzAnalysis_ht_global_var_set)
    ht_rop_semantics = property(_rizin.RzAnalysis_ht_rop_semantics_get, _rizin.RzAnalysis_ht_rop_semantics_set)
    ht_rop = property(_rizin.RzAnalysis_ht_rop_get, _rizin.RzAnalysis_ht_rop_set)
    is_rop_analysis = property(_rizin.RzAnalysis_is_rop_analysis_get, _rizin.RzAnalysis_is_rop_analysis_set)
    global_var_tree = property(_rizin.RzAnalysis_global_var_tree_get, _rizin.RzAnalysis_global_var_tree_set)
    hash = property(_rizin.RzAnalysis_hash_get, _rizin.RzAnalysis_hash_set)
    debug_info = property(_rizin.RzAnalysis_debug_info_get, _rizin.RzAnalysis_debug_info_set)
    sdb_types_path = property(_rizin.RzAnalysis_sdb_types_path_get, _rizin.RzAnalysis_sdb_types_path_set)
    cmpval = property(_rizin.RzAnalysis_cmpval_get, _rizin.RzAnalysis_cmpval_set)
    lea_jmptbl_ip = property(_rizin.RzAnalysis_lea_jmptbl_ip_get, _rizin.RzAnalysis_lea_jmptbl_ip_set)

    @staticmethod
    def var_storage_init_composite(sto):
        return _rizin.RzAnalysis_var_storage_init_composite(sto)

    @staticmethod
    def ref_type_tostring(t):
        return _rizin.RzAnalysis_ref_type_tostring(t)

    @staticmethod
    def esil_sources_init(esil):
        return _rizin.RzAnalysis_esil_sources_init(esil)

    @staticmethod
    def esil_load_source(esil, path):
        return _rizin.RzAnalysis_esil_load_source(esil, path)

    @staticmethod
    def esil_get_source(esil, src_id):
        return _rizin.RzAnalysis_esil_get_source(esil, src_id)

    @staticmethod
    def esil_claim_source(esil, src_id):
        return _rizin.RzAnalysis_esil_claim_source(esil, src_id)

    @staticmethod
    def esil_release_source(esil, src_id):
        return _rizin.RzAnalysis_esil_release_source(esil, src_id)

    @staticmethod
    def esil_sources_fini(esil):
        return _rizin.RzAnalysis_esil_sources_fini(esil)

    @staticmethod
    def datatype_to_string(t):
        return _rizin.RzAnalysis_datatype_to_string(t)

    @staticmethod
    def op_nonlinear(t):
        return _rizin.RzAnalysis_op_nonlinear(t)

    @staticmethod
    def op_ismemref(t):
        return _rizin.RzAnalysis_op_ismemref(t)

    @staticmethod
    def optype_to_string(t):
        return _rizin.RzAnalysis_optype_to_string(t)

    @staticmethod
    def optype_from_string(type):
        return _rizin.RzAnalysis_optype_from_string(type)

    @staticmethod
    def op_family_to_string(n):
        return _rizin.RzAnalysis_op_family_to_string(n)

    @staticmethod
    def op_family_from_string(f):
        return _rizin.RzAnalysis_op_family_from_string(f)

    @staticmethod
    def op_hint(op, hint):
        return _rizin.RzAnalysis_op_hint(op, hint)

    @staticmethod
    def block_ref(bb):
        return _rizin.RzAnalysis_block_ref(bb)

    @staticmethod
    def block_unref(bb):
        return _rizin.RzAnalysis_block_unref(bb)

    @staticmethod
    def block_split(bb, addr):
        return _rizin.RzAnalysis_block_split(bb, addr)

    @staticmethod
    def block_merge(a, b):
        return _rizin.RzAnalysis_block_merge(a, b)

    @staticmethod
    def delete_block(bb):
        return _rizin.RzAnalysis_delete_block(bb)

    @staticmethod
    def block_set_size(block, size):
        return _rizin.RzAnalysis_block_set_size(block, size)

    @staticmethod
    def block_relocate(block, addr, size):
        return _rizin.RzAnalysis_block_relocate(block, addr, size)

    @staticmethod
    def block_successor_addrs_foreach(block, cb, user):
        return _rizin.RzAnalysis_block_successor_addrs_foreach(block, cb, user)

    @staticmethod
    def block_recurse(block, cb, user):
        return _rizin.RzAnalysis_block_recurse(block, cb, user)

    @staticmethod
    def block_recurse_followthrough(block, cb, user):
        return _rizin.RzAnalysis_block_recurse_followthrough(block, cb, user)

    @staticmethod
    def block_recurse_depth_first(block, cb, on_exit, user):
        return _rizin.RzAnalysis_block_recurse_depth_first(block, cb, on_exit, user)

    @staticmethod
    def block_recurse_list(block):
        return _rizin.RzAnalysis_block_recurse_list(block)

    @staticmethod
    def block_shortest_path(block, dst):
        return _rizin.RzAnalysis_block_shortest_path(block, dst)

    @staticmethod
    def block_add_switch_case(block, switch_addr, case_value, case_addr):
        return _rizin.RzAnalysis_block_add_switch_case(block, switch_addr, case_value, case_addr)

    @staticmethod
    def block_chop_noreturn(block, addr):
        return _rizin.RzAnalysis_block_chop_noreturn(block, addr)

    @staticmethod
    def block_automerge(blocks):
        return _rizin.RzAnalysis_block_automerge(blocks)

    @staticmethod
    def block_op_starts_at(block, addr):
        return _rizin.RzAnalysis_block_op_starts_at(block, addr)

    @staticmethod
    def block_update_hash(block):
        return _rizin.RzAnalysis_block_update_hash(block)

    @staticmethod
    def block_was_modified(block):
        return _rizin.RzAnalysis_block_was_modified(block)

    @staticmethod
    def block_get_op_offset(block, i):
        return _rizin.RzAnalysis_block_get_op_offset(block, i)

    @staticmethod
    def block_get_op_addr(block, i):
        return _rizin.RzAnalysis_block_get_op_addr(block, i)

    @staticmethod
    def block_get_op_index_in(bb, addr):
        return _rizin.RzAnalysis_block_get_op_index_in(bb, addr)

    @staticmethod
    def block_get_op_addr_in(bb, addr):
        return _rizin.RzAnalysis_block_get_op_addr_in(bb, addr)

    @staticmethod
    def block_set_op_offset(block, i, v):
        return _rizin.RzAnalysis_block_set_op_offset(block, i, v)

    @staticmethod
    def block_get_op_size(bb, i):
        return _rizin.RzAnalysis_block_get_op_size(bb, i)

    @staticmethod
    def block_get_op_sp_delta(bb, i):
        return _rizin.RzAnalysis_block_get_op_sp_delta(bb, i)

    @staticmethod
    def block_set_op_sp_delta(bb, i, delta):
        return _rizin.RzAnalysis_block_set_op_sp_delta(bb, i, delta)

    @staticmethod
    def block_get_sp_delta_at(bb, addr):
        return _rizin.RzAnalysis_block_get_sp_delta_at(bb, addr)

    @staticmethod
    def block_get_sp_delta_at_end(bb):
        return _rizin.RzAnalysis_block_get_sp_delta_at_end(bb)

    @staticmethod
    def block_get_sp_at_end(bb):
        return _rizin.RzAnalysis_block_get_sp_at_end(bb)

    @staticmethod
    def block_get_sp_at(bb, addr):
        return _rizin.RzAnalysis_block_get_sp_at(bb, addr)

    @staticmethod
    def block_analyze_ops(block):
        return _rizin.RzAnalysis_block_analyze_ops(block)

    @staticmethod
    def function_free(fcn):
        return _rizin.RzAnalysis_function_free(fcn)

    @staticmethod
    def function_is_autonamed(name):
        return _rizin.RzAnalysis_function_is_autonamed(name)

    @staticmethod
    def function_name_guess(typedb, name):
        return _rizin.RzAnalysis_function_name_guess(typedb, name)

    @staticmethod
    def new(sdb_types_path):
        return _rizin.RzAnalysis_new(sdb_types_path)

    @staticmethod
    def fcntype_tostring(type):
        return _rizin.RzAnalysis_fcntype_tostring(type)

    @staticmethod
    def stackop_tostring(s):
        return _rizin.RzAnalysis_stackop_tostring(s)

    @staticmethod
    def op_apply_sp_effect(op, sp):
        return _rizin.RzAnalysis_op_apply_sp_effect(op, sp)

    @staticmethod
    def op_describe_sp_effect(op):
        return _rizin.RzAnalysis_op_describe_sp_effect(op)

    @staticmethod
    def op_new():
        return _rizin.RzAnalysis_op_new()

    @staticmethod
    def op_free(op):
        return _rizin.RzAnalysis_op_free(op)

    @staticmethod
    def op_init(op):
        return _rizin.RzAnalysis_op_init(op)

    @staticmethod
    def op_fini(op):
        return _rizin.RzAnalysis_op_fini(op)

    @staticmethod
    def op_is_eob(op):
        return _rizin.RzAnalysis_op_is_eob(op)

    @staticmethod
    def op_list_new():
        return _rizin.RzAnalysis_op_list_new()

    @staticmethod
    def esil_new(stacksize, iotrap, addrsize):
        return _rizin.RzAnalysis_esil_new(stacksize, iotrap, addrsize)

    @staticmethod
    def esil_set_pc(esil, addr):
        return _rizin.RzAnalysis_esil_set_pc(esil, addr)

    @staticmethod
    def esil_setup(esil, analysis, romem, stats, nonull):
        return _rizin.RzAnalysis_esil_setup(esil, analysis, romem, stats, nonull)

    @staticmethod
    def esil_free(esil):
        return _rizin.RzAnalysis_esil_free(esil)

    @staticmethod
    def esil_runword(esil, word):
        return _rizin.RzAnalysis_esil_runword(esil, word)

    @staticmethod
    def esil_parse(esil, str):
        return _rizin.RzAnalysis_esil_parse(esil, str)

    @staticmethod
    def esil_mem_read(esil, addr, buf):
        return _rizin.RzAnalysis_esil_mem_read(esil, addr, buf)

    @staticmethod
    def esil_mem_write(esil, addr, buf):
        return _rizin.RzAnalysis_esil_mem_write(esil, addr, buf)

    @staticmethod
    def esil_reg_read(esil, regname, num, size):
        return _rizin.RzAnalysis_esil_reg_read(esil, regname, num, size)

    @staticmethod
    def esil_reg_write(esil, dst, num):
        return _rizin.RzAnalysis_esil_reg_write(esil, dst, num)

    @staticmethod
    def esil_pushnum(esil, num):
        return _rizin.RzAnalysis_esil_pushnum(esil, num)

    @staticmethod
    def esil_push(esil, str):
        return _rizin.RzAnalysis_esil_push(esil, str)

    @staticmethod
    def esil_pop(esil):
        return _rizin.RzAnalysis_esil_pop(esil)

    @staticmethod
    def esil_trapstr(type):
        return _rizin.RzAnalysis_esil_trapstr(type)

    @staticmethod
    def esil_set_op(esil, op, code, push, pop, type):
        return _rizin.RzAnalysis_esil_set_op(esil, op, code, push, pop, type)

    @staticmethod
    def esil_stack_free(esil):
        return _rizin.RzAnalysis_esil_stack_free(esil)

    @staticmethod
    def esil_get_parm_type(esil, str):
        return _rizin.RzAnalysis_esil_get_parm_type(esil, str)

    @staticmethod
    def esil_get_parm(esil, str, num):
        return _rizin.RzAnalysis_esil_get_parm(esil, str, num)

    @staticmethod
    def esil_condition(esil, str):
        return _rizin.RzAnalysis_esil_condition(esil, str)

    @staticmethod
    def esil_interrupts_init(esil):
        return _rizin.RzAnalysis_esil_interrupts_init(esil)

    @staticmethod
    def esil_interrupt_new(esil, src_id, ih):
        return _rizin.RzAnalysis_esil_interrupt_new(esil, src_id, ih)

    @staticmethod
    def esil_interrupt_free(esil, intr):
        return _rizin.RzAnalysis_esil_interrupt_free(esil, intr)

    @staticmethod
    def esil_set_interrupt(esil, intr):
        return _rizin.RzAnalysis_esil_set_interrupt(esil, intr)

    @staticmethod
    def esil_fire_interrupt(esil, intr_num):
        return _rizin.RzAnalysis_esil_fire_interrupt(esil, intr_num)

    @staticmethod
    def esil_load_interrupts(esil, handlers, src_id):
        return _rizin.RzAnalysis_esil_load_interrupts(esil, handlers, src_id)

    @staticmethod
    def esil_load_interrupts_from_lib(esil, path):
        return _rizin.RzAnalysis_esil_load_interrupts_from_lib(esil, path)

    @staticmethod
    def esil_interrupts_fini(esil):
        return _rizin.RzAnalysis_esil_interrupts_fini(esil)

    @staticmethod
    def esil_mem_ro(esil, mem_readonly):
        return _rizin.RzAnalysis_esil_mem_ro(esil, mem_readonly)

    @staticmethod
    def esil_stats(esil, enable):
        return _rizin.RzAnalysis_esil_stats(esil, enable)

    @staticmethod
    def il_trace_instruction_new(addr):
        return _rizin.RzAnalysis_il_trace_instruction_new(addr)

    @staticmethod
    def il_trace_instruction_free(instruction):
        return _rizin.RzAnalysis_il_trace_instruction_free(instruction)

    @staticmethod
    def il_trace_add_mem(trace, mem):
        return _rizin.RzAnalysis_il_trace_add_mem(trace, mem)

    @staticmethod
    def il_trace_add_reg(trace, reg):
        return _rizin.RzAnalysis_il_trace_add_reg(trace, reg)

    @staticmethod
    def il_get_mem_op_trace(trace, addr, op_type):
        return _rizin.RzAnalysis_il_get_mem_op_trace(trace, addr, op_type)

    @staticmethod
    def il_get_reg_op_trace(trace, regname, op_type):
        return _rizin.RzAnalysis_il_get_reg_op_trace(trace, regname, op_type)

    @staticmethod
    def il_mem_trace_contains(trace, addr, op_type):
        return _rizin.RzAnalysis_il_mem_trace_contains(trace, addr, op_type)

    @staticmethod
    def il_reg_trace_contains(trace, regname, op_type):
        return _rizin.RzAnalysis_il_reg_trace_contains(trace, regname, op_type)

    @staticmethod
    def esil_get_instruction_trace(etrace, idx):
        return _rizin.RzAnalysis_esil_get_instruction_trace(etrace, idx)

    @staticmethod
    def esil_trace_new(esil):
        return _rizin.RzAnalysis_esil_trace_new(esil)

    @staticmethod
    def esil_trace_free(trace):
        return _rizin.RzAnalysis_esil_trace_free(trace)

    @staticmethod
    def esil_trace_op(esil, op):
        return _rizin.RzAnalysis_esil_trace_op(esil, op)

    @staticmethod
    def esil_trace_list(esil):
        return _rizin.RzAnalysis_esil_trace_list(esil)

    @staticmethod
    def esil_trace_show(esil, idx):
        return _rizin.RzAnalysis_esil_trace_show(esil, idx)

    @staticmethod
    def esil_trace_restore(esil, idx):
        return _rizin.RzAnalysis_esil_trace_restore(esil, idx)

    @staticmethod
    def il_init_state_new():
        return _rizin.RzAnalysis_il_init_state_new()

    @staticmethod
    def il_init_state_free(state):
        return _rizin.RzAnalysis_il_init_state_free(state)

    @staticmethod
    def il_init_state_set_var(state, name, val):
        return _rizin.RzAnalysis_il_init_state_set_var(state, name, val)

    @staticmethod
    def il_config_new(pc_size, big_endian, mem_key_size):
        return _rizin.RzAnalysis_il_config_new(pc_size, big_endian, mem_key_size)

    @staticmethod
    def il_config_free(cfg):
        return _rizin.RzAnalysis_il_config_free(cfg)

    @staticmethod
    def il_config_add_label(cfg, label):
        return _rizin.RzAnalysis_il_config_add_label(cfg, label)

    @staticmethod
    def il_vm_free(vm):
        return _rizin.RzAnalysis_il_vm_free(vm)

    @staticmethod
    def il_vm_sync_from_reg(vm, reg):
        return _rizin.RzAnalysis_il_vm_sync_from_reg(vm, reg)

    @staticmethod
    def il_vm_sync_to_reg(vm, reg):
        return _rizin.RzAnalysis_il_vm_sync_to_reg(vm, reg)

    @staticmethod
    def rzil_trace_free(trace):
        return _rizin.RzAnalysis_rzil_trace_free(trace)

    @staticmethod
    def add_device_peripheral_map(o, analysis):
        return _rizin.RzAnalysis_add_device_peripheral_map(o, analysis)

    @staticmethod
    def run_tasks(tasks):
        return _rizin.RzAnalysis_run_tasks(tasks)

    @staticmethod
    def xref_list_new():
        return _rizin.RzAnalysis_xref_list_new()

    @staticmethod
    def xrefs_type_tostring(type):
        return _rizin.RzAnalysis_xrefs_type_tostring(type)

    @staticmethod
    def xrefs_type(ch):
        return _rizin.RzAnalysis_xrefs_type(ch)

    @staticmethod
    def var_is_arg(var):
        return _rizin.RzAnalysis_var_is_arg(var)

    @staticmethod
    def var_local_count(fcn):
        return _rizin.RzAnalysis_var_local_count(fcn)

    @staticmethod
    def arg_count(fcn):
        return _rizin.RzAnalysis_arg_count(fcn)

    @staticmethod
    def var_init(var):
        return _rizin.RzAnalysis_var_init(var)

    @staticmethod
    def var_fini(var):
        return _rizin.RzAnalysis_var_fini(var)

    @staticmethod
    def var_new():
        return _rizin.RzAnalysis_var_new()

    @staticmethod
    def var_free(var):
        return _rizin.RzAnalysis_var_free(var)

    @staticmethod
    def var_rename(var, new_name, verbose):
        return _rizin.RzAnalysis_var_rename(var, new_name, verbose)

    @staticmethod
    def var_resolve_overlaps(var):
        return _rizin.RzAnalysis_var_resolve_overlaps(var)

    @staticmethod
    def var_set_type(var, type, resolve_overlaps):
        return _rizin.RzAnalysis_var_set_type(var, type, resolve_overlaps)

    @staticmethod
    def var_delete(var):
        return _rizin.RzAnalysis_var_delete(var)

    @staticmethod
    def var_set_access(var, reg, access_addr, access_type, reg_addend):
        return _rizin.RzAnalysis_var_set_access(var, reg, access_addr, access_type, reg_addend)

    @staticmethod
    def var_remove_access_at(var, address):
        return _rizin.RzAnalysis_var_remove_access_at(var, address)

    @staticmethod
    def var_clear_accesses(var):
        return _rizin.RzAnalysis_var_clear_accesses(var)

    @staticmethod
    def var_add_constraint(var, constraint):
        return _rizin.RzAnalysis_var_add_constraint(var, constraint)

    @staticmethod
    def var_get_constraints_readable(var):
        return _rizin.RzAnalysis_var_get_constraints_readable(var)

    @staticmethod
    def var_storage_cmp(a, b):
        return _rizin.RzAnalysis_var_storage_cmp(a, b)

    @staticmethod
    def var_storage_equals(a, b):
        return _rizin.RzAnalysis_var_storage_equals(a, b)

    @staticmethod
    def var_get_access_at(var, addr):
        return _rizin.RzAnalysis_var_get_access_at(var, addr)

    @staticmethod
    def var_get_argnum(var):
        return _rizin.RzAnalysis_var_get_argnum(var)

    @staticmethod
    def var_storage_type_to_string(type):
        return _rizin.RzAnalysis_var_storage_type_to_string(type)

    @staticmethod
    def var_storage_type_from_string(type_str, type):
        return _rizin.RzAnalysis_var_storage_type_from_string(type_str, type)

    @staticmethod
    def var_storage_dump_pj(pj, var, storage):
        return _rizin.RzAnalysis_var_storage_dump_pj(pj, var, storage)

    @staticmethod
    def var_storage_piece_fini(p):
        return _rizin.RzAnalysis_var_storage_piece_fini(p)

    @staticmethod
    def var_storage_fini(sto):
        return _rizin.RzAnalysis_var_storage_fini(sto)

    @staticmethod
    def var_storage_free(sto):
        return _rizin.RzAnalysis_var_storage_free(sto)

    @staticmethod
    def var_get_dst_var(var):
        return _rizin.RzAnalysis_var_get_dst_var(var)

    @staticmethod
    def fcn_vars_cache_fini(cache):
        return _rizin.RzAnalysis_fcn_vars_cache_fini(cache)

    @staticmethod
    def var_global_new(name, addr):
        return _rizin.RzAnalysis_var_global_new(name, addr)

    @staticmethod
    def var_global_free(glob):
        return _rizin.RzAnalysis_var_global_free(glob)

    @staticmethod
    def var_global_get_flag_item(glob):
        return _rizin.RzAnalysis_var_global_get_flag_item(glob)

    @staticmethod
    def var_global_set_type(glob, type):
        return _rizin.RzAnalysis_var_global_set_type(glob, type)

    @staticmethod
    def var_global_add_constraint(glob, constraint):
        return _rizin.RzAnalysis_var_global_add_constraint(glob, constraint)

    @staticmethod
    def var_global_get_constraints_readable(glob):
        return _rizin.RzAnalysis_var_global_get_constraints_readable(glob)

    @staticmethod
    def match_basic_blocks(fcn_a, fcn_b, opt):
        return _rizin.RzAnalysis_match_basic_blocks(fcn_a, fcn_b, opt)

    @staticmethod
    def match_functions(list_a, list_b, opt):
        return _rizin.RzAnalysis_match_functions(list_a, list_b, opt)

    @staticmethod
    def match_result_free(result):
        return _rizin.RzAnalysis_match_result_free(result)

    @staticmethod
    def value_new():
        return _rizin.RzAnalysis_value_new()

    @staticmethod
    def value_copy(ov):
        return _rizin.RzAnalysis_value_copy(ov)

    @staticmethod
    def value_to_string(value):
        return _rizin.RzAnalysis_value_to_string(value)

    @staticmethod
    def cond_new():
        return _rizin.RzAnalysis_cond_new()

    @staticmethod
    def cond_new_from_op(op):
        return _rizin.RzAnalysis_cond_new_from_op(op)

    @staticmethod
    def cond_fini(c):
        return _rizin.RzAnalysis_cond_fini(c)

    @staticmethod
    def cond_free(c):
        return _rizin.RzAnalysis_cond_free(c)

    @staticmethod
    def cond_to_string(cond):
        return _rizin.RzAnalysis_cond_to_string(cond)

    @staticmethod
    def cond_new_from_string(str):
        return _rizin.RzAnalysis_cond_new_from_string(str)

    @staticmethod
    def reflines_str(core, addr, opts):
        return _rizin.RzAnalysis_reflines_str(core, addr, opts)

    @staticmethod
    def reflines_str_free(refstr):
        return _rizin.RzAnalysis_reflines_str_free(refstr)

    @staticmethod
    def var_list(fcn, kind):
        return _rizin.RzAnalysis_var_list(fcn, kind)

    @staticmethod
    def data_new(addr, type, n, buf):
        return _rizin.RzAnalysis_data_new(addr, type, n, buf)

    @staticmethod
    def data_free(d):
        return _rizin.RzAnalysis_data_free(d)

    @staticmethod
    def data_to_string(d, pal):
        return _rizin.RzAnalysis_data_to_string(d, pal)

    @staticmethod
    def hint_free(h):
        return _rizin.RzAnalysis_hint_free(h)

    @staticmethod
    def switch_op_new(addr, min_val, max_val, def_val):
        return _rizin.RzAnalysis_switch_op_new(addr, min_val, max_val, def_val)

    @staticmethod
    def switch_op_free(swop):
        return _rizin.RzAnalysis_switch_op_free(swop)

    @staticmethod
    def switch_op_add_case(swop, addr, value, jump):
        return _rizin.RzAnalysis_switch_op_add_case(swop, addr, value, jump)

    @staticmethod
    def cycle_frame_new():
        return _rizin.RzAnalysis_cycle_frame_new()

    @staticmethod
    def cycle_frame_free(cf):
        return _rizin.RzAnalysis_cycle_frame_free(cf)

    @staticmethod
    def vtable_info_free(vtable):
        return _rizin.RzAnalysis_vtable_info_free(vtable)

    @staticmethod
    def vtable_info_get_size(context, vtable):
        return _rizin.RzAnalysis_vtable_info_get_size(context, vtable)

    @staticmethod
    def vtable_parse_at(context, addr):
        return _rizin.RzAnalysis_vtable_parse_at(context, addr)

    @staticmethod
    def vtable_search(context):
        return _rizin.RzAnalysis_vtable_search(context)

    @staticmethod
    def rtti_msvc_demangle_class_name(context, name):
        return _rizin.RzAnalysis_rtti_msvc_demangle_class_name(context, name)

    @staticmethod
    def rtti_msvc_print_complete_object_locator(context, addr, mode):
        return _rizin.RzAnalysis_rtti_msvc_print_complete_object_locator(context, addr, mode)

    @staticmethod
    def rtti_msvc_print_type_descriptor(context, addr, mode):
        return _rizin.RzAnalysis_rtti_msvc_print_type_descriptor(context, addr, mode)

    @staticmethod
    def rtti_msvc_print_class_hierarchy_descriptor(context, addr, mode):
        return _rizin.RzAnalysis_rtti_msvc_print_class_hierarchy_descriptor(context, addr, mode)

    @staticmethod
    def rtti_msvc_print_base_class_descriptor(context, addr, mode):
        return _rizin.RzAnalysis_rtti_msvc_print_base_class_descriptor(context, addr, mode)

    @staticmethod
    def rtti_msvc_print_at_vtable(context, addr, mode, strict):
        return _rizin.RzAnalysis_rtti_msvc_print_at_vtable(context, addr, mode, strict)

    @staticmethod
    def rtti_msvc_recover_all(vt_context, vtables):
        return _rizin.RzAnalysis_rtti_msvc_recover_all(vt_context, vtables)

    @staticmethod
    def rtti_itanium_demangle_class_name(context, name):
        return _rizin.RzAnalysis_rtti_itanium_demangle_class_name(context, name)

    @staticmethod
    def rtti_itanium_print_at_vtable(context, addr, mode):
        return _rizin.RzAnalysis_rtti_itanium_print_at_vtable(context, addr, mode)

    @staticmethod
    def rtti_itanium_recover_all(vt_context, vtables):
        return _rizin.RzAnalysis_rtti_itanium_recover_all(vt_context, vtables)

    @staticmethod
    def class_method_fini(meth):
        return _rizin.RzAnalysis_class_method_fini(meth)

    @staticmethod
    def class_base_fini(base):
        return _rizin.RzAnalysis_class_base_fini(base)

    @staticmethod
    def class_vtable_fini(vtable):
        return _rizin.RzAnalysis_class_vtable_fini(vtable)

    @staticmethod
    def debug_info_new():
        return _rizin.RzAnalysis_debug_info_new()

    @staticmethod
    def debug_info_free(debuginfo):
        return _rizin.RzAnalysis_debug_info_free(debuginfo)

    def get_reflines(self, addr, buf, nlines, linesout, linescall):
        return _rizin.RzAnalysis_get_reflines(self, addr, buf, nlines, linesout, linescall)

    def guessed_mem_access_width(self):
        return _rizin.RzAnalysis_guessed_mem_access_width(self)

    def create_block(self, addr, size):
        return _rizin.RzAnalysis_create_block(self, addr, size)

    def get_block_at(self, addr):
        return _rizin.RzAnalysis_get_block_at(self, addr)

    def blocks_foreach_in(self, addr, cb, user):
        return _rizin.RzAnalysis_blocks_foreach_in(self, addr, cb, user)

    def get_blocks_in(self, addr):
        return _rizin.RzAnalysis_get_blocks_in(self, addr)

    def blocks_foreach_intersect(self, addr, size, cb, user):
        return _rizin.RzAnalysis_blocks_foreach_intersect(self, addr, size, cb, user)

    def get_blocks_intersect(self, addr, size):
        return _rizin.RzAnalysis_get_blocks_intersect(self, addr, size)

    def find_most_relevant_block_in(self, off):
        return _rizin.RzAnalysis_find_most_relevant_block_in(self, off)

    def function_new(self):
        return _rizin.RzAnalysis_function_new(self)

    def add_function(self, fcn):
        return _rizin.RzAnalysis_add_function(self, fcn)

    def create_function(self, name, addr, type):
        return _rizin.RzAnalysis_create_function(self, name, addr, type)

    def get_functions_in(self, addr):
        return _rizin.RzAnalysis_get_functions_in(self, addr)

    def first_function_in(self, addr):
        return _rizin.RzAnalysis_first_function_in(self, addr)

    def get_function_at(self, addr):
        return _rizin.RzAnalysis_get_function_at(self, addr)

    def function_list(self):
        return _rizin.RzAnalysis_function_list(self)

    def purge(self):
        return _rizin.RzAnalysis_purge(self)

    def free(self):
        return _rizin.RzAnalysis_free(self)

    def plugin_add(self, foo):
        return _rizin.RzAnalysis_plugin_add(self, foo)

    def plugin_del(self, foo):
        return _rizin.RzAnalysis_plugin_del(self, foo)

    def archinfo(self, query):
        return _rizin.RzAnalysis_archinfo(self, query)

    def use(self, name):
        return _rizin.RzAnalysis_use(self, name)

    def set_reg_profile(self):
        return _rizin.RzAnalysis_set_reg_profile(self)

    def get_reg_profile(self):
        return _rizin.RzAnalysis_get_reg_profile(self)

    def is_reg_in_profile(self, name):
        return _rizin.RzAnalysis_is_reg_in_profile(self, name)

    def set_bits(self, bits):
        return _rizin.RzAnalysis_set_bits(self, bits)

    def set_os(self, os):
        return _rizin.RzAnalysis_set_os(self, os)

    def set_cpu(self, cpu):
        return _rizin.RzAnalysis_set_cpu(self, cpu)

    def set_big_endian(self, boolean):
        return _rizin.RzAnalysis_set_big_endian(self, boolean)

    def mask(self, size, data, at):
        return _rizin.RzAnalysis_mask(self, size, data, at)

    def trace_bb(self, addr):
        return _rizin.RzAnalysis_trace_bb(self, addr)

    def bind(self, bnd):
        return _rizin.RzAnalysis_bind(self, bnd)

    def set_triplet(self, os, arch, bits):
        return _rizin.RzAnalysis_set_triplet(self, os, arch, bits)

    def add_import(self, imp):
        return _rizin.RzAnalysis_add_import(self, imp)

    def remove_import(self, imp):
        return _rizin.RzAnalysis_remove_import(self, imp)

    def purge_imports(self):
        return _rizin.RzAnalysis_purge_imports(self)

    def get_address_bits(self):
        return _rizin.RzAnalysis_get_address_bits(self)

    def op_reg_delta(self, addr, name):
        return _rizin.RzAnalysis_op_reg_delta(self, addr, name)

    def op(self, op_arg, addr, data, len, mask):
        return _rizin.RzAnalysis_op(self, op_arg, addr, data, len, mask)

    def op_hexstr(self, addr, hexstr):
        return _rizin.RzAnalysis_op_hexstr(self, addr, hexstr)

    def op_to_string(self, op):
        return _rizin.RzAnalysis_op_to_string(self, op)

    def il_vm_new(self, init_state_reg):
        return _rizin.RzAnalysis_il_vm_new(self, init_state_reg)

    def il_vm_step(self, vm, reg):
        return _rizin.RzAnalysis_il_vm_step(self, vm, reg)

    def il_vm_step_while(self, vm, reg, cond, user):
        return _rizin.RzAnalysis_il_vm_step_while(self, vm, reg, cond, user)

    def il_vm_step_while_with_events(self, vm, reg, cond, user):
        return _rizin.RzAnalysis_il_vm_step_while_with_events(self, vm, reg, cond, user)

    def il_vm_setup(self):
        return _rizin.RzAnalysis_il_vm_setup(self)

    def il_vm_cleanup(self):
        return _rizin.RzAnalysis_il_vm_cleanup(self)

    def rzil_trace_new(self, rzil):
        return _rizin.RzAnalysis_rzil_trace_new(self, rzil)

    def rzil_trace_op(self, rzil, op):
        return _rizin.RzAnalysis_rzil_trace_op(self, rzil, op)

    def get_fcn_in(self, addr, type):
        return _rizin.RzAnalysis_get_fcn_in(self, addr, type)

    def get_fcn_in_bounds(self, addr, type):
        return _rizin.RzAnalysis_get_fcn_in_bounds(self, addr, type)

    def get_function_byname(self, name):
        return _rizin.RzAnalysis_get_function_byname(self, name)

    def fcn(self, fcn_arg, addr, len, reftype):
        return _rizin.RzAnalysis_fcn(self, fcn_arg, addr, len, reftype)

    def fcn_del(self, addr):
        return _rizin.RzAnalysis_fcn_del(self, addr)

    def fcn_del_locs(self, addr):
        return _rizin.RzAnalysis_fcn_del_locs(self, addr)

    def fcn_add_bb(self, fcn, addr, size, jump, fail):
        return _rizin.RzAnalysis_fcn_add_bb(self, fcn, addr, size, jump, fail)

    def check_fcn(self, buf, bufsz, addr, low, high):
        return _rizin.RzAnalysis_check_fcn(self, buf, bufsz, addr, low, high)

    def update_analysis_range(self, addr, size):
        return _rizin.RzAnalysis_update_analysis_range(self, addr, size)

    def task_item_new(self, tasks, fcn, block, address, sp):
        return _rizin.RzAnalysis_task_item_new(self, tasks, fcn, block, address, sp)

    def trim_jmprefs(self, fcn):
        return _rizin.RzAnalysis_trim_jmprefs(self, fcn)

    def del_jmprefs(self, fcn):
        return _rizin.RzAnalysis_del_jmprefs(self, fcn)

    def fcn_next(self, addr):
        return _rizin.RzAnalysis_fcn_next(self, addr)

    def function_set_type(self, f, callable):
        return _rizin.RzAnalysis_function_set_type(self, f, callable)

    def function_set_type_str(self, f, sig):
        return _rizin.RzAnalysis_function_set_type_str(self, f, sig)

    def fcn_count(self, _from, to):
        return _rizin.RzAnalysis_fcn_count(self, _from, to)

    def fcn_bbget_in(self, fcn, addr):
        return _rizin.RzAnalysis_fcn_bbget_in(self, fcn, addr)

    def fcn_bbget_at(self, fcn, addr):
        return _rizin.RzAnalysis_fcn_bbget_at(self, fcn, addr)

    def xrefs_count(self):
        return _rizin.RzAnalysis_xrefs_count(self)

    def xrefs_get_to(self, addr):
        return _rizin.RzAnalysis_xrefs_get_to(self, addr)

    def xrefs_get_from(self, addr):
        return _rizin.RzAnalysis_xrefs_get_from(self, addr)

    def xrefs_list(self):
        return _rizin.RzAnalysis_xrefs_list(self)

    def xrefs_set(self, _from, to, type):
        return _rizin.RzAnalysis_xrefs_set(self, _from, to, type)

    def xrefs_deln(self, _from, to, type):
        return _rizin.RzAnalysis_xrefs_deln(self, _from, to, type)

    def xref_del(self, _from, to):
        return _rizin.RzAnalysis_xref_del(self, _from, to)

    def get_used_function_var(self, addr):
        return _rizin.RzAnalysis_get_used_function_var(self, addr)

    def var_size(self, var):
        return _rizin.RzAnalysis_var_size(self, var)

    def extract_vars(self, fcn, op, sp):
        return _rizin.RzAnalysis_extract_vars(self, fcn, op, sp)

    def extract_rarg(self, op, fcn, reg_set, count):
        return _rizin.RzAnalysis_extract_rarg(self, op, fcn, reg_set, count)

    def var_storage_dump(self, sb, var, storage):
        return _rizin.RzAnalysis_var_storage_dump(self, sb, var, storage)

    def var_storage_to_string(self, var, storage):
        return _rizin.RzAnalysis_var_storage_to_string(self, var, storage)

    def var_storage_poolify(self, stor):
        return _rizin.RzAnalysis_var_storage_poolify(self, stor)

    def fcn_vars_cache_init(self, cache, fcn):
        return _rizin.RzAnalysis_fcn_vars_cache_init(self, cache, fcn)

    def fcn_vars_cache_from_fcn(self, fcn):
        return _rizin.RzAnalysis_fcn_vars_cache_from_fcn(self, fcn)

    def fcn_format_sig(self, fcn, fcn_name, reuse_cache, fcn_name_pre, fcn_name_post):
        return _rizin.RzAnalysis_fcn_format_sig(self, fcn, fcn_name, reuse_cache, fcn_name_pre, fcn_name_post)

    def fcn_vars_add_types(self, fcn):
        return _rizin.RzAnalysis_fcn_vars_add_types(self, fcn)

    def var_global_add(self, global_var):
        return _rizin.RzAnalysis_var_global_add(self, global_var)

    def var_global_create_with_sourceline(self, name, type, addr, file, line, colum):
        return _rizin.RzAnalysis_var_global_create_with_sourceline(self, name, type, addr, file, line, colum)

    def var_global_create(self, name, type, addr):
        return _rizin.RzAnalysis_var_global_create(self, name, type, addr)

    def var_global_delete(self, glob):
        return _rizin.RzAnalysis_var_global_delete(self, glob)

    def var_global_delete_byname(self, name):
        return _rizin.RzAnalysis_var_global_delete_byname(self, name)

    def var_global_delete_byaddr_at(self, addr):
        return _rizin.RzAnalysis_var_global_delete_byaddr_at(self, addr)

    def var_global_delete_byaddr_in(self, addr):
        return _rizin.RzAnalysis_var_global_delete_byaddr_in(self, addr)

    def var_global_get_byname(self, name):
        return _rizin.RzAnalysis_var_global_get_byname(self, name)

    def var_global_get_byaddr_at(self, addr):
        return _rizin.RzAnalysis_var_global_get_byaddr_at(self, addr)

    def var_global_get_byaddr_in(self, addr):
        return _rizin.RzAnalysis_var_global_get_byaddr_in(self, addr)

    def var_global_get_all(self):
        return _rizin.RzAnalysis_var_global_get_all(self)

    def var_global_rename(self, old_name, newname):
        return _rizin.RzAnalysis_var_global_rename(self, old_name, newname)

    def var_global_xrefs(self, glob):
        return _rizin.RzAnalysis_var_global_xrefs(self, glob)

    def type_paths_by_address(self, addr):
        return _rizin.RzAnalysis_type_paths_by_address(self, addr)

    def xrefs_init(self):
        return _rizin.RzAnalysis_xrefs_init(self)

    def similarity_basic_block(self, bb_a, bb_b):
        return _rizin.RzAnalysis_similarity_basic_block(self, bb_a, bb_b)

    def similarity_function(self, fcn_a, fcn_b):
        return _rizin.RzAnalysis_similarity_function(self, fcn_a, fcn_b)

    def similarity_basic_block_2(self, bb_a, analysis_b, bb_b):
        return _rizin.RzAnalysis_similarity_basic_block_2(self, bb_a, analysis_b, bb_b)

    def similarity_function_2(self, fcn_a, analysis_b, fcn_b):
        return _rizin.RzAnalysis_similarity_function_2(self, fcn_a, analysis_b, fcn_b)

    def value_to_ut64(self, val):
        return _rizin.RzAnalysis_value_to_ut64(self, val)

    def value_set_ut64(self, val, num):
        return _rizin.RzAnalysis_value_set_ut64(self, val, num)

    def cond_eval(self, cond):
        return _rizin.RzAnalysis_cond_eval(self, cond)

    def jmptbl(self, fcn, block, jmpaddr, table, tablesize, default_addr, sp):
        return _rizin.RzAnalysis_jmptbl(self, fcn, block, jmpaddr, table, tablesize, default_addr, sp)

    def get_delta_jmptbl_info(self, fcn, jmp_address, lea_address, params):
        return _rizin.RzAnalysis_get_delta_jmptbl_info(self, fcn, jmp_address, lea_address, params)

    def get_jmptbl_info(self, fcn, block, jmp_address, params):
        return _rizin.RzAnalysis_get_jmptbl_info(self, fcn, block, jmp_address, params)

    def walkthrough_jmptbl(self, fcn, block, params):
        return _rizin.RzAnalysis_walkthrough_jmptbl(self, fcn, block, params)

    def walkthrough_casetbl(self, fcn, block, params):
        return _rizin.RzAnalysis_walkthrough_casetbl(self, fcn, block, params)

    def walkthrough_arm_jmptbl_style(self, fcn, block, params):
        return _rizin.RzAnalysis_walkthrough_arm_jmptbl_style(self, fcn, block, params)

    def reflines_middle(self, list, addr, len):
        return _rizin.RzAnalysis_reflines_middle(self, list, addr, len)

    def cc_exist(self, convention):
        return _rizin.RzAnalysis_cc_exist(self, convention)

    def cc_del(self, name):
        return _rizin.RzAnalysis_cc_del(self, name)

    def cc_set(self, expr):
        return _rizin.RzAnalysis_cc_set(self, expr)

    def cc_get(self, name):
        return _rizin.RzAnalysis_cc_get(self, name)

    def cc_arg(self, convention, n):
        return _rizin.RzAnalysis_cc_arg(self, convention, n)

    def cc_self(self, convention):
        return _rizin.RzAnalysis_cc_self(self, convention)

    def cc_set_self(self, convention, _self):
        return _rizin.RzAnalysis_cc_set_self(self, convention, _self)

    def cc_error(self, convention):
        return _rizin.RzAnalysis_cc_error(self, convention)

    def cc_set_error(self, convention, error):
        return _rizin.RzAnalysis_cc_set_error(self, convention, error)

    def cc_max_arg(self, cc):
        return _rizin.RzAnalysis_cc_max_arg(self, cc)

    def cc_ret(self, convention):
        return _rizin.RzAnalysis_cc_ret(self, convention)

    def cc_shadow_store(self, convention):
        return _rizin.RzAnalysis_cc_shadow_store(self, convention)

    def cc_default(self):
        return _rizin.RzAnalysis_cc_default(self)

    def set_cc_default(self, convention):
        return _rizin.RzAnalysis_set_cc_default(self, convention)

    def syscc_default(self):
        return _rizin.RzAnalysis_syscc_default(self)

    def set_syscc_default(self, convention):
        return _rizin.RzAnalysis_set_syscc_default(self, convention)

    def cc_func(self, func_name):
        return _rizin.RzAnalysis_cc_func(self, func_name)

    def calling_conventions(self):
        return _rizin.RzAnalysis_calling_conventions(self)

    def data(self, addr, buf, size, wordsize):
        return _rizin.RzAnalysis_data(self, addr, buf, size, wordsize)

    def data_kind(self, addr, buf, len):
        return _rizin.RzAnalysis_data_kind(self, addr, buf, len)

    def hint_del(self, addr, size):
        return _rizin.RzAnalysis_hint_del(self, addr, size)

    def hint_clear(self):
        return _rizin.RzAnalysis_hint_clear(self)

    def hint_set_syntax(self, addr, syn):
        return _rizin.RzAnalysis_hint_set_syntax(self, addr, syn)

    def hint_set_type(self, addr, type):
        return _rizin.RzAnalysis_hint_set_type(self, addr, type)

    def hint_set_jump(self, addr, jump):
        return _rizin.RzAnalysis_hint_set_jump(self, addr, jump)

    def hint_set_fail(self, addr, fail):
        return _rizin.RzAnalysis_hint_set_fail(self, addr, fail)

    def hint_set_newbits(self, addr, bits):
        return _rizin.RzAnalysis_hint_set_newbits(self, addr, bits)

    def hint_set_nword(self, addr, nword):
        return _rizin.RzAnalysis_hint_set_nword(self, addr, nword)

    def hint_set_offset(self, addr, typeoff):
        return _rizin.RzAnalysis_hint_set_offset(self, addr, typeoff)

    def hint_set_immbase(self, addr, base):
        return _rizin.RzAnalysis_hint_set_immbase(self, addr, base)

    def hint_set_size(self, addr, size):
        return _rizin.RzAnalysis_hint_set_size(self, addr, size)

    def hint_set_opcode(self, addr, str):
        return _rizin.RzAnalysis_hint_set_opcode(self, addr, str)

    def hint_set_esil(self, addr, str):
        return _rizin.RzAnalysis_hint_set_esil(self, addr, str)

    def hint_set_pointer(self, addr, ptr):
        return _rizin.RzAnalysis_hint_set_pointer(self, addr, ptr)

    def hint_set_ret(self, addr, val):
        return _rizin.RzAnalysis_hint_set_ret(self, addr, val)

    def hint_set_high(self, addr):
        return _rizin.RzAnalysis_hint_set_high(self, addr)

    def hint_set_stackframe(self, addr, size):
        return _rizin.RzAnalysis_hint_set_stackframe(self, addr, size)

    def hint_set_val(self, addr, v):
        return _rizin.RzAnalysis_hint_set_val(self, addr, v)

    def hint_set_arch(self, addr, arch):
        return _rizin.RzAnalysis_hint_set_arch(self, addr, arch)

    def hint_set_bits(self, addr, bits):
        return _rizin.RzAnalysis_hint_set_bits(self, addr, bits)

    def hint_unset_val(self, addr):
        return _rizin.RzAnalysis_hint_unset_val(self, addr)

    def hint_unset_high(self, addr):
        return _rizin.RzAnalysis_hint_unset_high(self, addr)

    def hint_unset_immbase(self, addr):
        return _rizin.RzAnalysis_hint_unset_immbase(self, addr)

    def hint_unset_nword(self, addr):
        return _rizin.RzAnalysis_hint_unset_nword(self, addr)

    def hint_unset_size(self, addr):
        return _rizin.RzAnalysis_hint_unset_size(self, addr)

    def hint_unset_type(self, addr):
        return _rizin.RzAnalysis_hint_unset_type(self, addr)

    def hint_unset_esil(self, addr):
        return _rizin.RzAnalysis_hint_unset_esil(self, addr)

    def hint_unset_opcode(self, addr):
        return _rizin.RzAnalysis_hint_unset_opcode(self, addr)

    def hint_unset_syntax(self, addr):
        return _rizin.RzAnalysis_hint_unset_syntax(self, addr)

    def hint_unset_pointer(self, addr):
        return _rizin.RzAnalysis_hint_unset_pointer(self, addr)

    def hint_unset_ret(self, addr):
        return _rizin.RzAnalysis_hint_unset_ret(self, addr)

    def hint_unset_offset(self, addr):
        return _rizin.RzAnalysis_hint_unset_offset(self, addr)

    def hint_unset_jump(self, addr):
        return _rizin.RzAnalysis_hint_unset_jump(self, addr)

    def hint_unset_fail(self, addr):
        return _rizin.RzAnalysis_hint_unset_fail(self, addr)

    def hint_unset_newbits(self, addr):
        return _rizin.RzAnalysis_hint_unset_newbits(self, addr)

    def hint_unset_stackframe(self, addr):
        return _rizin.RzAnalysis_hint_unset_stackframe(self, addr)

    def hint_unset_arch(self, addr):
        return _rizin.RzAnalysis_hint_unset_arch(self, addr)

    def hint_unset_bits(self, addr):
        return _rizin.RzAnalysis_hint_unset_bits(self, addr)

    def addr_hints_at(self, addr):
        return _rizin.RzAnalysis_addr_hints_at(self, addr)

    def addr_hints_foreach(self, cb, user):
        return _rizin.RzAnalysis_addr_hints_foreach(self, cb, user)

    def arch_hints_foreach(self, cb, user):
        return _rizin.RzAnalysis_arch_hints_foreach(self, cb, user)

    def bits_hints_foreach(self, cb, user):
        return _rizin.RzAnalysis_bits_hints_foreach(self, cb, user)

    def hint_arch_at(self, addr, hint_addr):
        return _rizin.RzAnalysis_hint_arch_at(self, addr, hint_addr)

    def hint_bits_at(self, addr, hint_addr):
        return _rizin.RzAnalysis_hint_bits_at(self, addr, hint_addr)

    def hint_get(self, addr):
        return _rizin.RzAnalysis_hint_get(self, addr)

    def set_limits(self, _from, to):
        return _rizin.RzAnalysis_set_limits(self, _from, to)

    def unset_limits(self):
        return _rizin.RzAnalysis_unset_limits(self)

    def noreturn_add(self, name, addr):
        return _rizin.RzAnalysis_noreturn_add(self, name, addr)

    def noreturn_drop(self, expr):
        return _rizin.RzAnalysis_noreturn_drop(self, expr)

    def noreturn_at_addr(self, addr):
        return _rizin.RzAnalysis_noreturn_at_addr(self, addr)

    def noreturn_at(self, addr):
        return _rizin.RzAnalysis_noreturn_at(self, addr)

    def noreturn_functions(self):
        return _rizin.RzAnalysis_noreturn_functions(self)

    def vtable_begin(self, context):
        return _rizin.RzAnalysis_vtable_begin(self, context)

    def list_vtables(self, mode):
        return _rizin.RzAnalysis_list_vtables(self, mode)

    def rtti_demangle_class_name(self, name):
        return _rizin.RzAnalysis_rtti_demangle_class_name(self, name)

    def rtti_print_at_vtable(self, addr, mode):
        return _rizin.RzAnalysis_rtti_print_at_vtable(self, addr, mode)

    def rtti_print_all(self, mode):
        return _rizin.RzAnalysis_rtti_print_all(self, mode)

    def rtti_recover_all(self):
        return _rizin.RzAnalysis_rtti_recover_all(self)

    def preludes(self):
        return _rizin.RzAnalysis_preludes(self)

    def is_prelude(self, data, len):
        return _rizin.RzAnalysis_is_prelude(self, data, len)

    def class_recover_from_rzbin(self):
        return _rizin.RzAnalysis_class_recover_from_rzbin(self)

    def class_recover_all(self):
        return _rizin.RzAnalysis_class_recover_all(self)

    def class_create(self, name):
        return _rizin.RzAnalysis_class_create(self, name)

    def class_delete(self, name):
        return _rizin.RzAnalysis_class_delete(self, name)

    def class_exists(self, name):
        return _rizin.RzAnalysis_class_exists(self, name)

    def class_get_all(self, sorted):
        return _rizin.RzAnalysis_class_get_all(self, sorted)

    def class_foreach(self, cb, user):
        return _rizin.RzAnalysis_class_foreach(self, cb, user)

    def class_rename(self, old_name, new_name):
        return _rizin.RzAnalysis_class_rename(self, old_name, new_name)

    def class_method_get(self, class_name, meth_name, meth):
        return _rizin.RzAnalysis_class_method_get(self, class_name, meth_name, meth)

    def class_method_get_by_addr(self, class_name, addr, method):
        return _rizin.RzAnalysis_class_method_get_by_addr(self, class_name, addr, method)

    def class_method_get_all(self, class_name):
        return _rizin.RzAnalysis_class_method_get_all(self, class_name)

    def class_method_set(self, class_name, meth):
        return _rizin.RzAnalysis_class_method_set(self, class_name, meth)

    def class_method_rename(self, class_name, old_meth_name, new_meth_name):
        return _rizin.RzAnalysis_class_method_rename(self, class_name, old_meth_name, new_meth_name)

    def class_method_delete(self, class_name, meth_name):
        return _rizin.RzAnalysis_class_method_delete(self, class_name, meth_name)

    def class_method_exists(self, class_name, meth_name):
        return _rizin.RzAnalysis_class_method_exists(self, class_name, meth_name)

    def class_method_exists_by_addr(self, class_name, addr):
        return _rizin.RzAnalysis_class_method_exists_by_addr(self, class_name, addr)

    def class_method_recover(self, cls, methods):
        return _rizin.RzAnalysis_class_method_recover(self, cls, methods)

    def class_base_get(self, class_name, base_id, base):
        return _rizin.RzAnalysis_class_base_get(self, class_name, base_id, base)

    def class_base_get_all(self, class_name):
        return _rizin.RzAnalysis_class_base_get_all(self, class_name)

    def class_base_set(self, class_name, base):
        return _rizin.RzAnalysis_class_base_set(self, class_name, base)

    def class_base_delete(self, class_name, base_id):
        return _rizin.RzAnalysis_class_base_delete(self, class_name, base_id)

    def class_vtable_get(self, class_name, vtable_id, vtable):
        return _rizin.RzAnalysis_class_vtable_get(self, class_name, vtable_id, vtable)

    def class_vtable_get_all(self, class_name):
        return _rizin.RzAnalysis_class_vtable_get_all(self, class_name)

    def class_vtable_set(self, class_name, vtable):
        return _rizin.RzAnalysis_class_vtable_set(self, class_name, vtable)

    def class_vtable_delete(self, class_name, vtable_id):
        return _rizin.RzAnalysis_class_vtable_delete(self, class_name, vtable_id)

    def class_get_inheritance_graph(self):
        return _rizin.RzAnalysis_class_get_inheritance_graph(self)

    def function_args(self, fcn):
        return _rizin.RzAnalysis_function_args(self, fcn)

    def function_vars(self, fcn):
        return _rizin.RzAnalysis_function_vars(self, fcn)

    def function_get_arg_idx(self, f, index):
        return _rizin.RzAnalysis_function_get_arg_idx(self, f, index)

    def types_from_fcn(self, fcn):
        return _rizin.RzAnalysis_types_from_fcn(self, fcn)

    def function_derive_type(self, f):
        return _rizin.RzAnalysis_function_derive_type(self, f)

    def dwarf_preprocess_info(self, dw):
        return _rizin.RzAnalysis_dwarf_preprocess_info(self, dw)

    def dwarf_process_info(self, dw):
        return _rizin.RzAnalysis_dwarf_process_info(self, dw)

    def dwarf_integrate_functions(self, flags):
        return _rizin.RzAnalysis_dwarf_integrate_functions(self, flags)

    def __init__(self):
        _rizin.RzAnalysis_swiginit(self, _rizin.new_RzAnalysis())
    __swig_destroy__ = _rizin.delete_RzAnalysis

# Register RzAnalysis in _rizin:
_rizin.RzAnalysis_swigregister(RzAnalysis)
class RzAnalysisFunction(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzAnalysisFunction_name_get, _rizin.RzAnalysisFunction_name_set)
    bits = property(_rizin.RzAnalysisFunction_bits_get, _rizin.RzAnalysisFunction_bits_set)
    type = property(_rizin.RzAnalysisFunction_type_get, _rizin.RzAnalysisFunction_type_set)
    cc = property(_rizin.RzAnalysisFunction_cc_get, _rizin.RzAnalysisFunction_cc_set)
    addr = property(_rizin.RzAnalysisFunction_addr_get, _rizin.RzAnalysisFunction_addr_set)
    labels = property(_rizin.RzAnalysisFunction_labels_get, _rizin.RzAnalysisFunction_labels_set)
    label_addrs = property(_rizin.RzAnalysisFunction_label_addrs_get, _rizin.RzAnalysisFunction_label_addrs_set)
    vars = property(_rizin.RzAnalysisFunction_vars_get, _rizin.RzAnalysisFunction_vars_set)
    ret_type = property(_rizin.RzAnalysisFunction_ret_type_get, _rizin.RzAnalysisFunction_ret_type_set)
    inst_vars = property(_rizin.RzAnalysisFunction_inst_vars_get, _rizin.RzAnalysisFunction_inst_vars_set)
    bp_off = property(_rizin.RzAnalysisFunction_bp_off_get, _rizin.RzAnalysisFunction_bp_off_set)
    stack = property(_rizin.RzAnalysisFunction_stack_get, _rizin.RzAnalysisFunction_stack_set)
    maxstack = property(_rizin.RzAnalysisFunction_maxstack_get, _rizin.RzAnalysisFunction_maxstack_set)
    ninstr = property(_rizin.RzAnalysisFunction_ninstr_get, _rizin.RzAnalysisFunction_ninstr_set)
    is_pure = property(_rizin.RzAnalysisFunction_is_pure_get, _rizin.RzAnalysisFunction_is_pure_set)
    is_variadic = property(_rizin.RzAnalysisFunction_is_variadic_get, _rizin.RzAnalysisFunction_is_variadic_set)
    has_changed = property(_rizin.RzAnalysisFunction_has_changed_get, _rizin.RzAnalysisFunction_has_changed_set)
    has_debuginfo = property(_rizin.RzAnalysisFunction_has_debuginfo_get, _rizin.RzAnalysisFunction_has_debuginfo_set)
    bp_frame = property(_rizin.RzAnalysisFunction_bp_frame_get, _rizin.RzAnalysisFunction_bp_frame_set)
    is_noreturn = property(_rizin.RzAnalysisFunction_is_noreturn_get, _rizin.RzAnalysisFunction_is_noreturn_set)
    argnum = property(_rizin.RzAnalysisFunction_argnum_get, _rizin.RzAnalysisFunction_argnum_set)
    bbs = property(_rizin.RzAnalysisFunction_bbs_get, _rizin.RzAnalysisFunction_bbs_set)
    meta = property(_rizin.RzAnalysisFunction_meta_get, _rizin.RzAnalysisFunction_meta_set)
    imports = property(_rizin.RzAnalysisFunction_imports_get, _rizin.RzAnalysisFunction_imports_set)
    analysis = property(_rizin.RzAnalysisFunction_analysis_get, _rizin.RzAnalysisFunction_analysis_set)

    def delete_self(self):
        return _rizin.RzAnalysisFunction_delete_self(self)

    def relocate(self, addr):
        return _rizin.RzAnalysisFunction_relocate(self, addr)

    def rename(self, name):
        return _rizin.RzAnalysisFunction_rename(self, name)

    def force_rename(self, name):
        return _rizin.RzAnalysisFunction_force_rename(self, name)

    def add_block(self, bb):
        return _rizin.RzAnalysisFunction_add_block(self, bb)

    def remove_block(self, bb):
        return _rizin.RzAnalysisFunction_remove_block(self, bb)

    def linear_size(self):
        return _rizin.RzAnalysisFunction_linear_size(self)

    def min_addr(self):
        return _rizin.RzAnalysisFunction_min_addr(self)

    def max_addr(self):
        return _rizin.RzAnalysisFunction_max_addr(self)

    def size_from_entry(self):
        return _rizin.RzAnalysisFunction_size_from_entry(self)

    def realsize(self):
        return _rizin.RzAnalysisFunction_realsize(self)

    def contains(self, addr):
        return _rizin.RzAnalysisFunction_contains(self, addr)

    def was_modified(self):
        return _rizin.RzAnalysisFunction_was_modified(self)

    def cost(self):
        return _rizin.RzAnalysisFunction_cost(self)

    def count_edges(self, ebbs):
        return _rizin.RzAnalysisFunction_count_edges(self, ebbs)

    def check_bp_use(self):
        return _rizin.RzAnalysisFunction_check_bp_use(self)

    def update_analysis(self):
        return _rizin.RzAnalysisFunction_update_analysis(self)

    def complexity(self):
        return _rizin.RzAnalysisFunction_complexity(self)

    def loops(self):
        return _rizin.RzAnalysisFunction_loops(self)

    def get_json(self):
        return _rizin.RzAnalysisFunction_get_json(self)

    def get_signature(self):
        return _rizin.RzAnalysisFunction_get_signature(self)

    def resize(self, newsize):
        return _rizin.RzAnalysisFunction_resize(self, newsize)

    def purity(self):
        return _rizin.RzAnalysisFunction_purity(self)

    def get_xrefs_from(self):
        return _rizin.RzAnalysisFunction_get_xrefs_from(self)

    def get_xrefs_to(self):
        return _rizin.RzAnalysisFunction_get_xrefs_to(self)

    def set_var(self, stor, type, size, name):
        return _rizin.RzAnalysisFunction_set_var(self, stor, type, size, name)

    def add_var(self, var):
        return _rizin.RzAnalysisFunction_add_var(self, var)

    def get_var_at(self, stor):
        return _rizin.RzAnalysisFunction_get_var_at(self, stor)

    def get_stack_var_at(self, stack_off):
        return _rizin.RzAnalysisFunction_get_stack_var_at(self, stack_off)

    def get_reg_var_at(self, reg):
        return _rizin.RzAnalysisFunction_get_reg_var_at(self, reg)

    def get_stack_var_in(self, stack_off):
        return _rizin.RzAnalysisFunction_get_stack_var_in(self, stack_off)

    def get_var_byname(self, name):
        return _rizin.RzAnalysisFunction_get_var_byname(self, name)

    def delete_vars_by_storage_type(self, stor):
        return _rizin.RzAnalysisFunction_delete_vars_by_storage_type(self, stor)

    def delete_arg_vars(self):
        return _rizin.RzAnalysisFunction_delete_arg_vars(self)

    def delete_all_vars(self):
        return _rizin.RzAnalysisFunction_delete_all_vars(self)

    def delete_unused_vars(self):
        return _rizin.RzAnalysisFunction_delete_unused_vars(self)

    def delete_var(self, var):
        return _rizin.RzAnalysisFunction_delete_var(self, var)

    def var_expr_for_reg_access_at(self, addr, reg, reg_addend):
        return _rizin.RzAnalysisFunction_var_expr_for_reg_access_at(self, addr, reg, reg_addend)

    def get_vars_used_at(self, op_addr):
        return _rizin.RzAnalysisFunction_get_vars_used_at(self, op_addr)

    def eq(self, fcn_b):
        return _rizin.RzAnalysisFunction_eq(self, fcn_b)

    def get_label(self, name):
        return _rizin.RzAnalysisFunction_get_label(self, name)

    def get_label_at(self, addr):
        return _rizin.RzAnalysisFunction_get_label_at(self, addr)

    def set_label(self, name, addr):
        return _rizin.RzAnalysisFunction_set_label(self, name, addr)

    def delete_label(self, name):
        return _rizin.RzAnalysisFunction_delete_label(self, name)

    def delete_label_at(self, addr):
        return _rizin.RzAnalysisFunction_delete_label_at(self, addr)

    def is_malloc(self):
        return _rizin.RzAnalysisFunction_is_malloc(self)

    def __init__(self):
        _rizin.RzAnalysisFunction_swiginit(self, _rizin.new_RzAnalysisFunction())
    __swig_destroy__ = _rizin.delete_RzAnalysisFunction

# Register RzAnalysisFunction in _rizin:
_rizin.RzAnalysisFunction_swigregister(RzAnalysisFunction)
class RzAnalysisBlock(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _rb = property(_rizin.RzAnalysisBlock__rb_get, _rizin.RzAnalysisBlock__rb_set)
    _max_end = property(_rizin.RzAnalysisBlock__max_end_get, _rizin.RzAnalysisBlock__max_end_set)
    addr = property(_rizin.RzAnalysisBlock_addr_get, _rizin.RzAnalysisBlock_addr_set)
    size = property(_rizin.RzAnalysisBlock_size_get, _rizin.RzAnalysisBlock_size_set)
    jump = property(_rizin.RzAnalysisBlock_jump_get, _rizin.RzAnalysisBlock_jump_set)
    fail = property(_rizin.RzAnalysisBlock_fail_get, _rizin.RzAnalysisBlock_fail_set)
    traced = property(_rizin.RzAnalysisBlock_traced_get, _rizin.RzAnalysisBlock_traced_set)
    colorize = property(_rizin.RzAnalysisBlock_colorize_get, _rizin.RzAnalysisBlock_colorize_set)
    cond = property(_rizin.RzAnalysisBlock_cond_get, _rizin.RzAnalysisBlock_cond_set)
    switch_op = property(_rizin.RzAnalysisBlock_switch_op_get, _rizin.RzAnalysisBlock_switch_op_set)
    op_pos = property(_rizin.RzAnalysisBlock_op_pos_get, _rizin.RzAnalysisBlock_op_pos_set)
    sp_delta = property(_rizin.RzAnalysisBlock_sp_delta_get, _rizin.RzAnalysisBlock_sp_delta_set)
    sp_entry = property(_rizin.RzAnalysisBlock_sp_entry_get, _rizin.RzAnalysisBlock_sp_entry_set)
    op_bytes = property(_rizin.RzAnalysisBlock_op_bytes_get, _rizin.RzAnalysisBlock_op_bytes_set)
    parent_reg_arena = property(_rizin.RzAnalysisBlock_parent_reg_arena_get, _rizin.RzAnalysisBlock_parent_reg_arena_set)
    op_pos_size = property(_rizin.RzAnalysisBlock_op_pos_size_get, _rizin.RzAnalysisBlock_op_pos_size_set)
    ninstr = property(_rizin.RzAnalysisBlock_ninstr_get, _rizin.RzAnalysisBlock_ninstr_set)
    cmpval = property(_rizin.RzAnalysisBlock_cmpval_get, _rizin.RzAnalysisBlock_cmpval_set)
    cmpreg = property(_rizin.RzAnalysisBlock_cmpreg_get, _rizin.RzAnalysisBlock_cmpreg_set)
    bbhash = property(_rizin.RzAnalysisBlock_bbhash_get, _rizin.RzAnalysisBlock_bbhash_set)
    fcns = property(_rizin.RzAnalysisBlock_fcns_get, _rizin.RzAnalysisBlock_fcns_set)
    analysis = property(_rizin.RzAnalysisBlock_analysis_get, _rizin.RzAnalysisBlock_analysis_set)
    ref = property(_rizin.RzAnalysisBlock_ref_get, _rizin.RzAnalysisBlock_ref_set)

    def __init__(self):
        _rizin.RzAnalysisBlock_swiginit(self, _rizin.new_RzAnalysisBlock())
    __swig_destroy__ = _rizin.delete_RzAnalysisBlock

# Register RzAnalysisBlock in _rizin:
_rizin.RzAnalysisBlock_swigregister(RzAnalysisBlock)
class RzAnalysisEsil(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    analysis = property(_rizin.RzAnalysisEsil_analysis_get, _rizin.RzAnalysisEsil_analysis_set)
    stack = property(_rizin.RzAnalysisEsil_stack_get, _rizin.RzAnalysisEsil_stack_set)
    addrmask = property(_rizin.RzAnalysisEsil_addrmask_get, _rizin.RzAnalysisEsil_addrmask_set)
    stacksize = property(_rizin.RzAnalysisEsil_stacksize_get, _rizin.RzAnalysisEsil_stacksize_set)
    stackptr = property(_rizin.RzAnalysisEsil_stackptr_get, _rizin.RzAnalysisEsil_stackptr_set)
    skip = property(_rizin.RzAnalysisEsil_skip_get, _rizin.RzAnalysisEsil_skip_set)
    nowrite = property(_rizin.RzAnalysisEsil_nowrite_get, _rizin.RzAnalysisEsil_nowrite_set)
    iotrap = property(_rizin.RzAnalysisEsil_iotrap_get, _rizin.RzAnalysisEsil_iotrap_set)
    exectrap = property(_rizin.RzAnalysisEsil_exectrap_get, _rizin.RzAnalysisEsil_exectrap_set)
    repeat = property(_rizin.RzAnalysisEsil_repeat_get, _rizin.RzAnalysisEsil_repeat_set)
    parse_stop = property(_rizin.RzAnalysisEsil_parse_stop_get, _rizin.RzAnalysisEsil_parse_stop_set)
    parse_goto = property(_rizin.RzAnalysisEsil_parse_goto_get, _rizin.RzAnalysisEsil_parse_goto_set)
    parse_goto_count = property(_rizin.RzAnalysisEsil_parse_goto_count_get, _rizin.RzAnalysisEsil_parse_goto_count_set)
    verbose = property(_rizin.RzAnalysisEsil_verbose_get, _rizin.RzAnalysisEsil_verbose_set)
    flags = property(_rizin.RzAnalysisEsil_flags_get, _rizin.RzAnalysisEsil_flags_set)
    address = property(_rizin.RzAnalysisEsil_address_get, _rizin.RzAnalysisEsil_address_set)
    stack_addr = property(_rizin.RzAnalysisEsil_stack_addr_get, _rizin.RzAnalysisEsil_stack_addr_set)
    stack_size = property(_rizin.RzAnalysisEsil_stack_size_get, _rizin.RzAnalysisEsil_stack_size_set)
    delay = property(_rizin.RzAnalysisEsil_delay_get, _rizin.RzAnalysisEsil_delay_set)
    jump_target = property(_rizin.RzAnalysisEsil_jump_target_get, _rizin.RzAnalysisEsil_jump_target_set)
    jump_target_set = property(_rizin.RzAnalysisEsil_jump_target_set_get, _rizin.RzAnalysisEsil_jump_target_set_set)
    trap = property(_rizin.RzAnalysisEsil_trap_get, _rizin.RzAnalysisEsil_trap_set)
    trap_code = property(_rizin.RzAnalysisEsil_trap_code_get, _rizin.RzAnalysisEsil_trap_code_set)
    old = property(_rizin.RzAnalysisEsil_old_get, _rizin.RzAnalysisEsil_old_set)
    cur = property(_rizin.RzAnalysisEsil_cur_get, _rizin.RzAnalysisEsil_cur_set)
    lastsz = property(_rizin.RzAnalysisEsil_lastsz_get, _rizin.RzAnalysisEsil_lastsz_set)
    ops = property(_rizin.RzAnalysisEsil_ops_get, _rizin.RzAnalysisEsil_ops_set)
    current_opstr = property(_rizin.RzAnalysisEsil_current_opstr_get, _rizin.RzAnalysisEsil_current_opstr_set)
    sources = property(_rizin.RzAnalysisEsil_sources_get, _rizin.RzAnalysisEsil_sources_set)
    interrupts = property(_rizin.RzAnalysisEsil_interrupts_get, _rizin.RzAnalysisEsil_interrupts_set)
    stats = property(_rizin.RzAnalysisEsil_stats_get, _rizin.RzAnalysisEsil_stats_set)
    trace = property(_rizin.RzAnalysisEsil_trace_get, _rizin.RzAnalysisEsil_trace_set)
    cb = property(_rizin.RzAnalysisEsil_cb_get, _rizin.RzAnalysisEsil_cb_set)
    cmd_step = property(_rizin.RzAnalysisEsil_cmd_step_get, _rizin.RzAnalysisEsil_cmd_step_set)
    cmd_step_out = property(_rizin.RzAnalysisEsil_cmd_step_out_get, _rizin.RzAnalysisEsil_cmd_step_out_set)
    cmd_intr = property(_rizin.RzAnalysisEsil_cmd_intr_get, _rizin.RzAnalysisEsil_cmd_intr_set)
    cmd_trap = property(_rizin.RzAnalysisEsil_cmd_trap_get, _rizin.RzAnalysisEsil_cmd_trap_set)
    cmd_mdev = property(_rizin.RzAnalysisEsil_cmd_mdev_get, _rizin.RzAnalysisEsil_cmd_mdev_set)
    cmd_todo = property(_rizin.RzAnalysisEsil_cmd_todo_get, _rizin.RzAnalysisEsil_cmd_todo_set)
    cmd_ioer = property(_rizin.RzAnalysisEsil_cmd_ioer_get, _rizin.RzAnalysisEsil_cmd_ioer_set)
    mdev_range = property(_rizin.RzAnalysisEsil_mdev_range_get, _rizin.RzAnalysisEsil_mdev_range_set)
    cmd = property(_rizin.RzAnalysisEsil_cmd_get, _rizin.RzAnalysisEsil_cmd_set)
    user = property(_rizin.RzAnalysisEsil_user_get, _rizin.RzAnalysisEsil_user_set)
    stack_fd = property(_rizin.RzAnalysisEsil_stack_fd_get, _rizin.RzAnalysisEsil_stack_fd_set)
    in_cmd_step = property(_rizin.RzAnalysisEsil_in_cmd_step_get, _rizin.RzAnalysisEsil_in_cmd_step_set)

    def __init__(self):
        _rizin.RzAnalysisEsil_swiginit(self, _rizin.new_RzAnalysisEsil())
    __swig_destroy__ = _rizin.delete_RzAnalysisEsil

# Register RzAnalysisEsil in _rizin:
_rizin.RzAnalysisEsil_swigregister(RzAnalysisEsil)
class RzAnalysisEsilInterState(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    analysis_stop = property(_rizin.RzAnalysisEsilInterState_analysis_stop_get, _rizin.RzAnalysisEsilInterState_analysis_stop_set)
    last_read = property(_rizin.RzAnalysisEsilInterState_last_read_get, _rizin.RzAnalysisEsilInterState_last_read_set)
    last_data = property(_rizin.RzAnalysisEsilInterState_last_data_get, _rizin.RzAnalysisEsilInterState_last_data_set)
    emustack_min = property(_rizin.RzAnalysisEsilInterState_emustack_min_get, _rizin.RzAnalysisEsilInterState_emustack_min_set)
    emustack_max = property(_rizin.RzAnalysisEsilInterState_emustack_max_get, _rizin.RzAnalysisEsilInterState_emustack_max_set)
    memreads = property(_rizin.RzAnalysisEsilInterState_memreads_get, _rizin.RzAnalysisEsilInterState_memreads_set)
    memwrites = property(_rizin.RzAnalysisEsilInterState_memwrites_get, _rizin.RzAnalysisEsilInterState_memwrites_set)
    callbacks = property(_rizin.RzAnalysisEsilInterState_callbacks_get, _rizin.RzAnalysisEsilInterState_callbacks_set)
    callbacks_set = property(_rizin.RzAnalysisEsilInterState_callbacks_set_get, _rizin.RzAnalysisEsilInterState_callbacks_set_set)

    def __init__(self):
        _rizin.RzAnalysisEsilInterState_swiginit(self, _rizin.new_RzAnalysisEsilInterState())
    __swig_destroy__ = _rizin.delete_RzAnalysisEsilInterState

# Register RzAnalysisEsilInterState in _rizin:
_rizin.RzAnalysisEsilInterState_swigregister(RzAnalysisEsilInterState)
class RzAnalysisPlugin(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzAnalysisPlugin_name_get, _rizin.RzAnalysisPlugin_name_set)
    desc = property(_rizin.RzAnalysisPlugin_desc_get, _rizin.RzAnalysisPlugin_desc_set)
    license = property(_rizin.RzAnalysisPlugin_license_get, _rizin.RzAnalysisPlugin_license_set)
    arch = property(_rizin.RzAnalysisPlugin_arch_get, _rizin.RzAnalysisPlugin_arch_set)
    author = property(_rizin.RzAnalysisPlugin_author_get, _rizin.RzAnalysisPlugin_author_set)
    version = property(_rizin.RzAnalysisPlugin_version_get, _rizin.RzAnalysisPlugin_version_set)
    bits = property(_rizin.RzAnalysisPlugin_bits_get, _rizin.RzAnalysisPlugin_bits_set)
    esil = property(_rizin.RzAnalysisPlugin_esil_get, _rizin.RzAnalysisPlugin_esil_set)
    fileformat_type = property(_rizin.RzAnalysisPlugin_fileformat_type_get, _rizin.RzAnalysisPlugin_fileformat_type_set)
    init = property(_rizin.RzAnalysisPlugin_init_get, _rizin.RzAnalysisPlugin_init_set)
    fini = property(_rizin.RzAnalysisPlugin_fini_get, _rizin.RzAnalysisPlugin_fini_set)
    archinfo = property(_rizin.RzAnalysisPlugin_archinfo_get, _rizin.RzAnalysisPlugin_archinfo_set)
    analysis_mask = property(_rizin.RzAnalysisPlugin_analysis_mask_get, _rizin.RzAnalysisPlugin_analysis_mask_set)
    preludes = property(_rizin.RzAnalysisPlugin_preludes_get, _rizin.RzAnalysisPlugin_preludes_set)
    address_bits = property(_rizin.RzAnalysisPlugin_address_bits_get, _rizin.RzAnalysisPlugin_address_bits_set)
    op = property(_rizin.RzAnalysisPlugin_op_get, _rizin.RzAnalysisPlugin_op_set)
    get_reg_profile = property(_rizin.RzAnalysisPlugin_get_reg_profile_get, _rizin.RzAnalysisPlugin_get_reg_profile_set)
    esil_init = property(_rizin.RzAnalysisPlugin_esil_init_get, _rizin.RzAnalysisPlugin_esil_init_set)
    esil_post_loop = property(_rizin.RzAnalysisPlugin_esil_post_loop_get, _rizin.RzAnalysisPlugin_esil_post_loop_set)
    esil_trap = property(_rizin.RzAnalysisPlugin_esil_trap_get, _rizin.RzAnalysisPlugin_esil_trap_set)
    esil_fini = property(_rizin.RzAnalysisPlugin_esil_fini_get, _rizin.RzAnalysisPlugin_esil_fini_set)
    il_config = property(_rizin.RzAnalysisPlugin_il_config_get, _rizin.RzAnalysisPlugin_il_config_set)

    def __init__(self):
        _rizin.RzAnalysisPlugin_swiginit(self, _rizin.new_RzAnalysisPlugin())
    __swig_destroy__ = _rizin.delete_RzAnalysisPlugin

# Register RzAnalysisPlugin in _rizin:
_rizin.RzAnalysisPlugin_swigregister(RzAnalysisPlugin)
class RzAnalysisXRef(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    from_addr = property(_rizin.RzAnalysisXRef_from_addr_get, _rizin.RzAnalysisXRef_from_addr_set)
    to_addr = property(_rizin.RzAnalysisXRef_to_addr_get, _rizin.RzAnalysisXRef_to_addr_set)
    type = property(_rizin.RzAnalysisXRef_type_get, _rizin.RzAnalysisXRef_type_set)

    def __init__(self):
        _rizin.RzAnalysisXRef_swiginit(self, _rizin.new_RzAnalysisXRef())
    __swig_destroy__ = _rizin.delete_RzAnalysisXRef

# Register RzAnalysisXRef in _rizin:
_rizin.RzAnalysisXRef_swigregister(RzAnalysisXRef)
class RzAsm(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    core = property(_rizin.RzAsm_core_get, _rizin.RzAsm_core_set)
    ptr_alignment_I = property(_rizin.RzAsm_ptr_alignment_I_get, _rizin.RzAsm_ptr_alignment_I_set)
    plugin_data = property(_rizin.RzAsm_plugin_data_get, _rizin.RzAsm_plugin_data_set)
    ptr_alignment_II = property(_rizin.RzAsm_ptr_alignment_II_get, _rizin.RzAsm_ptr_alignment_II_set)
    cpu = property(_rizin.RzAsm_cpu_get, _rizin.RzAsm_cpu_set)
    bits = property(_rizin.RzAsm_bits_get, _rizin.RzAsm_bits_set)
    big_endian = property(_rizin.RzAsm_big_endian_get, _rizin.RzAsm_big_endian_set)
    syntax = property(_rizin.RzAsm_syntax_get, _rizin.RzAsm_syntax_set)
    pc = property(_rizin.RzAsm_pc_get, _rizin.RzAsm_pc_set)
    cur = property(_rizin.RzAsm_cur_get, _rizin.RzAsm_cur_set)
    acur = property(_rizin.RzAsm_acur_get, _rizin.RzAsm_acur_set)
    plugins = property(_rizin.RzAsm_plugins_get, _rizin.RzAsm_plugins_set)
    binb = property(_rizin.RzAsm_binb_get, _rizin.RzAsm_binb_set)
    ifilter = property(_rizin.RzAsm_ifilter_get, _rizin.RzAsm_ifilter_set)
    ofilter = property(_rizin.RzAsm_ofilter_get, _rizin.RzAsm_ofilter_set)
    pair = property(_rizin.RzAsm_pair_get, _rizin.RzAsm_pair_set)
    syscall = property(_rizin.RzAsm_syscall_get, _rizin.RzAsm_syscall_set)
    num = property(_rizin.RzAsm_num_get, _rizin.RzAsm_num_set)
    sdb_opcodes_path = property(_rizin.RzAsm_sdb_opcodes_path_get, _rizin.RzAsm_sdb_opcodes_path_set)
    features = property(_rizin.RzAsm_features_get, _rizin.RzAsm_features_set)
    platforms = property(_rizin.RzAsm_platforms_get, _rizin.RzAsm_platforms_set)
    invhex = property(_rizin.RzAsm_invhex_get, _rizin.RzAsm_invhex_set)
    pcalign = property(_rizin.RzAsm_pcalign_get, _rizin.RzAsm_pcalign_set)
    dataalign = property(_rizin.RzAsm_dataalign_get, _rizin.RzAsm_dataalign_set)
    bitshift = property(_rizin.RzAsm_bitshift_get, _rizin.RzAsm_bitshift_set)
    immsign = property(_rizin.RzAsm_immsign_get, _rizin.RzAsm_immsign_set)
    immdisp = property(_rizin.RzAsm_immdisp_get, _rizin.RzAsm_immdisp_set)
    utf8 = property(_rizin.RzAsm_utf8_get, _rizin.RzAsm_utf8_set)
    flags = property(_rizin.RzAsm_flags_get, _rizin.RzAsm_flags_set)
    seggrn = property(_rizin.RzAsm_seggrn_get, _rizin.RzAsm_seggrn_set)
    pseudo = property(_rizin.RzAsm_pseudo_get, _rizin.RzAsm_pseudo_set)

    def __init__(self):
        _rizin.RzAsm_swiginit(self, _rizin.new_RzAsm())
    __swig_destroy__ = _rizin.delete_RzAsm

# Register RzAsm in _rizin:
_rizin.RzAsm_swigregister(RzAsm)
class RzAsmPlugin(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzAsmPlugin_name_get, _rizin.RzAsmPlugin_name_set)
    arch = property(_rizin.RzAsmPlugin_arch_get, _rizin.RzAsmPlugin_arch_set)
    author = property(_rizin.RzAsmPlugin_author_get, _rizin.RzAsmPlugin_author_set)
    version = property(_rizin.RzAsmPlugin_version_get, _rizin.RzAsmPlugin_version_set)
    cpus = property(_rizin.RzAsmPlugin_cpus_get, _rizin.RzAsmPlugin_cpus_set)
    desc = property(_rizin.RzAsmPlugin_desc_get, _rizin.RzAsmPlugin_desc_set)
    license = property(_rizin.RzAsmPlugin_license_get, _rizin.RzAsmPlugin_license_set)
    bits = property(_rizin.RzAsmPlugin_bits_get, _rizin.RzAsmPlugin_bits_set)
    endian = property(_rizin.RzAsmPlugin_endian_get, _rizin.RzAsmPlugin_endian_set)
    init = property(_rizin.RzAsmPlugin_init_get, _rizin.RzAsmPlugin_init_set)
    fini = property(_rizin.RzAsmPlugin_fini_get, _rizin.RzAsmPlugin_fini_set)
    disassemble = property(_rizin.RzAsmPlugin_disassemble_get, _rizin.RzAsmPlugin_disassemble_set)
    assemble = property(_rizin.RzAsmPlugin_assemble_get, _rizin.RzAsmPlugin_assemble_set)
    mnemonics = property(_rizin.RzAsmPlugin_mnemonics_get, _rizin.RzAsmPlugin_mnemonics_set)
    get_config = property(_rizin.RzAsmPlugin_get_config_get, _rizin.RzAsmPlugin_get_config_set)
    features = property(_rizin.RzAsmPlugin_features_get, _rizin.RzAsmPlugin_features_set)
    platforms = property(_rizin.RzAsmPlugin_platforms_get, _rizin.RzAsmPlugin_platforms_set)
    get_cpu_desc = property(_rizin.RzAsmPlugin_get_cpu_desc_get, _rizin.RzAsmPlugin_get_cpu_desc_set)
    sw_breakpoint = property(_rizin.RzAsmPlugin_sw_breakpoint_get, _rizin.RzAsmPlugin_sw_breakpoint_set)

    def __init__(self):
        _rizin.RzAsmPlugin_swiginit(self, _rizin.new_RzAsmPlugin())
    __swig_destroy__ = _rizin.delete_RzAsmPlugin

# Register RzAsmPlugin in _rizin:
_rizin.RzAsmPlugin_swigregister(RzAsmPlugin)
class RzBinFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    file = property(_rizin.RzBinFile_file_get, _rizin.RzBinFile_file_set)
    fd = property(_rizin.RzBinFile_fd_get, _rizin.RzBinFile_fd_set)
    size = property(_rizin.RzBinFile_size_get, _rizin.RzBinFile_size_set)
    id = property(_rizin.RzBinFile_id_get, _rizin.RzBinFile_id_set)
    buf = property(_rizin.RzBinFile_buf_get, _rizin.RzBinFile_buf_set)
    offset = property(_rizin.RzBinFile_offset_get, _rizin.RzBinFile_offset_set)
    o = property(_rizin.RzBinFile_o_get, _rizin.RzBinFile_o_set)
    xtr_obj = property(_rizin.RzBinFile_xtr_obj_get, _rizin.RzBinFile_xtr_obj_set)
    loadaddr = property(_rizin.RzBinFile_loadaddr_get, _rizin.RzBinFile_loadaddr_set)
    narch = property(_rizin.RzBinFile_narch_get, _rizin.RzBinFile_narch_set)
    curxtr = property(_rizin.RzBinFile_curxtr_get, _rizin.RzBinFile_curxtr_set)
    xtr_data = property(_rizin.RzBinFile_xtr_data_get, _rizin.RzBinFile_xtr_data_set)
    sdb = property(_rizin.RzBinFile_sdb_get, _rizin.RzBinFile_sdb_set)
    rbin = property(_rizin.RzBinFile_rbin_get, _rizin.RzBinFile_rbin_set)

    def get_baddr(self):
        return _rizin.RzBinFile_get_baddr(self)

    def strings(self, opt):
        return _rizin.RzBinFile_strings(self, opt)

    def get_trycatch(self):
        return _rizin.RzBinFile_get_trycatch(self)

    def get_symbols(self):
        return _rizin.RzBinFile_get_symbols(self)

    def cur_plugin(self):
        return _rizin.RzBinFile_cur_plugin(self)

    def __init__(self):
        _rizin.RzBinFile_swiginit(self, _rizin.new_RzBinFile())
    __swig_destroy__ = _rizin.delete_RzBinFile

# Register RzBinFile in _rizin:
_rizin.RzBinFile_swigregister(RzBinFile)
class RzBin(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    file = property(_rizin.RzBin_file_get, _rizin.RzBin_file_set)
    _cur = property(_rizin.RzBin__cur_get, _rizin.RzBin__cur_set)
    narch = property(_rizin.RzBin_narch_get, _rizin.RzBin_narch_set)
    user = property(_rizin.RzBin_user_get, _rizin.RzBin_user_set)
    event = property(_rizin.RzBin_event_get, _rizin.RzBin_event_set)
    debase64 = property(_rizin.RzBin_debase64_get, _rizin.RzBin_debase64_set)
    maxstrbuf = property(_rizin.RzBin_maxstrbuf_get, _rizin.RzBin_maxstrbuf_set)
    rawstr = property(_rizin.RzBin_rawstr_get, _rizin.RzBin_rawstr_set)
    sdb = property(_rizin.RzBin_sdb_get, _rizin.RzBin_sdb_set)
    ids = property(_rizin.RzBin_ids_get, _rizin.RzBin_ids_set)
    plugins = property(_rizin.RzBin_plugins_get, _rizin.RzBin_plugins_set)
    binxtrs = property(_rizin.RzBin_binxtrs_get, _rizin.RzBin_binxtrs_set)
    binfiles = property(_rizin.RzBin_binfiles_get, _rizin.RzBin_binfiles_set)
    cb_printf = property(_rizin.RzBin_cb_printf_get, _rizin.RzBin_cb_printf_set)
    loadany = property(_rizin.RzBin_loadany_get, _rizin.RzBin_loadany_set)
    iob = property(_rizin.RzBin_iob_get, _rizin.RzBin_iob_set)
    consb = property(_rizin.RzBin_consb_get, _rizin.RzBin_consb_set)
    force = property(_rizin.RzBin_force_get, _rizin.RzBin_force_set)
    is_debugger = property(_rizin.RzBin_is_debugger_get, _rizin.RzBin_is_debugger_set)
    want_dbginfo = property(_rizin.RzBin_want_dbginfo_get, _rizin.RzBin_want_dbginfo_set)
    filter = property(_rizin.RzBin_filter_get, _rizin.RzBin_filter_set)
    strfilter = property(_rizin.RzBin_strfilter_get, _rizin.RzBin_strfilter_set)
    _strpurge = property(_rizin.RzBin__strpurge_get, _rizin.RzBin__strpurge_set)
    srcdir = property(_rizin.RzBin_srcdir_get, _rizin.RzBin_srcdir_set)
    prefix = property(_rizin.RzBin_prefix_get, _rizin.RzBin_prefix_set)
    filter_rules = property(_rizin.RzBin_filter_rules_get, _rizin.RzBin_filter_rules_set)
    verbose = property(_rizin.RzBin_verbose_get, _rizin.RzBin_verbose_set)
    demangle = property(_rizin.RzBin_demangle_get, _rizin.RzBin_demangle_set)
    use_xtr = property(_rizin.RzBin_use_xtr_get, _rizin.RzBin_use_xtr_set)
    constpool = property(_rizin.RzBin_constpool_get, _rizin.RzBin_constpool_set)
    is_reloc_patched = property(_rizin.RzBin_is_reloc_patched_get, _rizin.RzBin_is_reloc_patched_set)
    demangler = property(_rizin.RzBin_demangler_get, _rizin.RzBin_demangler_set)
    hash = property(_rizin.RzBin_hash_get, _rizin.RzBin_hash_set)
    default_hashes = property(_rizin.RzBin_default_hashes_get, _rizin.RzBin_default_hashes_set)
    str_search_cfg = property(_rizin.RzBin_str_search_cfg_get, _rizin.RzBin_str_search_cfg_set)

    @staticmethod
    def xtrdata_new(buf, offset, size, file_count, metadata):
        return _rizin.RzBin_xtrdata_new(buf, offset, size, file_count, metadata)

    @staticmethod
    def xtrdata_free(data):
        return _rizin.RzBin_xtrdata_free(data)

    @staticmethod
    def trycatch_new(source, _from, to, handler, filter):
        return _rizin.RzBin_trycatch_new(source, _from, to, handler, filter)

    @staticmethod
    def trycatch_free(tc):
        return _rizin.RzBin_trycatch_free(tc)

    @staticmethod
    def reloc_size(reloc):
        return _rizin.RzBin_reloc_size(reloc)

    @staticmethod
    def reloc_storage_new(relocs):
        return _rizin.RzBin_reloc_storage_new(relocs)

    @staticmethod
    def reloc_storage_free(storage):
        return _rizin.RzBin_reloc_storage_free(storage)

    @staticmethod
    def reloc_storage_get_reloc_in(storage, vaddr, size):
        return _rizin.RzBin_reloc_storage_get_reloc_in(storage, vaddr, size)

    @staticmethod
    def reloc_storage_get_reloc_to(storage, vaddr):
        return _rizin.RzBin_reloc_storage_get_reloc_to(storage, vaddr)

    @staticmethod
    def field_new(paddr, vaddr, size, name, comment, format, format_named):
        return _rizin.RzBin_field_new(paddr, vaddr, size, name, comment, format, format_named)

    @staticmethod
    def field_free(field):
        return _rizin.RzBin_field_free(field)

    @staticmethod
    def class_field_new(vaddr, paddr, name, classname, libname, type):
        return _rizin.RzBin_class_field_new(vaddr, paddr, name, classname, libname, type)

    @staticmethod
    def class_field_free(field):
        return _rizin.RzBin_class_field_free(field)

    @staticmethod
    def class_free(k):
        return _rizin.RzBin_class_free(k)

    @staticmethod
    def virtual_file_clone(vfile):
        return _rizin.RzBin_virtual_file_clone(vfile)

    @staticmethod
    def virtual_file_free(vfile):
        return _rizin.RzBin_virtual_file_free(vfile)

    @staticmethod
    def map_clone(map):
        return _rizin.RzBin_map_clone(map)

    @staticmethod
    def map_free(map):
        return _rizin.RzBin_map_free(map)

    @staticmethod
    def map_is_data(map):
        return _rizin.RzBin_map_is_data(map)

    @staticmethod
    def maps_of_file_sections(binfile):
        return _rizin.RzBin_maps_of_file_sections(binfile)

    @staticmethod
    def sections_of_maps(maps):
        return _rizin.RzBin_sections_of_maps(maps)

    @staticmethod
    def section_new(name):
        return _rizin.RzBin_section_new(name)

    @staticmethod
    def section_free(bs):
        return _rizin.RzBin_section_free(bs)

    @staticmethod
    def section_is_data(section):
        return _rizin.RzBin_section_is_data(section)

    @staticmethod
    def info_free(rb):
        return _rizin.RzBin_info_free(rb)

    @staticmethod
    def import_free(imp):
        return _rizin.RzBin_import_free(imp)

    @staticmethod
    def resource_free(res):
        return _rizin.RzBin_resource_free(res)

    @staticmethod
    def symbol_free(sym):
        return _rizin.RzBin_symbol_free(sym)

    @staticmethod
    def reloc_free(reloc):
        return _rizin.RzBin_reloc_free(reloc)

    @staticmethod
    def symbol_new(name, paddr, vaddr):
        return _rizin.RzBin_symbol_new(name, paddr, vaddr)

    @staticmethod
    def string_free(_str):
        return _rizin.RzBin_string_free(_str)

    @staticmethod
    def import_clone(o):
        return _rizin.RzBin_import_clone(o)

    @staticmethod
    def symbol_name(s):
        return _rizin.RzBin_symbol_name(s)

    @staticmethod
    def relocs_patch_find_targets_map_base(maps, target_sz):
        return _rizin.RzBin_relocs_patch_find_targets_map_base(maps, target_sz)

    @staticmethod
    def reloc_target_builder_new(target_size, target_base):
        return _rizin.RzBin_reloc_target_builder_new(target_size, target_base)

    @staticmethod
    def reloc_target_builder_free(builder):
        return _rizin.RzBin_reloc_target_builder_free(builder)

    @staticmethod
    def reloc_target_builder_get_target(builder, sym):
        return _rizin.RzBin_reloc_target_builder_get_target(builder, sym)

    @staticmethod
    def relocs_patch_maps(maps, buf_patched, buf_patched_offset, target_vfile_base, target_vfile_size, vfile_name_patched, vfile_name_reloc_targets):
        return _rizin.RzBin_relocs_patch_maps(maps, buf_patched, buf_patched_offset, target_vfile_base, target_vfile_size, vfile_name_patched, vfile_name_reloc_targets)

    @staticmethod
    def options_init(opt, fd, baseaddr, loadaddr, patch_relocs):
        return _rizin.RzBin_options_init(opt, fd, baseaddr, loadaddr, patch_relocs)

    @staticmethod
    def arch_options_init(opt, arch, bits):
        return _rizin.RzBin_arch_options_init(opt, arch, bits)

    @staticmethod
    def new():
        return _rizin.RzBin_new()

    @staticmethod
    def string_search_opt_init(opt):
        return _rizin.RzBin_string_search_opt_init(opt)

    @staticmethod
    def object_get_entries(obj):
        return _rizin.RzBin_object_get_entries(obj)

    @staticmethod
    def object_get_fields(obj):
        return _rizin.RzBin_object_get_fields(obj)

    @staticmethod
    def object_get_imports(obj):
        return _rizin.RzBin_object_get_imports(obj)

    @staticmethod
    def object_get_info(obj):
        return _rizin.RzBin_object_get_info(obj)

    @staticmethod
    def object_get_libs(obj):
        return _rizin.RzBin_object_get_libs(obj)

    @staticmethod
    def object_get_sections_all(obj):
        return _rizin.RzBin_object_get_sections_all(obj)

    @staticmethod
    def object_get_sections(obj):
        return _rizin.RzBin_object_get_sections(obj)

    @staticmethod
    def object_get_segments(obj):
        return _rizin.RzBin_object_get_segments(obj)

    @staticmethod
    def object_get_maps(obj):
        return _rizin.RzBin_object_get_maps(obj)

    @staticmethod
    def object_get_classes(obj):
        return _rizin.RzBin_object_get_classes(obj)

    @staticmethod
    def object_get_strings(obj):
        return _rizin.RzBin_object_get_strings(obj)

    @staticmethod
    def object_get_mem(obj):
        return _rizin.RzBin_object_get_mem(obj)

    @staticmethod
    def object_get_resources(obj):
        return _rizin.RzBin_object_get_resources(obj)

    @staticmethod
    def object_get_symbols(obj):
        return _rizin.RzBin_object_get_symbols(obj)

    @staticmethod
    def object_get_string_at(obj, address, is_va):
        return _rizin.RzBin_object_get_string_at(obj, address, is_va)

    @staticmethod
    def object_is_big_endian(obj):
        return _rizin.RzBin_object_is_big_endian(obj)

    @staticmethod
    def object_is_static(obj):
        return _rizin.RzBin_object_is_static(obj)

    @staticmethod
    def object_sections_mapping_list(obj):
        return _rizin.RzBin_object_sections_mapping_list(obj)

    @staticmethod
    def object_get_maps_at(o, off, va):
        return _rizin.RzBin_object_get_maps_at(o, off, va)

    @staticmethod
    def object_get_map_at(o, off, va):
        return _rizin.RzBin_object_get_map_at(o, off, va)

    @staticmethod
    def object_p2v(obj, paddr):
        return _rizin.RzBin_object_p2v(obj, paddr)

    @staticmethod
    def object_p2v_all(obj, paddr):
        return _rizin.RzBin_object_p2v_all(obj, paddr)

    @staticmethod
    def object_v2p(obj, vaddr):
        return _rizin.RzBin_object_v2p(obj, vaddr)

    @staticmethod
    def language_detect(binfile):
        return _rizin.RzBin_language_detect(binfile)

    @staticmethod
    def language_to_id(language):
        return _rizin.RzBin_language_to_id(language)

    @staticmethod
    def language_to_string(language):
        return _rizin.RzBin_language_to_string(language)

    @staticmethod
    def entry_type_string(etype):
        return _rizin.RzBin_entry_type_string(etype)

    @staticmethod
    def get_first_entrypoint(obj):
        return _rizin.RzBin_get_first_entrypoint(obj)

    @staticmethod
    def file_hash_free(fhash):
        return _rizin.RzBin_file_hash_free(fhash)

    @staticmethod
    def object_addr_with_base(o, addr):
        return _rizin.RzBin_object_addr_with_base(o, addr)

    @staticmethod
    def object_get_vaddr(o, paddr, vaddr):
        return _rizin.RzBin_object_get_vaddr(o, paddr, vaddr)

    @staticmethod
    def object_get_special_symbol(o, sym):
        return _rizin.RzBin_object_get_special_symbol(o, sym)

    @staticmethod
    def object_patch_relocs(bf, o):
        return _rizin.RzBin_object_patch_relocs(bf, o)

    @staticmethod
    def object_get_symbol_of_import(o, imp):
        return _rizin.RzBin_object_get_symbol_of_import(o, imp)

    @staticmethod
    def object_get_virtual_file(o, name):
        return _rizin.RzBin_object_get_virtual_file(o, name)

    @staticmethod
    def object_get_symbol_at(o, off, va):
        return _rizin.RzBin_object_get_symbol_at(o, off, va)

    @staticmethod
    def object_find_class(o, name):
        return _rizin.RzBin_object_find_class(o, name)

    @staticmethod
    def object_find_method(o, klass, method):
        return _rizin.RzBin_object_find_method(o, klass, method)

    @staticmethod
    def object_find_method_by_vaddr(o, vaddr):
        return _rizin.RzBin_object_find_method_by_vaddr(o, vaddr)

    @staticmethod
    def object_find_field(o, klass, field):
        return _rizin.RzBin_object_find_field(o, klass, field)

    @staticmethod
    def object_add_class(o, name, super, vaddr):
        return _rizin.RzBin_object_add_class(o, name, super, vaddr)

    @staticmethod
    def object_add_method(o, klass, method, paddr, vaddr):
        return _rizin.RzBin_object_add_method(o, klass, method, paddr, vaddr)

    @staticmethod
    def object_add_field(o, klass, field, paddr, vaddr):
        return _rizin.RzBin_object_add_field(o, klass, field, paddr, vaddr)

    @staticmethod
    def mem_free(data):
        return _rizin.RzBin_mem_free(data)

    @staticmethod
    def get_meth_flag_string(flag, compact):
        return _rizin.RzBin_get_meth_flag_string(flag, compact)

    @staticmethod
    def get_section_at(o, off, va):
        return _rizin.RzBin_get_section_at(o, off, va)

    @staticmethod
    def get_segment_at(o, off, va):
        return _rizin.RzBin_get_segment_at(o, off, va)

    @staticmethod
    def string_database_new(pvector):
        return _rizin.RzBin_string_database_new(pvector)

    @staticmethod
    def string_database_free(db):
        return _rizin.RzBin_string_database_free(db)

    @staticmethod
    def string_database_add(db, bstr):
        return _rizin.RzBin_string_database_add(db, bstr)

    @staticmethod
    def string_database_remove(db, address, is_va):
        return _rizin.RzBin_string_database_remove(db, address, is_va)

    def section_type_to_string(self, type):
        return _rizin.RzBin_section_type_to_string(self, type)

    def section_flag_to_list(self, flag):
        return _rizin.RzBin_section_flag_to_list(self, flag)

    def free(self):
        return _rizin.RzBin_free(self)

    def open(self, file, opt):
        return _rizin.RzBin_open(self, file, opt)

    def open_io(self, opt):
        return _rizin.RzBin_open_io(self, opt)

    def open_buf(self, buf, opt):
        return _rizin.RzBin_open_buf(self, buf, opt)

    def reload(self, bf, baseaddr):
        return _rizin.RzBin_reload(self, bf, baseaddr)

    def bind(self, bnd):
        return _rizin.RzBin_bind(self, bnd)

    def plugin_add(self, plugin):
        return _rizin.RzBin_plugin_add(self, plugin)

    def plugin_del(self, plugin):
        return _rizin.RzBin_plugin_del(self, plugin)

    def xtr_plugin_add(self, plugin):
        return _rizin.RzBin_xtr_plugin_add(self, plugin)

    def xtr_plugin_del(self, plugin):
        return _rizin.RzBin_xtr_plugin_del(self, plugin)

    def list_plugin(self, name, pj, json):
        return _rizin.RzBin_list_plugin(self, name, pj, json)

    def get_binplugin_by_buffer(self, buf):
        return _rizin.RzBin_get_binplugin_by_buffer(self, buf)

    def plugin_get(self, name):
        return _rizin.RzBin_plugin_get(self, name)

    def xtrplugin_get(self, name):
        return _rizin.RzBin_xtrplugin_get(self, name)

    def force_plugin(self, pname):
        return _rizin.RzBin_force_plugin(self, pname)

    def get_baddr(self):
        return _rizin.RzBin_get_baddr(self)

    def set_user_ptr(self, user):
        return _rizin.RzBin_set_user_ptr(self, user)

    def set_baddr(self, baddr):
        return _rizin.RzBin_set_baddr(self, baddr)

    def get_laddr(self):
        return _rizin.RzBin_get_laddr(self)

    def get_size(self):
        return _rizin.RzBin_get_size(self)

    def is_static(self):
        return _rizin.RzBin_is_static(self)

    def object_reset_strings(self, bf, obj):
        return _rizin.RzBin_object_reset_strings(self, bf, obj)

    def cur(self):
        return _rizin.RzBin_cur(self)

    def cur_object(self):
        return _rizin.RzBin_cur_object(self)

    def select(self, arch, bits, name):
        return _rizin.RzBin_select(self, arch, bits, name)

    def select_bfid(self, bf_id):
        return _rizin.RzBin_select_bfid(self, bf_id)

    def use_arch(self, arch, bits, name):
        return _rizin.RzBin_use_arch(self, arch, bits, name)

    def create(self, plugin_name, code, codelen, data, datalen, opt):
        return _rizin.RzBin_create(self, plugin_name, code, codelen, data, datalen, opt)

    def file_object_new_from_xtr_data(self, bf, opts, data):
        return _rizin.RzBin_file_object_new_from_xtr_data(self, bf, opts, data)

    def file_at(self, addr):
        return _rizin.RzBin_file_at(self, addr)

    def file_find_by_arch_bits(self, arch, bits):
        return _rizin.RzBin_file_find_by_arch_bits(self, arch, bits)

    def file_find_by_id(self, bin_id):
        return _rizin.RzBin_file_find_by_id(self, bin_id)

    def file_find_by_fd(self, bin_fd):
        return _rizin.RzBin_file_find_by_fd(self, bin_fd)

    def file_find_by_name(self, name):
        return _rizin.RzBin_file_find_by_name(self, name)

    def file_set_cur_binfile(self, bf):
        return _rizin.RzBin_file_set_cur_binfile(self, bf)

    def file_set_cur_by_fd(self, bin_fd):
        return _rizin.RzBin_file_set_cur_by_fd(self, bin_fd)

    def file_set_cur_by_id(self, bin_id):
        return _rizin.RzBin_file_set_cur_by_id(self, bin_id)

    def file_set_cur_by_name(self, name):
        return _rizin.RzBin_file_set_cur_by_name(self, name)

    def file_delete_all(self):
        return _rizin.RzBin_file_delete_all(self)

    def file_delete(self, bf):
        return _rizin.RzBin_file_delete(self, bf)

    def file_compute_hashes(self, bf, limit):
        return _rizin.RzBin_file_compute_hashes(self, bf, limit)

    def file_set_hashes(self, new_hashes):
        return _rizin.RzBin_file_set_hashes(self, new_hashes)

    def demangle_with_flags(self, flags):
        return _rizin.RzBin_demangle_with_flags(self, flags)

    def load_filter(self, rules):
        return _rizin.RzBin_load_filter(self, rules)

    def strpurge(self, str, addr):
        return _rizin.RzBin_strpurge(self, str, addr)

    def string_filter(self, str, addr):
        return _rizin.RzBin_string_filter(self, str, addr)

    def __init__(self):
        _rizin.RzBin_swiginit(self, _rizin.new_RzBin())
    __swig_destroy__ = _rizin.delete_RzBin

# Register RzBin in _rizin:
_rizin.RzBin_swigregister(RzBin)
class RzBinXtrPlugin(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzBinXtrPlugin_name_get, _rizin.RzBinXtrPlugin_name_set)
    desc = property(_rizin.RzBinXtrPlugin_desc_get, _rizin.RzBinXtrPlugin_desc_set)
    license = property(_rizin.RzBinXtrPlugin_license_get, _rizin.RzBinXtrPlugin_license_set)
    init = property(_rizin.RzBinXtrPlugin_init_get, _rizin.RzBinXtrPlugin_init_set)
    fini = property(_rizin.RzBinXtrPlugin_fini_get, _rizin.RzBinXtrPlugin_fini_set)
    check_buffer = property(_rizin.RzBinXtrPlugin_check_buffer_get, _rizin.RzBinXtrPlugin_check_buffer_set)
    extract_from_bytes = property(_rizin.RzBinXtrPlugin_extract_from_bytes_get, _rizin.RzBinXtrPlugin_extract_from_bytes_set)
    extract_from_buffer = property(_rizin.RzBinXtrPlugin_extract_from_buffer_get, _rizin.RzBinXtrPlugin_extract_from_buffer_set)
    extractall_from_bytes = property(_rizin.RzBinXtrPlugin_extractall_from_bytes_get, _rizin.RzBinXtrPlugin_extractall_from_bytes_set)
    extractall_from_buffer = property(_rizin.RzBinXtrPlugin_extractall_from_buffer_get, _rizin.RzBinXtrPlugin_extractall_from_buffer_set)
    extract = property(_rizin.RzBinXtrPlugin_extract_get, _rizin.RzBinXtrPlugin_extract_set)
    extractall = property(_rizin.RzBinXtrPlugin_extractall_get, _rizin.RzBinXtrPlugin_extractall_set)
    load = property(_rizin.RzBinXtrPlugin_load_get, _rizin.RzBinXtrPlugin_load_set)
    size = property(_rizin.RzBinXtrPlugin_size_get, _rizin.RzBinXtrPlugin_size_set)
    destroy = property(_rizin.RzBinXtrPlugin_destroy_get, _rizin.RzBinXtrPlugin_destroy_set)
    free_xtr = property(_rizin.RzBinXtrPlugin_free_xtr_get, _rizin.RzBinXtrPlugin_free_xtr_set)

    def __init__(self):
        _rizin.RzBinXtrPlugin_swiginit(self, _rizin.new_RzBinXtrPlugin())
    __swig_destroy__ = _rizin.delete_RzBinXtrPlugin

# Register RzBinXtrPlugin in _rizin:
_rizin.RzBinXtrPlugin_swigregister(RzBinXtrPlugin)
class RzBinOptions(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    pluginname = property(_rizin.RzBinOptions_pluginname_get, _rizin.RzBinOptions_pluginname_set)
    obj_opts = property(_rizin.RzBinOptions_obj_opts_get, _rizin.RzBinOptions_obj_opts_set)
    sz = property(_rizin.RzBinOptions_sz_get, _rizin.RzBinOptions_sz_set)
    xtr_idx = property(_rizin.RzBinOptions_xtr_idx_get, _rizin.RzBinOptions_xtr_idx_set)
    fd = property(_rizin.RzBinOptions_fd_get, _rizin.RzBinOptions_fd_set)
    filename = property(_rizin.RzBinOptions_filename_get, _rizin.RzBinOptions_filename_set)

    def __init__(self):
        _rizin.RzBinOptions_swiginit(self, _rizin.new_RzBinOptions())
    __swig_destroy__ = _rizin.delete_RzBinOptions

# Register RzBinOptions in _rizin:
_rizin.RzBinOptions_swigregister(RzBinOptions)
class RzBinInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    file = property(_rizin.RzBinInfo_file_get, _rizin.RzBinInfo_file_set)
    type = property(_rizin.RzBinInfo_type_get, _rizin.RzBinInfo_type_set)
    bclass = property(_rizin.RzBinInfo_bclass_get, _rizin.RzBinInfo_bclass_set)
    rclass = property(_rizin.RzBinInfo_rclass_get, _rizin.RzBinInfo_rclass_set)
    arch = property(_rizin.RzBinInfo_arch_get, _rizin.RzBinInfo_arch_set)
    cpu = property(_rizin.RzBinInfo_cpu_get, _rizin.RzBinInfo_cpu_set)
    machine = property(_rizin.RzBinInfo_machine_get, _rizin.RzBinInfo_machine_set)
    head_flag = property(_rizin.RzBinInfo_head_flag_get, _rizin.RzBinInfo_head_flag_set)
    features = property(_rizin.RzBinInfo_features_get, _rizin.RzBinInfo_features_set)
    os = property(_rizin.RzBinInfo_os_get, _rizin.RzBinInfo_os_set)
    subsystem = property(_rizin.RzBinInfo_subsystem_get, _rizin.RzBinInfo_subsystem_set)
    rpath = property(_rizin.RzBinInfo_rpath_get, _rizin.RzBinInfo_rpath_set)
    guid = property(_rizin.RzBinInfo_guid_get, _rizin.RzBinInfo_guid_set)
    debug_file_name = property(_rizin.RzBinInfo_debug_file_name_get, _rizin.RzBinInfo_debug_file_name_set)
    lang = property(_rizin.RzBinInfo_lang_get, _rizin.RzBinInfo_lang_set)
    default_cc = property(_rizin.RzBinInfo_default_cc_get, _rizin.RzBinInfo_default_cc_set)
    file_hashes = property(_rizin.RzBinInfo_file_hashes_get, _rizin.RzBinInfo_file_hashes_set)
    bits = property(_rizin.RzBinInfo_bits_get, _rizin.RzBinInfo_bits_set)
    has_va = property(_rizin.RzBinInfo_has_va_get, _rizin.RzBinInfo_has_va_set)
    has_pi = property(_rizin.RzBinInfo_has_pi_get, _rizin.RzBinInfo_has_pi_set)
    has_canary = property(_rizin.RzBinInfo_has_canary_get, _rizin.RzBinInfo_has_canary_set)
    has_retguard = property(_rizin.RzBinInfo_has_retguard_get, _rizin.RzBinInfo_has_retguard_set)
    has_sanitizers = property(_rizin.RzBinInfo_has_sanitizers_get, _rizin.RzBinInfo_has_sanitizers_set)
    has_crypto = property(_rizin.RzBinInfo_has_crypto_get, _rizin.RzBinInfo_has_crypto_set)
    has_nx = property(_rizin.RzBinInfo_has_nx_get, _rizin.RzBinInfo_has_nx_set)
    has_nobtcfi = property(_rizin.RzBinInfo_has_nobtcfi_get, _rizin.RzBinInfo_has_nobtcfi_set)
    big_endian = property(_rizin.RzBinInfo_big_endian_get, _rizin.RzBinInfo_big_endian_set)
    actual_checksum = property(_rizin.RzBinInfo_actual_checksum_get, _rizin.RzBinInfo_actual_checksum_set)
    claimed_checksum = property(_rizin.RzBinInfo_claimed_checksum_get, _rizin.RzBinInfo_claimed_checksum_set)
    pe_overlay = property(_rizin.RzBinInfo_pe_overlay_get, _rizin.RzBinInfo_pe_overlay_set)
    signature = property(_rizin.RzBinInfo_signature_get, _rizin.RzBinInfo_signature_set)
    dbg_info = property(_rizin.RzBinInfo_dbg_info_get, _rizin.RzBinInfo_dbg_info_set)
    sum = property(_rizin.RzBinInfo_sum_get, _rizin.RzBinInfo_sum_set)
    baddr = property(_rizin.RzBinInfo_baddr_get, _rizin.RzBinInfo_baddr_set)
    intrp = property(_rizin.RzBinInfo_intrp_get, _rizin.RzBinInfo_intrp_set)
    compiler = property(_rizin.RzBinInfo_compiler_get, _rizin.RzBinInfo_compiler_set)

    def __init__(self):
        _rizin.RzBinInfo_swiginit(self, _rizin.new_RzBinInfo())
    __swig_destroy__ = _rizin.delete_RzBinInfo

# Register RzBinInfo in _rizin:
_rizin.RzBinInfo_swigregister(RzBinInfo)
class RzBinSymbol(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzBinSymbol_name_get, _rizin.RzBinSymbol_name_set)
    dname = property(_rizin.RzBinSymbol_dname_get, _rizin.RzBinSymbol_dname_set)
    libname = property(_rizin.RzBinSymbol_libname_get, _rizin.RzBinSymbol_libname_set)
    classname = property(_rizin.RzBinSymbol_classname_get, _rizin.RzBinSymbol_classname_set)
    forwarder = property(_rizin.RzBinSymbol_forwarder_get, _rizin.RzBinSymbol_forwarder_set)
    bind = property(_rizin.RzBinSymbol_bind_get, _rizin.RzBinSymbol_bind_set)
    type = property(_rizin.RzBinSymbol_type_get, _rizin.RzBinSymbol_type_set)
    rtype = property(_rizin.RzBinSymbol_rtype_get, _rizin.RzBinSymbol_rtype_set)
    is_imported = property(_rizin.RzBinSymbol_is_imported_get, _rizin.RzBinSymbol_is_imported_set)
    visibility_str = property(_rizin.RzBinSymbol_visibility_str_get, _rizin.RzBinSymbol_visibility_str_set)
    vaddr = property(_rizin.RzBinSymbol_vaddr_get, _rizin.RzBinSymbol_vaddr_set)
    paddr = property(_rizin.RzBinSymbol_paddr_get, _rizin.RzBinSymbol_paddr_set)
    size = property(_rizin.RzBinSymbol_size_get, _rizin.RzBinSymbol_size_set)
    ordinal = property(_rizin.RzBinSymbol_ordinal_get, _rizin.RzBinSymbol_ordinal_set)
    visibility = property(_rizin.RzBinSymbol_visibility_get, _rizin.RzBinSymbol_visibility_set)
    bits = property(_rizin.RzBinSymbol_bits_get, _rizin.RzBinSymbol_bits_set)
    method_flags = property(_rizin.RzBinSymbol_method_flags_get, _rizin.RzBinSymbol_method_flags_set)
    dup_count = property(_rizin.RzBinSymbol_dup_count_get, _rizin.RzBinSymbol_dup_count_set)

    def __init__(self):
        _rizin.RzBinSymbol_swiginit(self, _rizin.new_RzBinSymbol())
    __swig_destroy__ = _rizin.delete_RzBinSymbol

# Register RzBinSymbol in _rizin:
_rizin.RzBinSymbol_swigregister(RzBinSymbol)
class RzBinSection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzBinSection_name_get, _rizin.RzBinSection_name_set)
    size = property(_rizin.RzBinSection_size_get, _rizin.RzBinSection_size_set)
    vsize = property(_rizin.RzBinSection_vsize_get, _rizin.RzBinSection_vsize_set)
    vaddr = property(_rizin.RzBinSection_vaddr_get, _rizin.RzBinSection_vaddr_set)
    paddr = property(_rizin.RzBinSection_paddr_get, _rizin.RzBinSection_paddr_set)
    perm = property(_rizin.RzBinSection_perm_get, _rizin.RzBinSection_perm_set)
    align = property(_rizin.RzBinSection_align_get, _rizin.RzBinSection_align_set)
    arch = property(_rizin.RzBinSection_arch_get, _rizin.RzBinSection_arch_set)
    type = property(_rizin.RzBinSection_type_get, _rizin.RzBinSection_type_set)
    flags = property(_rizin.RzBinSection_flags_get, _rizin.RzBinSection_flags_set)
    layout = property(_rizin.RzBinSection_layout_get, _rizin.RzBinSection_layout_set)
    bits = property(_rizin.RzBinSection_bits_get, _rizin.RzBinSection_bits_set)
    has_strings = property(_rizin.RzBinSection_has_strings_get, _rizin.RzBinSection_has_strings_set)
    is_data = property(_rizin.RzBinSection_is_data_get, _rizin.RzBinSection_is_data_set)
    is_segment = property(_rizin.RzBinSection_is_segment_get, _rizin.RzBinSection_is_segment_set)

    def __init__(self):
        _rizin.RzBinSection_swiginit(self, _rizin.new_RzBinSection())
    __swig_destroy__ = _rizin.delete_RzBinSection

# Register RzBinSection in _rizin:
_rizin.RzBinSection_swigregister(RzBinSection)
class RzBinMap(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    paddr = property(_rizin.RzBinMap_paddr_get, _rizin.RzBinMap_paddr_set)
    psize = property(_rizin.RzBinMap_psize_get, _rizin.RzBinMap_psize_set)
    vaddr = property(_rizin.RzBinMap_vaddr_get, _rizin.RzBinMap_vaddr_set)
    vsize = property(_rizin.RzBinMap_vsize_get, _rizin.RzBinMap_vsize_set)
    name = property(_rizin.RzBinMap_name_get, _rizin.RzBinMap_name_set)
    perm = property(_rizin.RzBinMap_perm_get, _rizin.RzBinMap_perm_set)
    vfile_name = property(_rizin.RzBinMap_vfile_name_get, _rizin.RzBinMap_vfile_name_set)

    def __init__(self):
        _rizin.RzBinMap_swiginit(self, _rizin.new_RzBinMap())
    __swig_destroy__ = _rizin.delete_RzBinMap

# Register RzBinMap in _rizin:
_rizin.RzBinMap_swigregister(RzBinMap)
class RzBinPlugin(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzBinPlugin_name_get, _rizin.RzBinPlugin_name_set)
    desc = property(_rizin.RzBinPlugin_desc_get, _rizin.RzBinPlugin_desc_set)
    author = property(_rizin.RzBinPlugin_author_get, _rizin.RzBinPlugin_author_set)
    version = property(_rizin.RzBinPlugin_version_get, _rizin.RzBinPlugin_version_set)
    license = property(_rizin.RzBinPlugin_license_get, _rizin.RzBinPlugin_license_set)
    get_sdb = property(_rizin.RzBinPlugin_get_sdb_get, _rizin.RzBinPlugin_get_sdb_set)
    load_buffer = property(_rizin.RzBinPlugin_load_buffer_get, _rizin.RzBinPlugin_load_buffer_set)
    size = property(_rizin.RzBinPlugin_size_get, _rizin.RzBinPlugin_size_set)
    destroy = property(_rizin.RzBinPlugin_destroy_get, _rizin.RzBinPlugin_destroy_set)
    check_bytes = property(_rizin.RzBinPlugin_check_bytes_get, _rizin.RzBinPlugin_check_bytes_set)
    check_buffer = property(_rizin.RzBinPlugin_check_buffer_get, _rizin.RzBinPlugin_check_buffer_set)
    check_filename = property(_rizin.RzBinPlugin_check_filename_get, _rizin.RzBinPlugin_check_filename_set)
    baddr = property(_rizin.RzBinPlugin_baddr_get, _rizin.RzBinPlugin_baddr_set)
    boffset = property(_rizin.RzBinPlugin_boffset_get, _rizin.RzBinPlugin_boffset_set)
    virtual_files = property(_rizin.RzBinPlugin_virtual_files_get, _rizin.RzBinPlugin_virtual_files_set)
    maps = property(_rizin.RzBinPlugin_maps_get, _rizin.RzBinPlugin_maps_set)
    binsym = property(_rizin.RzBinPlugin_binsym_get, _rizin.RzBinPlugin_binsym_set)
    entries = property(_rizin.RzBinPlugin_entries_get, _rizin.RzBinPlugin_entries_set)
    sections = property(_rizin.RzBinPlugin_sections_get, _rizin.RzBinPlugin_sections_set)
    lines = property(_rizin.RzBinPlugin_lines_get, _rizin.RzBinPlugin_lines_set)
    symbols = property(_rizin.RzBinPlugin_symbols_get, _rizin.RzBinPlugin_symbols_set)
    imports = property(_rizin.RzBinPlugin_imports_get, _rizin.RzBinPlugin_imports_set)
    strings = property(_rizin.RzBinPlugin_strings_get, _rizin.RzBinPlugin_strings_set)
    info = property(_rizin.RzBinPlugin_info_get, _rizin.RzBinPlugin_info_set)
    fields = property(_rizin.RzBinPlugin_fields_get, _rizin.RzBinPlugin_fields_set)
    libs = property(_rizin.RzBinPlugin_libs_get, _rizin.RzBinPlugin_libs_set)
    relocs = property(_rizin.RzBinPlugin_relocs_get, _rizin.RzBinPlugin_relocs_set)
    trycatch = property(_rizin.RzBinPlugin_trycatch_get, _rizin.RzBinPlugin_trycatch_set)
    classes = property(_rizin.RzBinPlugin_classes_get, _rizin.RzBinPlugin_classes_set)
    mem = property(_rizin.RzBinPlugin_mem_get, _rizin.RzBinPlugin_mem_set)
    patch_relocs = property(_rizin.RzBinPlugin_patch_relocs_get, _rizin.RzBinPlugin_patch_relocs_set)
    hashes = property(_rizin.RzBinPlugin_hashes_get, _rizin.RzBinPlugin_hashes_set)
    resources = property(_rizin.RzBinPlugin_resources_get, _rizin.RzBinPlugin_resources_set)
    header = property(_rizin.RzBinPlugin_header_get, _rizin.RzBinPlugin_header_set)
    signature = property(_rizin.RzBinPlugin_signature_get, _rizin.RzBinPlugin_signature_set)
    demangle_type = property(_rizin.RzBinPlugin_demangle_type_get, _rizin.RzBinPlugin_demangle_type_set)
    enrich_asm = property(_rizin.RzBinPlugin_enrich_asm_get, _rizin.RzBinPlugin_enrich_asm_set)
    get_offset = property(_rizin.RzBinPlugin_get_offset_get, _rizin.RzBinPlugin_get_offset_set)
    get_name = property(_rizin.RzBinPlugin_get_name_get, _rizin.RzBinPlugin_get_name_set)
    get_vaddr = property(_rizin.RzBinPlugin_get_vaddr_get, _rizin.RzBinPlugin_get_vaddr_set)
    section_type_to_string = property(_rizin.RzBinPlugin_section_type_to_string_get, _rizin.RzBinPlugin_section_type_to_string_set)
    section_flag_to_rzlist = property(_rizin.RzBinPlugin_section_flag_to_rzlist_get, _rizin.RzBinPlugin_section_flag_to_rzlist_set)
    create = property(_rizin.RzBinPlugin_create_get, _rizin.RzBinPlugin_create_set)
    demangle = property(_rizin.RzBinPlugin_demangle_get, _rizin.RzBinPlugin_demangle_set)
    regstate = property(_rizin.RzBinPlugin_regstate_get, _rizin.RzBinPlugin_regstate_set)
    file_type = property(_rizin.RzBinPlugin_file_type_get, _rizin.RzBinPlugin_file_type_set)
    strfilter = property(_rizin.RzBinPlugin_strfilter_get, _rizin.RzBinPlugin_strfilter_set)
    user = property(_rizin.RzBinPlugin_user_get, _rizin.RzBinPlugin_user_set)

    def __init__(self):
        _rizin.RzBinPlugin_swiginit(self, _rizin.new_RzBinPlugin())
    __swig_destroy__ = _rizin.delete_RzBinPlugin

# Register RzBinPlugin in _rizin:
_rizin.RzBinPlugin_swigregister(RzBinPlugin)
class RzBuffer(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type = property(_rizin.RzBuffer_type_get, _rizin.RzBuffer_type_set)
    methods = property(_rizin.RzBuffer_methods_get, _rizin.RzBuffer_methods_set)
    priv = property(_rizin.RzBuffer_priv_get, _rizin.RzBuffer_priv_set)
    whole_buf = property(_rizin.RzBuffer_whole_buf_get, _rizin.RzBuffer_whole_buf_set)
    readonly = property(_rizin.RzBuffer_readonly_get, _rizin.RzBuffer_readonly_set)
    Oxff_priv = property(_rizin.RzBuffer_Oxff_priv_get, _rizin.RzBuffer_Oxff_priv_set)
    refctr = property(_rizin.RzBuffer_refctr_get, _rizin.RzBuffer_refctr_set)
    fd = property(_rizin.RzBuffer_fd_get, _rizin.RzBuffer_fd_set)

    def new_slice(self, offset, size):
        return _rizin.RzBuffer_new_slice(self, offset, size)

    def new_sparse_overlay(self, write_mode):
        return _rizin.RzBuffer_new_sparse_overlay(self, write_mode)

    def new_with_buf(self):
        return _rizin.RzBuffer_new_with_buf(self)

    def get_nstring(self, addr, size):
        return _rizin.RzBuffer_get_nstring(self, addr, size)

    def get_string(self, addr):
        return _rizin.RzBuffer_get_string(self, addr)

    def read_string(self, s):
        return _rizin.RzBuffer_read_string(self, s)

    def to_string(self):
        return _rizin.RzBuffer_to_string(self)

    def ref(self):
        return _rizin.RzBuffer_ref(self)

    def append_buf(self, a):
        return _rizin.RzBuffer_append_buf(self, a)

    def append_buf_slice(self, a, offset, size):
        return _rizin.RzBuffer_append_buf_slice(self, a, offset, size)

    def append_bytes(self, buf):
        return _rizin.RzBuffer_append_bytes(self, buf)

    def append_nbytes(self, len):
        return _rizin.RzBuffer_append_nbytes(self, len)

    def append_ut16(self, n):
        return _rizin.RzBuffer_append_ut16(self, n)

    def append_ut32(self, n):
        return _rizin.RzBuffer_append_ut32(self, n)

    def append_ut64(self, n):
        return _rizin.RzBuffer_append_ut64(self, n)

    def dump(self, file):
        return _rizin.RzBuffer_dump(self, file)

    def fini(self):
        return _rizin.RzBuffer_fini(self)

    def prepend_bytes(self, buf):
        return _rizin.RzBuffer_prepend_bytes(self, buf)

    def read8(self, result):
        return _rizin.RzBuffer_read8(self, result)

    def read8_at(self, addr, result):
        return _rizin.RzBuffer_read8_at(self, addr, result)

    def resize(self, newsize):
        return _rizin.RzBuffer_resize(self, newsize)

    def set_bytes(self, buf):
        return _rizin.RzBuffer_set_bytes(self, buf)

    def write8(self, value):
        return _rizin.RzBuffer_write8(self, value)

    def write8_at(self, addr, value):
        return _rizin.RzBuffer_write8_at(self, addr, value)

    def append_string(self, str):
        return _rizin.RzBuffer_append_string(self, str)

    def fread(self, buf, fmt, n):
        return _rizin.RzBuffer_fread(self, buf, fmt, n)

    def fread_at(self, addr, buf, fmt, n):
        return _rizin.RzBuffer_fread_at(self, addr, buf, fmt, n)

    def fwrite(self, buf, fmt, n):
        return _rizin.RzBuffer_fwrite(self, buf, fmt, n)

    def fwrite_at(self, addr, buf, fmt, n):
        return _rizin.RzBuffer_fwrite_at(self, addr, buf, fmt, n)

    def insert_bytes(self, addr, buf):
        return _rizin.RzBuffer_insert_bytes(self, addr, buf)

    def read(self, buf):
        return _rizin.RzBuffer_read(self, buf)

    def read_at(self, addr, buf):
        return _rizin.RzBuffer_read_at(self, addr, buf)

    def seek(self, addr, whence):
        return _rizin.RzBuffer_seek(self, addr, whence)

    def write(self, buf):
        return _rizin.RzBuffer_write(self, buf)

    def write_at(self, addr, buf):
        return _rizin.RzBuffer_write_at(self, addr, buf)

    def size(self):
        return _rizin.RzBuffer_size(self)

    def tell(self):
        return _rizin.RzBuffer_tell(self)

    def free(self):
        return _rizin.RzBuffer_free(self)

    def set_overflow_byte(self, Oxff):
        return _rizin.RzBuffer_set_overflow_byte(self, Oxff)

    def is_bytes_buf(self):
        return _rizin.RzBuffer_is_bytes_buf(self)

    def data(self, size):
        return _rizin.RzBuffer_data(self, size)

    def get_whole_hot_paths(self, sz):
        return _rizin.RzBuffer_get_whole_hot_paths(self, sz)

    def fwd_scan(self, start, amount, fwd_scan_arg, user):
        return _rizin.RzBuffer_fwd_scan(self, start, amount, fwd_scan_arg, user)

    def uleb128(self, value):
        return _rizin.RzBuffer_uleb128(self, value)

    def sleb128(self, value):
        return _rizin.RzBuffer_sleb128(self, value)

    def sparse_get_chunks(self, count):
        return _rizin.RzBuffer_sparse_get_chunks(self, count)

    def sparse_set_write_mode(self, mode):
        return _rizin.RzBuffer_sparse_set_write_mode(self, mode)

    def sparse_populated_in(self, _from, to):
        return _rizin.RzBuffer_sparse_populated_in(self, _from, to)

    def __init__(self):
        _rizin.RzBuffer_swiginit(self, _rizin.new_RzBuffer())
    __swig_destroy__ = _rizin.delete_RzBuffer

# Register RzBuffer in _rizin:
_rizin.RzBuffer_swigregister(RzBuffer)
class RzCmd(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    core = property(_rizin.RzCmd_core_get, _rizin.RzCmd_core_set)
    nullcallback = property(_rizin.RzCmd_nullcallback_get, _rizin.RzCmd_nullcallback_set)
    cmds = property(_rizin.RzCmd_cmds_get, _rizin.RzCmd_cmds_set)
    aliases = property(_rizin.RzCmd_aliases_get, _rizin.RzCmd_aliases_set)
    macros = property(_rizin.RzCmd_macros_get, _rizin.RzCmd_macros_set)
    language = property(_rizin.RzCmd_language_get, _rizin.RzCmd_language_set)
    ts_symbols_ht = property(_rizin.RzCmd_ts_symbols_ht_get, _rizin.RzCmd_ts_symbols_ht_set)
    root_cmd_desc = property(_rizin.RzCmd_root_cmd_desc_get, _rizin.RzCmd_root_cmd_desc_set)
    ht_cmds = property(_rizin.RzCmd_ht_cmds_get, _rizin.RzCmd_ht_cmds_set)
    has_cons = property(_rizin.RzCmd_has_cons_get, _rizin.RzCmd_has_cons_set)
    batch = property(_rizin.RzCmd_batch_get, _rizin.RzCmd_batch_set)

    def register_swig_command(self, str, director, help, group_help=None):
        return _rizin.RzCmd_register_swig_command(self, str, director, help, group_help)

    def __init__(self):
        _rizin.RzCmd_swiginit(self, _rizin.new_RzCmd())
    __swig_destroy__ = _rizin.delete_RzCmd

# Register RzCmd in _rizin:
_rizin.RzCmd_swigregister(RzCmd)
class RzCmdDescHelp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    summary = property(_rizin.RzCmdDescHelp_summary_get, _rizin.RzCmdDescHelp_summary_set)
    description = property(_rizin.RzCmdDescHelp_description_get, _rizin.RzCmdDescHelp_description_set)
    args_str = property(_rizin.RzCmdDescHelp_args_str_get, _rizin.RzCmdDescHelp_args_str_set)
    usage = property(_rizin.RzCmdDescHelp_usage_get, _rizin.RzCmdDescHelp_usage_set)
    options = property(_rizin.RzCmdDescHelp_options_get, _rizin.RzCmdDescHelp_options_set)
    sort_subcommands = property(_rizin.RzCmdDescHelp_sort_subcommands_get, _rizin.RzCmdDescHelp_sort_subcommands_set)
    details = property(_rizin.RzCmdDescHelp_details_get, _rizin.RzCmdDescHelp_details_set)
    details_cb = property(_rizin.RzCmdDescHelp_details_cb_get, _rizin.RzCmdDescHelp_details_cb_set)
    args = property(_rizin.RzCmdDescHelp_args_get, _rizin.RzCmdDescHelp_args_set)

    def __init__(self):
        _rizin.RzCmdDescHelp_swiginit(self, _rizin.new_RzCmdDescHelp())
    __swig_destroy__ = _rizin.delete_RzCmdDescHelp

# Register RzCmdDescHelp in _rizin:
_rizin.RzCmdDescHelp_swigregister(RzCmdDescHelp)
class RzCmdDescArg(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzCmdDescArg_name_get, _rizin.RzCmdDescArg_name_set)
    optional = property(_rizin.RzCmdDescArg_optional_get, _rizin.RzCmdDescArg_optional_set)
    no_space = property(_rizin.RzCmdDescArg_no_space_get, _rizin.RzCmdDescArg_no_space_set)
    type = property(_rizin.RzCmdDescArg_type_get, _rizin.RzCmdDescArg_type_set)
    flags = property(_rizin.RzCmdDescArg_flags_get, _rizin.RzCmdDescArg_flags_set)
    default_value = property(_rizin.RzCmdDescArg_default_value_get, _rizin.RzCmdDescArg_default_value_set)

    def __init__(self):
        _rizin.RzCmdDescArg_swiginit(self, _rizin.new_RzCmdDescArg())
    __swig_destroy__ = _rizin.delete_RzCmdDescArg

# Register RzCmdDescArg in _rizin:
_rizin.RzCmdDescArg_swigregister(RzCmdDescArg)
class RzConfig(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _lock = property(_rizin.RzConfig__lock_get, _rizin.RzConfig__lock_set)
    user = property(_rizin.RzConfig_user_get, _rizin.RzConfig_user_set)
    num = property(_rizin.RzConfig_num_get, _rizin.RzConfig_num_set)
    nodes = property(_rizin.RzConfig_nodes_get, _rizin.RzConfig_nodes_set)
    ht = property(_rizin.RzConfig_ht_get, _rizin.RzConfig_ht_set)

    @staticmethod
    def node_type(node):
        return _rizin.RzConfig_node_type(node)

    @staticmethod
    def hold_free(h):
        return _rizin.RzConfig_hold_free(h)

    @staticmethod
    def hold_i(h):
        return _rizin.RzConfig_hold_i(h)

    @staticmethod
    def hold_s(h):
        return _rizin.RzConfig_hold_s(h)

    @staticmethod
    def hold_restore(h):
        return _rizin.RzConfig_hold_restore(h)

    @staticmethod
    def new(user):
        return _rizin.RzConfig_new(user)

    @staticmethod
    def node_desc(node, desc):
        return _rizin.RzConfig_node_desc(node, desc)

    @staticmethod
    def node_new(name, value):
        return _rizin.RzConfig_node_new(name, value)

    @staticmethod
    def node_clone(n):
        return _rizin.RzConfig_node_clone(n)

    @staticmethod
    def node_free(n):
        return _rizin.RzConfig_node_free(n)

    @staticmethod
    def node_value_format_i(buf, buf_size, i, node):
        return _rizin.RzConfig_node_value_format_i(buf, buf_size, i, node)

    def hold_new(self):
        return _rizin.RzConfig_hold_new(self)

    def clone(self):
        return _rizin.RzConfig_clone(self)

    def free(self):
        return _rizin.RzConfig_free(self)

    def lock(self, l):
        return _rizin.RzConfig_lock(self, l)

    def bump(self, key):
        return _rizin.RzConfig_bump(self, key)

    def set_i(self, name, i):
        return _rizin.RzConfig_set_i(self, name, i)

    def set_b(self, name, value):
        return _rizin.RzConfig_set_b(self, name, value)

    def set_cb(self, name, value, callback):
        return _rizin.RzConfig_set_cb(self, name, value, callback)

    def set_i_cb(self, name, ivalue, callback):
        return _rizin.RzConfig_set_i_cb(self, name, ivalue, callback)

    def set(self, name, value):
        return _rizin.RzConfig_set(self, name, value)

    def add_node(self, node):
        return _rizin.RzConfig_add_node(self, node)

    def rm(self, name):
        return _rizin.RzConfig_rm(self, name)

    def get_i(self, name):
        return _rizin.RzConfig_get_i(self, name)

    def get_b(self, name):
        return _rizin.RzConfig_get_b(self, name)

    def get(self, name):
        return _rizin.RzConfig_get(self, name)

    def desc(self, name, desc_arg):
        return _rizin.RzConfig_desc(self, name, desc_arg)

    def node_get(self, name):
        return _rizin.RzConfig_node_get(self, name)

    def toggle(self, name):
        return _rizin.RzConfig_toggle(self, name)

    def readonly(self, key):
        return _rizin.RzConfig_readonly(self, key)

    def eval(self, str):
        return _rizin.RzConfig_eval(self, str)

    def set_setter(self, key, cb):
        return _rizin.RzConfig_set_setter(self, key, cb)

    def set_getter(self, key, cb):
        return _rizin.RzConfig_set_getter(self, key, cb)

    def serialize(self, db):
        return _rizin.RzConfig_serialize(self, db)

    def unserialize(self, db, err):
        return _rizin.RzConfig_unserialize(self, db, err)

    def __init__(self):
        _rizin.RzConfig_swiginit(self, _rizin.new_RzConfig())
    __swig_destroy__ = _rizin.delete_RzConfig

# Register RzConfig in _rizin:
_rizin.RzConfig_swigregister(RzConfig)
class RzCons(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    context = property(_rizin.RzCons_context_get, _rizin.RzCons_context_set)
    _input = property(_rizin.RzCons__input_get, _rizin.RzCons__input_set)
    is_html = property(_rizin.RzCons_is_html_get, _rizin.RzCons_is_html_set)
    was_html = property(_rizin.RzCons_was_html_get, _rizin.RzCons_was_html_set)
    lines = property(_rizin.RzCons_lines_get, _rizin.RzCons_lines_set)
    rows = property(_rizin.RzCons_rows_get, _rizin.RzCons_rows_set)
    _echo = property(_rizin.RzCons__echo_get, _rizin.RzCons__echo_set)
    columns = property(_rizin.RzCons_columns_get, _rizin.RzCons_columns_set)
    force_rows = property(_rizin.RzCons_force_rows_get, _rizin.RzCons_force_rows_set)
    force_columns = property(_rizin.RzCons_force_columns_get, _rizin.RzCons_force_columns_set)
    fix_rows = property(_rizin.RzCons_fix_rows_get, _rizin.RzCons_fix_rows_set)
    fix_columns = property(_rizin.RzCons_fix_columns_get, _rizin.RzCons_fix_columns_set)
    break_lines = property(_rizin.RzCons_break_lines_get, _rizin.RzCons_break_lines_set)
    show_autocomplete_widget = property(_rizin.RzCons_show_autocomplete_widget_get, _rizin.RzCons_show_autocomplete_widget_set)
    fdin = property(_rizin.RzCons_fdin_get, _rizin.RzCons_fdin_set)
    fdout = property(_rizin.RzCons_fdout_get, _rizin.RzCons_fdout_set)
    teefile = property(_rizin.RzCons_teefile_get, _rizin.RzCons_teefile_set)
    user_fgets = property(_rizin.RzCons_user_fgets_get, _rizin.RzCons_user_fgets_set)
    user_fgets_user = property(_rizin.RzCons_user_fgets_user_get, _rizin.RzCons_user_fgets_user_set)
    event_resize = property(_rizin.RzCons_event_resize_get, _rizin.RzCons_event_resize_set)
    event_data = property(_rizin.RzCons_event_data_get, _rizin.RzCons_event_data_set)
    mouse_event = property(_rizin.RzCons_mouse_event_get, _rizin.RzCons_mouse_event_set)
    cb_editor = property(_rizin.RzCons_cb_editor_get, _rizin.RzCons_cb_editor_set)
    cb_break = property(_rizin.RzCons_cb_break_get, _rizin.RzCons_cb_break_set)
    cb_sleep_begin = property(_rizin.RzCons_cb_sleep_begin_get, _rizin.RzCons_cb_sleep_begin_set)
    cb_sleep_end = property(_rizin.RzCons_cb_sleep_end_get, _rizin.RzCons_cb_sleep_end_set)
    cb_click = property(_rizin.RzCons_cb_click_get, _rizin.RzCons_cb_click_set)
    cb_task_oneshot = property(_rizin.RzCons_cb_task_oneshot_get, _rizin.RzCons_cb_task_oneshot_set)
    cb_fkey = property(_rizin.RzCons_cb_fkey_get, _rizin.RzCons_cb_fkey_set)
    user = property(_rizin.RzCons_user_get, _rizin.RzCons_user_set)
    num = property(_rizin.RzCons_num_get, _rizin.RzCons_num_set)
    pager = property(_rizin.RzCons_pager_get, _rizin.RzCons_pager_set)
    blankline = property(_rizin.RzCons_blankline_get, _rizin.RzCons_blankline_set)
    _highlight = property(_rizin.RzCons__highlight_get, _rizin.RzCons__highlight_set)
    _enable_highlight = property(_rizin.RzCons__enable_highlight_get, _rizin.RzCons__enable_highlight_set)
    null = property(_rizin.RzCons_null_get, _rizin.RzCons_null_set)
    mouse = property(_rizin.RzCons_mouse_get, _rizin.RzCons_mouse_set)
    is_wine = property(_rizin.RzCons_is_wine_get, _rizin.RzCons_is_wine_set)
    line = property(_rizin.RzCons_line_get, _rizin.RzCons_line_set)
    vline = property(_rizin.RzCons_vline_get, _rizin.RzCons_vline_set)
    refcnt = property(_rizin.RzCons_refcnt_get, _rizin.RzCons_refcnt_set)
    _newline = property(_rizin.RzCons__newline_get, _rizin.RzCons__newline_set)
    vtmode = property(_rizin.RzCons_vtmode_get, _rizin.RzCons_vtmode_set)
    _flush = property(_rizin.RzCons__flush_get, _rizin.RzCons__flush_set)
    use_utf8 = property(_rizin.RzCons_use_utf8_get, _rizin.RzCons_use_utf8_set)
    use_utf8_curvy = property(_rizin.RzCons_use_utf8_curvy_get, _rizin.RzCons_use_utf8_curvy_set)
    dotted_lines = property(_rizin.RzCons_dotted_lines_get, _rizin.RzCons_dotted_lines_set)
    linesleep = property(_rizin.RzCons_linesleep_get, _rizin.RzCons_linesleep_set)
    pagesize = property(_rizin.RzCons_pagesize_get, _rizin.RzCons_pagesize_set)
    break_word = property(_rizin.RzCons_break_word_get, _rizin.RzCons_break_word_set)
    break_word_len = property(_rizin.RzCons_break_word_len_get, _rizin.RzCons_break_word_len_set)
    timeout = property(_rizin.RzCons_timeout_get, _rizin.RzCons_timeout_set)
    grep_color = property(_rizin.RzCons_grep_color_get, _rizin.RzCons_grep_color_set)
    grep_highlight = property(_rizin.RzCons_grep_highlight_get, _rizin.RzCons_grep_highlight_set)
    grep_icase = property(_rizin.RzCons_grep_icase_get, _rizin.RzCons_grep_icase_set)
    _filter = property(_rizin.RzCons__filter_get, _rizin.RzCons__filter_set)
    rgbstr = property(_rizin.RzCons_rgbstr_get, _rizin.RzCons_rgbstr_set)
    click_set = property(_rizin.RzCons_click_set_get, _rizin.RzCons_click_set_set)
    click_x = property(_rizin.RzCons_click_x_get, _rizin.RzCons_click_x_set)
    click_y = property(_rizin.RzCons_click_y_get, _rizin.RzCons_click_y_set)
    show_vals = property(_rizin.RzCons_show_vals_get, _rizin.RzCons_show_vals_set)

    @staticmethod
    def canvas_new(w, h):
        return _rizin.RzCons_canvas_new(w, h)

    @staticmethod
    def canvas_free(c):
        return _rizin.RzCons_canvas_free(c)

    @staticmethod
    def canvas_clear(c):
        return _rizin.RzCons_canvas_clear(c)

    @staticmethod
    def canvas_print(c):
        return _rizin.RzCons_canvas_print(c)

    @staticmethod
    def canvas_print_region(c):
        return _rizin.RzCons_canvas_print_region(c)

    @staticmethod
    def canvas_to_string(c):
        return _rizin.RzCons_canvas_to_string(c)

    @staticmethod
    def canvas_write(c, _s):
        return _rizin.RzCons_canvas_write(c, _s)

    @staticmethod
    def canvas_gotoxy(c, x, y):
        return _rizin.RzCons_canvas_gotoxy(c, x, y)

    @staticmethod
    def canvas_box(c, x, y, w, h, color):
        return _rizin.RzCons_canvas_box(c, x, y, w, h, color)

    @staticmethod
    def canvas_line(c, x, y, x2, y2, style):
        return _rizin.RzCons_canvas_line(c, x, y, x2, y2, style)

    @staticmethod
    def canvas_line_diagonal(c, x, y, x2, y2, style):
        return _rizin.RzCons_canvas_line_diagonal(c, x, y, x2, y2, style)

    @staticmethod
    def canvas_line_square(c, x, y, x2, y2, style):
        return _rizin.RzCons_canvas_line_square(c, x, y, x2, y2, style)

    @staticmethod
    def canvas_resize(c, w, h):
        return _rizin.RzCons_canvas_resize(c, w, h)

    @staticmethod
    def canvas_fill(c, x, y, w, h, ch):
        return _rizin.RzCons_canvas_fill(c, x, y, w, h, ch)

    @staticmethod
    def canvas_line_square_defined(c, x, y, x2, y2, style, bendpoint, isvert):
        return _rizin.RzCons_canvas_line_square_defined(c, x, y, x2, y2, style, bendpoint, isvert)

    @staticmethod
    def canvas_line_back_edge(c, x, y, x2, y2, style, ybendpoint1, xbendpoint, ybendpoint2, isvert):
        return _rizin.RzCons_canvas_line_back_edge(c, x, y, x2, y2, style, ybendpoint1, xbendpoint, ybendpoint2, isvert)

    @staticmethod
    def new():
        return _rizin.RzCons_new()

    @staticmethod
    def singleton():
        return _rizin.RzCons_singleton()

    @staticmethod
    def free():
        return _rizin.RzCons_free()

    @staticmethod
    def lastline(size):
        return _rizin.RzCons_lastline(size)

    @staticmethod
    def lastline_utf8_ansi_len(len):
        return _rizin.RzCons_lastline_utf8_ansi_len(len)

    @staticmethod
    def set_click(x, y, event):
        return _rizin.RzCons_set_click(x, y, event)

    @staticmethod
    def get_click(x, y):
        return _rizin.RzCons_get_click(x, y)

    @staticmethod
    def is_breaked():
        return _rizin.RzCons_is_breaked()

    @staticmethod
    def is_interactive():
        return _rizin.RzCons_is_interactive()

    @staticmethod
    def default_context_is_interactive():
        return _rizin.RzCons_default_context_is_interactive()

    @staticmethod
    def sleep_begin():
        return _rizin.RzCons_sleep_begin()

    @staticmethod
    def sleep_end(user):
        return _rizin.RzCons_sleep_end(user)

    @staticmethod
    def break_push(cb, user):
        return _rizin.RzCons_break_push(cb, user)

    @staticmethod
    def break_pop():
        return _rizin.RzCons_break_pop()

    @staticmethod
    def break_clear():
        return _rizin.RzCons_break_clear()

    @staticmethod
    def breakword(s):
        return _rizin.RzCons_breakword(s)

    @staticmethod
    def break_end():
        return _rizin.RzCons_break_end()

    @staticmethod
    def break_timeout(timeout):
        return _rizin.RzCons_break_timeout(timeout)

    @staticmethod
    def pipe_open(file, old_fd, append):
        return _rizin.RzCons_pipe_open(file, old_fd, append)

    @staticmethod
    def pipe_close(cpipe):
        return _rizin.RzCons_pipe_close(cpipe)

    @staticmethod
    def push():
        return _rizin.RzCons_push()

    @staticmethod
    def pop():
        return _rizin.RzCons_pop()

    @staticmethod
    def context_new(parent):
        return _rizin.RzCons_context_new(parent)

    @staticmethod
    def context_free(context):
        return _rizin.RzCons_context_free(context)

    @staticmethod
    def context_load(context):
        return _rizin.RzCons_context_load(context)

    @staticmethod
    def context_reset():
        return _rizin.RzCons_context_reset()

    @staticmethod
    def context_is_main():
        return _rizin.RzCons_context_is_main()

    @staticmethod
    def context_break(context):
        return _rizin.RzCons_context_break(context)

    @staticmethod
    def context_break_push(context, cb, user, sig):
        return _rizin.RzCons_context_break_push(context, cb, user, sig)

    @staticmethod
    def context_break_pop(context, sig):
        return _rizin.RzCons_context_break_pop(context, sig)

    @staticmethod
    def reset():
        return _rizin.RzCons_reset()

    @staticmethod
    def reset_colors():
        return _rizin.RzCons_reset_colors()

    @staticmethod
    def goto_origin_reset():
        return _rizin.RzCons_goto_origin_reset()

    @staticmethod
    def echo(msg):
        return _rizin.RzCons_echo(msg)

    @staticmethod
    def zero():
        return _rizin.RzCons_zero()

    @staticmethod
    def highlight(word):
        return _rizin.RzCons_highlight(word)

    @staticmethod
    def clear():
        return _rizin.RzCons_clear()

    @staticmethod
    def clear_buffer():
        return _rizin.RzCons_clear_buffer()

    @staticmethod
    def clear00():
        return _rizin.RzCons_clear00()

    @staticmethod
    def clear_line(stream):
        return _rizin.RzCons_clear_line(stream)

    @staticmethod
    def fill_line():
        return _rizin.RzCons_fill_line()

    @staticmethod
    def gotoxy(x, y):
        return _rizin.RzCons_gotoxy(x, y)

    @staticmethod
    def get_cur_line():
        return _rizin.RzCons_get_cur_line()

    @staticmethod
    def show_cursor(cursor):
        return _rizin.RzCons_show_cursor(cursor)

    @staticmethod
    def swap_ground(col):
        return _rizin.RzCons_swap_ground(col)

    @staticmethod
    def drop(n):
        return _rizin.RzCons_drop(n)

    @staticmethod
    def chop():
        return _rizin.RzCons_chop()

    @staticmethod
    def set_raw(b):
        return _rizin.RzCons_set_raw(b)

    @staticmethod
    def set_interactive(b):
        return _rizin.RzCons_set_interactive(b)

    @staticmethod
    def set_last_interactive():
        return _rizin.RzCons_set_last_interactive()

    @staticmethod
    def set_utf8(b):
        return _rizin.RzCons_set_utf8(b)

    @staticmethod
    def grep(grep_arg):
        return _rizin.RzCons_grep(grep_arg)

    @staticmethod
    def strcat(str):
        return _rizin.RzCons_strcat(str)

    @staticmethod
    def strcat_at(str, x, y, w, h):
        return _rizin.RzCons_strcat_at(str, x, y, w, h)

    @staticmethod
    def println(str):
        return _rizin.RzCons_println(str)

    @staticmethod
    def strcat_justify(str, j, c):
        return _rizin.RzCons_strcat_justify(str, j, c)

    @staticmethod
    def memcat(str, len):
        return _rizin.RzCons_memcat(str, len)

    @staticmethod
    def newline():
        return _rizin.RzCons_newline()

    @staticmethod
    def filter():
        return _rizin.RzCons_filter()

    @staticmethod
    def flush():
        return _rizin.RzCons_flush()

    @staticmethod
    def set_flush(flush):
        return _rizin.RzCons_set_flush(flush)

    @staticmethod
    def last():
        return _rizin.RzCons_last()

    @staticmethod
    def less_str(str, exitkeys):
        return _rizin.RzCons_less_str(str, exitkeys)

    @staticmethod
    def less():
        return _rizin.RzCons_less()

    @staticmethod
    def memset(ch, len):
        return _rizin.RzCons_memset(ch, len)

    @staticmethod
    def visual_flush():
        return _rizin.RzCons_visual_flush()

    @staticmethod
    def visual_write(buffer):
        return _rizin.RzCons_visual_write(buffer)

    @staticmethod
    def is_utf8():
        return _rizin.RzCons_is_utf8()

    @staticmethod
    def cmd_help(help, use_color):
        return _rizin.RzCons_cmd_help(help, use_color)

    @staticmethod
    def controlz(ch):
        return _rizin.RzCons_controlz(ch)

    @staticmethod
    def readchar():
        return _rizin.RzCons_readchar()

    @staticmethod
    def readbuffer_readchar(ch):
        return _rizin.RzCons_readbuffer_readchar(ch)

    @staticmethod
    def readpush(str, len):
        return _rizin.RzCons_readpush(str, len)

    @staticmethod
    def readflush():
        return _rizin.RzCons_readflush()

    @staticmethod
    def switchbuf(active):
        return _rizin.RzCons_switchbuf(active)

    @staticmethod
    def readchar_timeout(usec):
        return _rizin.RzCons_readchar_timeout(usec)

    @staticmethod
    def any_key(msg):
        return _rizin.RzCons_any_key(msg)

    @staticmethod
    def eof():
        return _rizin.RzCons_eof()

    @staticmethod
    def pal_set(key, val):
        return _rizin.RzCons_pal_set(key, val)

    @staticmethod
    def pal_update_event():
        return _rizin.RzCons_pal_update_event()

    @staticmethod
    def pal_free(ctx):
        return _rizin.RzCons_pal_free(ctx)

    @staticmethod
    def pal_init(ctx):
        return _rizin.RzCons_pal_init(ctx)

    @staticmethod
    def pal_copy(dst, src):
        return _rizin.RzCons_pal_copy(dst, src)

    @staticmethod
    def pal_parse(str, outcol):
        return _rizin.RzCons_pal_parse(str, outcol)

    @staticmethod
    def pal_random():
        return _rizin.RzCons_pal_random()

    @staticmethod
    def pal_get(key):
        return _rizin.RzCons_pal_get(key)

    @staticmethod
    def pal_get_i(index):
        return _rizin.RzCons_pal_get_i(index)

    @staticmethod
    def pal_get_name(index):
        return _rizin.RzCons_pal_get_name(index)

    @staticmethod
    def pal_len():
        return _rizin.RzCons_pal_len()

    @staticmethod
    def rgb_parse(p, r, g, b, a):
        return _rizin.RzCons_rgb_parse(p, r, g, b, a)

    @staticmethod
    def rgb_tostring(r, g, b):
        return _rizin.RzCons_rgb_tostring(r, g, b)

    @staticmethod
    def pal_list(rad, arg):
        return _rizin.RzCons_pal_list(rad, arg)

    @staticmethod
    def pal_show():
        return _rizin.RzCons_pal_show()

    @staticmethod
    def get_size(rows):
        return _rizin.RzCons_get_size(rows)

    @staticmethod
    def isatty():
        return _rizin.RzCons_isatty()

    @staticmethod
    def get_cursor(rows):
        return _rizin.RzCons_get_cursor(rows)

    @staticmethod
    def arrow_to_hjkl(ch):
        return _rizin.RzCons_arrow_to_hjkl(ch)

    @staticmethod
    def html_filter(ptr, newlen):
        return _rizin.RzCons_html_filter(ptr, newlen)

    @staticmethod
    def rainbow_get(idx, last, bg):
        return _rizin.RzCons_rainbow_get(idx, last, bg)

    @staticmethod
    def rainbow_free(ctx):
        return _rizin.RzCons_rainbow_free(ctx)

    @staticmethod
    def rainbow_new(ctx, sz):
        return _rizin.RzCons_rainbow_new(ctx, sz)

    @staticmethod
    def fgets(buf, len, argc, argv):
        return _rizin.RzCons_fgets(buf, len, argc, argv)

    @staticmethod
    def hud(list, prompt):
        return _rizin.RzCons_hud(list, prompt)

    @staticmethod
    def hud_path(path, dir):
        return _rizin.RzCons_hud_path(path, dir)

    @staticmethod
    def hud_string(s):
        return _rizin.RzCons_hud_string(s)

    @staticmethod
    def hud_file(f):
        return _rizin.RzCons_hud_file(f)

    @staticmethod
    def get_buffer():
        return _rizin.RzCons_get_buffer()

    @staticmethod
    def get_buffer_dup():
        return _rizin.RzCons_get_buffer_dup()

    @staticmethod
    def get_buffer_len():
        return _rizin.RzCons_get_buffer_len()

    @staticmethod
    def grep_help():
        return _rizin.RzCons_grep_help()

    @staticmethod
    def grep_parsecmd(cmd, quotestr):
        return _rizin.RzCons_grep_parsecmd(cmd, quotestr)

    @staticmethod
    def grep_strip(cmd, quotestr):
        return _rizin.RzCons_grep_strip(cmd, quotestr)

    @staticmethod
    def grep_process(grep):
        return _rizin.RzCons_grep_process(grep)

    @staticmethod
    def grep_line(buf, len):
        return _rizin.RzCons_grep_line(buf, len)

    @staticmethod
    def grepbuf():
        return _rizin.RzCons_grepbuf()

    @staticmethod
    def rgb_init():
        return _rizin.RzCons_rgb_init()

    @staticmethod
    def rgb_str_mode(mode, outstr, sz, rcolor):
        return _rizin.RzCons_rgb_str_mode(mode, outstr, sz, rcolor)

    @staticmethod
    def rgb_str(outstr, sz, rcolor):
        return _rizin.RzCons_rgb_str(outstr, sz, rcolor)

    @staticmethod
    def rgb_str_off(outstr, sz, off):
        return _rizin.RzCons_rgb_str_off(outstr, sz, off)

    @staticmethod
    def color(fg, r, g, b):
        return _rizin.RzCons_color(fg, r, g, b)

    @staticmethod
    def color_random(alpha):
        return _rizin.RzCons_color_random(alpha)

    @staticmethod
    def invert(set, color):
        return _rizin.RzCons_invert(set, color)

    @staticmethod
    def input(msg):
        return _rizin.RzCons_input(msg)

    @staticmethod
    def set_cup(enable):
        return _rizin.RzCons_set_cup(enable)

    @staticmethod
    def column(c):
        return _rizin.RzCons_column(c)

    @staticmethod
    def get_column():
        return _rizin.RzCons_get_column()

    @staticmethod
    def message(msg):
        return _rizin.RzCons_message(msg)

    @staticmethod
    def set_title(str):
        return _rizin.RzCons_set_title(str)

    @staticmethod
    def enable_mouse(enable):
        return _rizin.RzCons_enable_mouse(enable)

    @staticmethod
    def enable_highlight(enable):
        return _rizin.RzCons_enable_highlight(enable)

    @staticmethod
    def bind(bind_arg):
        return _rizin.RzCons_bind(bind_arg)

    @staticmethod
    def get_rune(ch):
        return _rizin.RzCons_get_rune(ch)

    @staticmethod
    def prompt(str, txt):
        return _rizin.RzCons_prompt(str, txt)

    def __init__(self):
        _rizin.RzCons_swiginit(self, _rizin.new_RzCons())
    __swig_destroy__ = _rizin.delete_RzCons

# Register RzCons in _rizin:
_rizin.RzCons_swigregister(RzCons)
class RzLine(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    completion = property(_rizin.RzLine_completion_get, _rizin.RzLine_completion_set)
    ns_completion = property(_rizin.RzLine_ns_completion_get, _rizin.RzLine_ns_completion_set)
    buffer = property(_rizin.RzLine_buffer_get, _rizin.RzLine_buffer_set)
    history = property(_rizin.RzLine_history_get, _rizin.RzLine_history_set)
    undo_vec = property(_rizin.RzLine_undo_vec_get, _rizin.RzLine_undo_vec_set)
    sel_widget = property(_rizin.RzLine_sel_widget_get, _rizin.RzLine_sel_widget_set)
    cb_history_up = property(_rizin.RzLine_cb_history_up_get, _rizin.RzLine_cb_history_up_set)
    cb_history_down = property(_rizin.RzLine_cb_history_down_get, _rizin.RzLine_cb_history_down_set)
    cb_editor = property(_rizin.RzLine_cb_editor_get, _rizin.RzLine_cb_editor_set)
    cb_fkey = property(_rizin.RzLine_cb_fkey_get, _rizin.RzLine_cb_fkey_set)
    gcomp = property(_rizin.RzLine_gcomp_get, _rizin.RzLine_gcomp_set)
    gcomp_idx = property(_rizin.RzLine_gcomp_idx_get, _rizin.RzLine_gcomp_idx_set)
    echo = property(_rizin.RzLine_echo_get, _rizin.RzLine_echo_set)
    has_echo = property(_rizin.RzLine_has_echo_get, _rizin.RzLine_has_echo_set)
    prompt = property(_rizin.RzLine_prompt_get, _rizin.RzLine_prompt_set)
    kill_ring = property(_rizin.RzLine_kill_ring_get, _rizin.RzLine_kill_ring_set)
    kill_ring_ptr = property(_rizin.RzLine_kill_ring_ptr_get, _rizin.RzLine_kill_ring_ptr_set)
    yank_flag = property(_rizin.RzLine_yank_flag_get, _rizin.RzLine_yank_flag_set)
    undo_cursor = property(_rizin.RzLine_undo_cursor_get, _rizin.RzLine_undo_cursor_set)
    undo_continue = property(_rizin.RzLine_undo_continue_get, _rizin.RzLine_undo_continue_set)
    clipboard = property(_rizin.RzLine_clipboard_get, _rizin.RzLine_clipboard_set)
    disable = property(_rizin.RzLine_disable_get, _rizin.RzLine_disable_set)
    user = property(_rizin.RzLine_user_get, _rizin.RzLine_user_set)
    hist_up = property(_rizin.RzLine_hist_up_get, _rizin.RzLine_hist_up_set)
    hist_down = property(_rizin.RzLine_hist_down_get, _rizin.RzLine_hist_down_set)
    contents = property(_rizin.RzLine_contents_get, _rizin.RzLine_contents_set)
    zerosep = property(_rizin.RzLine_zerosep_get, _rizin.RzLine_zerosep_set)
    enable_vi_mode = property(_rizin.RzLine_enable_vi_mode_get, _rizin.RzLine_enable_vi_mode_set)
    vi_mode = property(_rizin.RzLine_vi_mode_get, _rizin.RzLine_vi_mode_set)
    prompt_mode = property(_rizin.RzLine_prompt_mode_get, _rizin.RzLine_prompt_mode_set)
    prompt_type = property(_rizin.RzLine_prompt_type_get, _rizin.RzLine_prompt_type_set)
    offset_hist_index = property(_rizin.RzLine_offset_hist_index_get, _rizin.RzLine_offset_hist_index_set)
    file_hist_index = property(_rizin.RzLine_file_hist_index_get, _rizin.RzLine_file_hist_index_set)
    hud = property(_rizin.RzLine_hud_get, _rizin.RzLine_hud_set)
    sdbshell_hist = property(_rizin.RzLine_sdbshell_hist_get, _rizin.RzLine_sdbshell_hist_set)
    sdbshell_hist_iter = property(_rizin.RzLine_sdbshell_hist_iter_get, _rizin.RzLine_sdbshell_hist_iter_set)
    vtmode = property(_rizin.RzLine_vtmode_get, _rizin.RzLine_vtmode_set)

    def __init__(self):
        _rizin.RzLine_swiginit(self, _rizin.new_RzLine())
    __swig_destroy__ = _rizin.delete_RzLine

# Register RzLine in _rizin:
_rizin.RzLine_swigregister(RzLine)
class RzCore(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    rasm = property(_rizin.RzCore_rasm_get, _rizin.RzCore_rasm_set)
    ptr_alignment_I = property(_rizin.RzCore_ptr_alignment_I_get, _rizin.RzCore_ptr_alignment_I_set)
    analysis = property(_rizin.RzCore_analysis_get, _rizin.RzCore_analysis_set)
    ptr_alignment_II = property(_rizin.RzCore_ptr_alignment_II_get, _rizin.RzCore_ptr_alignment_II_set)
    bin = property(_rizin.RzCore_bin_get, _rizin.RzCore_bin_set)
    ptr_alignment_III = property(_rizin.RzCore_ptr_alignment_III_get, _rizin.RzCore_ptr_alignment_III_set)
    io = property(_rizin.RzCore_io_get, _rizin.RzCore_io_set)
    plugins = property(_rizin.RzCore_plugins_get, _rizin.RzCore_plugins_set)
    config = property(_rizin.RzCore_config_get, _rizin.RzCore_config_set)
    plugin_configs = property(_rizin.RzCore_plugin_configs_get, _rizin.RzCore_plugin_configs_set)
    offset = property(_rizin.RzCore_offset_get, _rizin.RzCore_offset_set)
    prompt_offset = property(_rizin.RzCore_prompt_offset_get, _rizin.RzCore_prompt_offset_set)
    blocksize = property(_rizin.RzCore_blocksize_get, _rizin.RzCore_blocksize_set)
    blocksize_max = property(_rizin.RzCore_blocksize_max_get, _rizin.RzCore_blocksize_max_set)
    block = property(_rizin.RzCore_block_get, _rizin.RzCore_block_set)
    yank_buf = property(_rizin.RzCore_yank_buf_get, _rizin.RzCore_yank_buf_set)
    yank_addr = property(_rizin.RzCore_yank_addr_get, _rizin.RzCore_yank_addr_set)
    tmpseek = property(_rizin.RzCore_tmpseek_get, _rizin.RzCore_tmpseek_set)
    vmode = property(_rizin.RzCore_vmode_get, _rizin.RzCore_vmode_set)
    interrupted = property(_rizin.RzCore_interrupted_get, _rizin.RzCore_interrupted_set)
    cons = property(_rizin.RzCore_cons_get, _rizin.RzCore_cons_set)
    file = property(_rizin.RzCore_file_get, _rizin.RzCore_file_set)
    files = property(_rizin.RzCore_files_get, _rizin.RzCore_files_set)
    num = property(_rizin.RzCore_num_get, _rizin.RzCore_num_set)
    rc = property(_rizin.RzCore_rc_get, _rizin.RzCore_rc_set)
    lib = property(_rizin.RzCore_lib_get, _rizin.RzCore_lib_set)
    rcmd = property(_rizin.RzCore_rcmd_get, _rizin.RzCore_rcmd_set)
    root_cmd_descriptor = property(_rizin.RzCore_root_cmd_descriptor_get, _rizin.RzCore_root_cmd_descriptor_set)
    cmd_descriptors = property(_rizin.RzCore_cmd_descriptors_get, _rizin.RzCore_cmd_descriptors_set)
    times = property(_rizin.RzCore_times_get, _rizin.RzCore_times_set)
    parser = property(_rizin.RzCore_parser_get, _rizin.RzCore_parser_set)
    _print = property(_rizin.RzCore__print_get, _rizin.RzCore__print_set)
    lang = property(_rizin.RzCore_lang_get, _rizin.RzCore_lang_set)
    dbg = property(_rizin.RzCore_dbg_get, _rizin.RzCore_dbg_set)
    flags = property(_rizin.RzCore_flags_get, _rizin.RzCore_flags_set)
    lastsearch = property(_rizin.RzCore_lastsearch_get, _rizin.RzCore_lastsearch_set)
    search = property(_rizin.RzCore_search_get, _rizin.RzCore_search_set)
    egg = property(_rizin.RzCore_egg_get, _rizin.RzCore_egg_set)
    crypto = property(_rizin.RzCore_crypto_get, _rizin.RzCore_crypto_set)
    graph = property(_rizin.RzCore_graph_get, _rizin.RzCore_graph_set)
    cmdqueue = property(_rizin.RzCore_cmdqueue_get, _rizin.RzCore_cmdqueue_set)
    lastcmd = property(_rizin.RzCore_lastcmd_get, _rizin.RzCore_lastcmd_set)
    is_lastcmd = property(_rizin.RzCore_is_lastcmd_get, _rizin.RzCore_is_lastcmd_set)
    is_pipe = property(_rizin.RzCore_is_pipe_get, _rizin.RzCore_is_pipe_set)
    cmdlog = property(_rizin.RzCore_cmdlog_get, _rizin.RzCore_cmdlog_set)
    cmdrepeat = property(_rizin.RzCore_cmdrepeat_get, _rizin.RzCore_cmdrepeat_set)
    cmdtimes = property(_rizin.RzCore_cmdtimes_get, _rizin.RzCore_cmdtimes_set)
    cmd_in_backticks = property(_rizin.RzCore_cmd_in_backticks_get, _rizin.RzCore_cmd_in_backticks_set)
    rtr_n = property(_rizin.RzCore_rtr_n_get, _rizin.RzCore_rtr_n_set)
    rtr_host = property(_rizin.RzCore_rtr_host_get, _rizin.RzCore_rtr_host_set)
    asmqjmps = property(_rizin.RzCore_asmqjmps_get, _rizin.RzCore_asmqjmps_set)
    asmqjmps_count = property(_rizin.RzCore_asmqjmps_count_get, _rizin.RzCore_asmqjmps_count_set)
    asmqjmps_size = property(_rizin.RzCore_asmqjmps_size_get, _rizin.RzCore_asmqjmps_size_set)
    is_asmqjmps_letter = property(_rizin.RzCore_is_asmqjmps_letter_get, _rizin.RzCore_is_asmqjmps_letter_set)
    keep_asmqjmps = property(_rizin.RzCore_keep_asmqjmps_get, _rizin.RzCore_keep_asmqjmps_set)
    _visual = property(_rizin.RzCore__visual_get, _rizin.RzCore__visual_set)
    http_up = property(_rizin.RzCore_http_up_get, _rizin.RzCore_http_up_set)
    gdbserver_up = property(_rizin.RzCore_gdbserver_up_get, _rizin.RzCore_gdbserver_up_set)
    stkcmd = property(_rizin.RzCore_stkcmd_get, _rizin.RzCore_stkcmd_set)
    in_search = property(_rizin.RzCore_in_search_get, _rizin.RzCore_in_search_set)
    watchers = property(_rizin.RzCore_watchers_get, _rizin.RzCore_watchers_set)
    scriptstack = property(_rizin.RzCore_scriptstack_get, _rizin.RzCore_scriptstack_set)
    tasks = property(_rizin.RzCore_tasks_get, _rizin.RzCore_tasks_set)
    max_cmd_depth = property(_rizin.RzCore_max_cmd_depth_get, _rizin.RzCore_max_cmd_depth_set)
    switch_file_view = property(_rizin.RzCore_switch_file_view_get, _rizin.RzCore_switch_file_view_set)
    sdb = property(_rizin.RzCore_sdb_get, _rizin.RzCore_sdb_set)
    incomment = property(_rizin.RzCore_incomment_get, _rizin.RzCore_incomment_set)
    curtab = property(_rizin.RzCore_curtab_get, _rizin.RzCore_curtab_set)
    seltab = property(_rizin.RzCore_seltab_get, _rizin.RzCore_seltab_set)
    cmdremote = property(_rizin.RzCore_cmdremote_get, _rizin.RzCore_cmdremote_set)
    cmdfilter = property(_rizin.RzCore_cmdfilter_get, _rizin.RzCore_cmdfilter_set)
    curtheme = property(_rizin.RzCore_curtheme_get, _rizin.RzCore_curtheme_set)
    break_loop = property(_rizin.RzCore_break_loop_get, _rizin.RzCore_break_loop_set)
    binat = property(_rizin.RzCore_binat_get, _rizin.RzCore_binat_set)
    fixedbits = property(_rizin.RzCore_fixedbits_get, _rizin.RzCore_fixedbits_set)
    fixedarch = property(_rizin.RzCore_fixedarch_get, _rizin.RzCore_fixedarch_set)
    fixedblock = property(_rizin.RzCore_fixedblock_get, _rizin.RzCore_fixedblock_set)
    table_query = property(_rizin.RzCore_table_query_get, _rizin.RzCore_table_query_set)
    c2 = property(_rizin.RzCore_c2_get, _rizin.RzCore_c2_set)
    _autocomplete = property(_rizin.RzCore__autocomplete_get, _rizin.RzCore__autocomplete_set)
    autocomplete_type = property(_rizin.RzCore_autocomplete_type_get, _rizin.RzCore_autocomplete_type_set)
    maxtab = property(_rizin.RzCore_maxtab_get, _rizin.RzCore_maxtab_set)
    ev = property(_rizin.RzCore_ev_get, _rizin.RzCore_ev_set)
    gadgets = property(_rizin.RzCore_gadgets_get, _rizin.RzCore_gadgets_set)
    scr_gadgets = property(_rizin.RzCore_scr_gadgets_get, _rizin.RzCore_scr_gadgets_set)
    log_events = property(_rizin.RzCore_log_events_get, _rizin.RzCore_log_events_set)
    ropchain = property(_rizin.RzCore_ropchain_get, _rizin.RzCore_ropchain_set)
    seek_history = property(_rizin.RzCore_seek_history_get, _rizin.RzCore_seek_history_set)
    hash = property(_rizin.RzCore_hash_get, _rizin.RzCore_hash_set)
    warnings_after = property(_rizin.RzCore_warnings_after_get, _rizin.RzCore_warnings_after_set)
    sys_path = property(_rizin.RzCore_sys_path_get, _rizin.RzCore_sys_path_set)
    marks_init = property(_rizin.RzCore_marks_init_get, _rizin.RzCore_marks_init_set)
    marks = property(_rizin.RzCore_marks_get, _rizin.RzCore_marks_set)
    rz_main_rizin = property(_rizin.RzCore_rz_main_rizin_get, _rizin.RzCore_rz_main_rizin_set)
    rz_main_rz_find = property(_rizin.RzCore_rz_main_rz_find_get, _rizin.RzCore_rz_main_rz_find_set)
    rz_main_rz_diff = property(_rizin.RzCore_rz_main_rz_diff_get, _rizin.RzCore_rz_main_rz_diff_set)
    rz_main_rz_bin = property(_rizin.RzCore_rz_main_rz_bin_get, _rizin.RzCore_rz_main_rz_bin_set)
    rz_main_rz_run = property(_rizin.RzCore_rz_main_rz_run_get, _rizin.RzCore_rz_main_rz_run_set)
    rz_main_rz_gg = property(_rizin.RzCore_rz_main_rz_gg_get, _rizin.RzCore_rz_main_rz_gg_set)
    rz_main_rz_asm = property(_rizin.RzCore_rz_main_rz_asm_get, _rizin.RzCore_rz_main_rz_asm_set)
    rz_main_rz_ax = property(_rizin.RzCore_rz_main_rz_ax_get, _rizin.RzCore_rz_main_rz_ax_set)

    def __init__(self):
        _rizin.RzCore_swiginit(self, _rizin.new_RzCore())
    __swig_destroy__ = _rizin.delete_RzCore

    @staticmethod
    def gadget_free(g):
        return _rizin.RzCore_gadget_free(g)

    @staticmethod
    def ncast(p):
        return _rizin.RzCore_ncast(p)

    @staticmethod
    def cast(p):
        return _rizin.RzCore_cast(p)

    @staticmethod
    def config_print_all(cfg, str, state):
        return _rizin.RzCore_config_print_all(cfg, str, state)

    @staticmethod
    def fgets(buf, len, user):
        return _rizin.RzCore_fgets(buf, len, user)

    @staticmethod
    def flag_get_by_spaces(f, off):
        return _rizin.RzCore_flag_get_by_spaces(f, off)

    @staticmethod
    def seek_item_free(item):
        return _rizin.RzCore_seek_item_free(item)

    @staticmethod
    def file_close(fh):
        return _rizin.RzCore_file_close(fh)

    @staticmethod
    def hash_plugins_print(hash, state):
        return _rizin.RzCore_hash_plugins_print(hash, state)

    @staticmethod
    def crypto_plugins_print(cry, state):
        return _rizin.RzCore_crypto_plugins_print(cry, state)

    @staticmethod
    def io_plugins_print(io, state):
        return _rizin.RzCore_io_plugins_print(io, state)

    @staticmethod
    def parser_plugins_print(parser, state):
        return _rizin.RzCore_parser_plugins_print(parser, state)

    @staticmethod
    def fortune_list_types():
        return _rizin.RzCore_fortune_list_types()

    @staticmethod
    def lang_plugins_print(lang, state):
        return _rizin.RzCore_lang_plugins_print(lang, state)

    @staticmethod
    def esil_cmd(esil, cmd, a1, a2):
        return _rizin.RzCore_esil_cmd(esil, cmd, a1, a2)

    @staticmethod
    def esil_dumpstack(esil):
        return _rizin.RzCore_esil_dumpstack(esil)

    @staticmethod
    def analysis_hint_print(a, addr, state):
        return _rizin.RzCore_analysis_hint_print(a, addr, state)

    @staticmethod
    def analysis_hint_list_print(a, state):
        return _rizin.RzCore_analysis_hint_list_print(a, state)

    @staticmethod
    def analysis_name_type_to_str(typ):
        return _rizin.RzCore_analysis_name_type_to_str(typ)

    @staticmethod
    def analysis_name_free(p):
        return _rizin.RzCore_analysis_name_free(p)

    @staticmethod
    def graph_format_from_string(x):
        return _rizin.RzCore_graph_format_from_string(x)

    @staticmethod
    def graph_type_from_string(x):
        return _rizin.RzCore_graph_type_from_string(x)

    @staticmethod
    def asm_hit_new():
        return _rizin.RzCore_asm_hit_new()

    @staticmethod
    def asm_hit_list_new():
        return _rizin.RzCore_asm_hit_list_new()

    @staticmethod
    def asm_hit_free(_hit):
        return _rizin.RzCore_asm_hit_free(_hit)

    @staticmethod
    def disasm_op_free(x):
        return _rizin.RzCore_disasm_op_free(x)

    @staticmethod
    def bin_get_compile_time(bf):
        return _rizin.RzCore_bin_get_compile_time(bf)

    @staticmethod
    def sym_is_export(s):
        return _rizin.RzCore_sym_is_export(s)

    @staticmethod
    def bin_class_build_flag_name(cls):
        return _rizin.RzCore_bin_class_build_flag_name(cls)

    @staticmethod
    def bin_super_build_flag_name(cls):
        return _rizin.RzCore_bin_super_build_flag_name(cls)

    @staticmethod
    def bin_method_build_flag_name(cls, meth):
        return _rizin.RzCore_bin_method_build_flag_name(cls, meth)

    @staticmethod
    def bin_field_build_flag_name(cls, field):
        return _rizin.RzCore_bin_field_build_flag_name(cls, field)

    @staticmethod
    def bin_method_flags_str(flags, mode):
        return _rizin.RzCore_bin_method_flags_str(flags, mode)

    @staticmethod
    def bin_pdb_gvars_as_string(pdb, img_base, state):
        return _rizin.RzCore_bin_pdb_gvars_as_string(pdb, img_base, state)

    @staticmethod
    def bin_plugins_print(bin, state):
        return _rizin.RzCore_bin_plugins_print(bin, state)

    @staticmethod
    def bin_archs_print(bin, state):
        return _rizin.RzCore_bin_archs_print(bin, state)

    @staticmethod
    def analysis_stats_free(s):
        return _rizin.RzCore_analysis_stats_free(s)

    @staticmethod
    def analysis_stats_get_block_from(s, i):
        return _rizin.RzCore_analysis_stats_get_block_from(s, i)

    @staticmethod
    def analysis_stats_get_block_to(s, i):
        return _rizin.RzCore_analysis_stats_get_block_to(s, i)

    @staticmethod
    def task_scheduler_init(sched, ctx_switch, ctx_switch_user, break_cb, break_cb_user):
        return _rizin.RzCore_task_scheduler_init(sched, ctx_switch, ctx_switch_user, break_cb, break_cb_user)

    @staticmethod
    def task_scheduler_fini(tasks):
        return _rizin.RzCore_task_scheduler_fini(tasks)

    @staticmethod
    def task_get_incref(scheduler, id):
        return _rizin.RzCore_task_get_incref(scheduler, id)

    @staticmethod
    def task_running_tasks_count(scheduler):
        return _rizin.RzCore_task_running_tasks_count(scheduler)

    @staticmethod
    def task_new(sched, runner, runner_free, runner_user):
        return _rizin.RzCore_task_new(sched, runner, runner_free, runner_user)

    @staticmethod
    def task_incref(task):
        return _rizin.RzCore_task_incref(task)

    @staticmethod
    def task_decref(task):
        return _rizin.RzCore_task_decref(task)

    @staticmethod
    def task_enqueue(scheduler, task):
        return _rizin.RzCore_task_enqueue(scheduler, task)

    @staticmethod
    def task_enqueue_oneshot(scheduler, func, user):
        return _rizin.RzCore_task_enqueue_oneshot(scheduler, func, user)

    @staticmethod
    def task_run_sync(scheduler, task):
        return _rizin.RzCore_task_run_sync(scheduler, task)

    @staticmethod
    def task_sync_begin(scheduler):
        return _rizin.RzCore_task_sync_begin(scheduler)

    @staticmethod
    def task_sync_end(scheduler):
        return _rizin.RzCore_task_sync_end(scheduler)

    @staticmethod
    def task_yield(scheduler):
        return _rizin.RzCore_task_yield(scheduler)

    @staticmethod
    def task_sleep_begin(task):
        return _rizin.RzCore_task_sleep_begin(task)

    @staticmethod
    def task_sleep_end(task):
        return _rizin.RzCore_task_sleep_end(task)

    @staticmethod
    def task_break(scheduler, id):
        return _rizin.RzCore_task_break(scheduler, id)

    @staticmethod
    def task_break_all(scheduler):
        return _rizin.RzCore_task_break_all(scheduler)

    @staticmethod
    def task_del(scheduler, id):
        return _rizin.RzCore_task_del(scheduler, id)

    @staticmethod
    def task_self(scheduler):
        return _rizin.RzCore_task_self(scheduler)

    @staticmethod
    def task_join(scheduler, current, id):
        return _rizin.RzCore_task_join(scheduler, current, id)

    @staticmethod
    def cmd_task_get_result(task):
        return _rizin.RzCore_cmd_task_get_result(task)

    @staticmethod
    def function_task_get_result(task):
        return _rizin.RzCore_function_task_get_result(task)

    @staticmethod
    def task_status(task):
        return _rizin.RzCore_task_status(task)

    @staticmethod
    def flirt_dump_file(flirt_file):
        return _rizin.RzCore_flirt_dump_file(flirt_file)

    @staticmethod
    def flirt_arch_from_id(arch):
        return _rizin.RzCore_flirt_arch_from_id(arch)

    @staticmethod
    def flirt_arch_from_name(arch):
        return _rizin.RzCore_flirt_arch_from_name(arch)

    @staticmethod
    def flirt_file_from_option_list(file_list):
        return _rizin.RzCore_flirt_file_from_option_list(file_list)

    @staticmethod
    def flirt_os_from_option_list(os_list):
        return _rizin.RzCore_flirt_os_from_option_list(os_list)

    @staticmethod
    def flirt_app_from_option_list(app_list):
        return _rizin.RzCore_flirt_app_from_option_list(app_list)

    @staticmethod
    def annotated_code_print_json(code):
        return _rizin.RzCore_annotated_code_print_json(code)

    @staticmethod
    def annotated_code_print(code, line_offsets):
        return _rizin.RzCore_annotated_code_print(code, line_offsets)

    @staticmethod
    def annotated_code_print_comment_cmds(code):
        return _rizin.RzCore_annotated_code_print_comment_cmds(code)

    @staticmethod
    def sym_name_init(names, symbol, demangle):
        return _rizin.RzCore_sym_name_init(names, symbol, demangle)

    @staticmethod
    def sym_name_fini(names):
        return _rizin.RzCore_sym_name_fini(names)

    def file_open_load(self, filepath, addr=0, perms=0, write_mode=False):
        return _rizin.RzCore_file_open_load(self, filepath, addr, perms, write_mode)

    def file_open(self, *args):
        return _rizin.RzCore_file_open(self, *args)

    def bind(self, bnd):
        return _rizin.RzCore_bind(self, bnd)

    def notify_begin_str(self, text):
        return _rizin.RzCore_notify_begin_str(self, text)

    def notify_done_str(self, text):
        return _rizin.RzCore_notify_done_str(self, text)

    def notify_error_str(self, text):
        return _rizin.RzCore_notify_error_str(self, text)

    def warn_after_output(self, warning):
        return _rizin.RzCore_warn_after_output(self, warning)

    def gadget_print(self):
        return _rizin.RzCore_gadget_print(self)

    def plugin_init(self):
        return _rizin.RzCore_plugin_init(self)

    def plugin_add(self, plugin):
        return _rizin.RzCore_plugin_add(self, plugin)

    def plugin_del(self, plugin):
        return _rizin.RzCore_plugin_del(self, plugin)

    def plugin_fini(self):
        return _rizin.RzCore_plugin_fini(self)

    def get_themes(self):
        return _rizin.RzCore_get_themes(self)

    def theme_get(self):
        return _rizin.RzCore_theme_get(self)

    def theme_load(self, name):
        return _rizin.RzCore_theme_load(self, name)

    def theme_nextpal(self, mode):
        return _rizin.RzCore_theme_nextpal(self, mode)

    def get_section_name(self, addr):
        return _rizin.RzCore_get_section_name(self, addr)

    def get_cons(self):
        return _rizin.RzCore_get_cons(self)

    def get_bin(self):
        return _rizin.RzCore_get_bin(self)

    def get_config(self):
        return _rizin.RzCore_get_config(self)

    def init(self):
        return _rizin.RzCore_init(self)

    def bind_cons(self):
        return _rizin.RzCore_bind_cons(self)

    def fini(self):
        return _rizin.RzCore_fini(self)

    def wait(self):
        return _rizin.RzCore_wait(self)

    def bin_load_structs(self, file):
        return _rizin.RzCore_bin_load_structs(self, file)

    def config_init(self):
        return _rizin.RzCore_config_init(self)

    def parse_rizinrc(self):
        return _rizin.RzCore_parse_rizinrc(self)

    def config_in_space(self, space):
        return _rizin.RzCore_config_in_space(self, space)

    def prompt(self, sync):
        return _rizin.RzCore_prompt(self, sync)

    def prompt_exec(self):
        return _rizin.RzCore_prompt_exec(self)

    def prompt_loop(self):
        return _rizin.RzCore_prompt_loop(self)

    def pava(self, addr):
        return _rizin.RzCore_pava(self, addr)

    def cmd(self, cmd_arg, log):
        return _rizin.RzCore_cmd(self, cmd_arg, log)

    def cmd_rzshell(self, cmd, log):
        return _rizin.RzCore_cmd_rzshell(self, cmd, log)

    def editor(self, file, str):
        return _rizin.RzCore_editor(self, file, str)

    def flush(self, cmd):
        return _rizin.RzCore_flush(self, cmd)

    def cmd_init(self):
        return _rizin.RzCore_cmd_init(self)

    def cmd_str(self, cmd):
        return _rizin.RzCore_cmd_str(self, cmd)

    def cmd_raw(self, cmd, length):
        return _rizin.RzCore_cmd_raw(self, cmd, length)

    def cmd_str_pipe(self, cmd):
        return _rizin.RzCore_cmd_str_pipe(self, cmd)

    def cmd_file(self, file):
        return _rizin.RzCore_cmd_file(self, file)

    def cmd_lines(self, lines):
        return _rizin.RzCore_cmd_lines(self, lines)

    def cmd_lines_rzshell(self, lines):
        return _rizin.RzCore_cmd_lines_rzshell(self, lines)

    def cmd_command(self, command):
        return _rizin.RzCore_cmd_command(self, command)

    def run_script(self, file):
        return _rizin.RzCore_run_script(self, file)

    def seek(self, addr, rb):
        return _rizin.RzCore_seek(self, addr, rb)

    def seek_and_save(self, addr, rb):
        return _rizin.RzCore_seek_and_save(self, addr, rb)

    def seek_opt(self, addr, read_block, save):
        return _rizin.RzCore_seek_opt(self, addr, read_block, save)

    def seek_mark(self):
        return _rizin.RzCore_seek_mark(self)

    def seek_save(self):
        return _rizin.RzCore_seek_save(self)

    def seek_undo(self):
        return _rizin.RzCore_seek_undo(self)

    def seek_redo(self):
        return _rizin.RzCore_seek_redo(self)

    def seek_reset(self):
        return _rizin.RzCore_seek_reset(self)

    def seek_free(self):
        return _rizin.RzCore_seek_free(self)

    def seek_list(self):
        return _rizin.RzCore_seek_list(self)

    def seek_peek(self, idx):
        return _rizin.RzCore_seek_peek(self, idx)

    def seek_base(self, hex, save):
        return _rizin.RzCore_seek_base(self, hex, save)

    def seek_prev(self, type, save):
        return _rizin.RzCore_seek_prev(self, type, save)

    def seek_next(self, type, save):
        return _rizin.RzCore_seek_next(self, type, save)

    def seek_align(self, align, save):
        return _rizin.RzCore_seek_align(self, align, save)

    def seek_delta(self, delta, save):
        return _rizin.RzCore_seek_delta(self, delta, save)

    def seek_analysis_bb(self, addr, save):
        return _rizin.RzCore_seek_analysis_bb(self, addr, save)

    def arch_bits_at(self, addr, bits, arch):
        return _rizin.RzCore_arch_bits_at(self, addr, bits, arch)

    def seek_arch_bits(self, addr):
        return _rizin.RzCore_seek_arch_bits(self, addr)

    def block_read(self):
        return _rizin.RzCore_block_read(self)

    def block_size(self, bsize):
        return _rizin.RzCore_block_size(self, bsize)

    def is_valid_offset(self, offset):
        return _rizin.RzCore_is_valid_offset(self, offset)

    def write_hexpair(self, addr, pairs):
        return _rizin.RzCore_write_hexpair(self, addr, pairs)

    def write_assembly(self, addr, instructions):
        return _rizin.RzCore_write_assembly(self, addr, instructions)

    def write_assembly_fill(self, addr, instructions):
        return _rizin.RzCore_write_assembly_fill(self, addr, instructions)

    def write_block(self, addr, data, len):
        return _rizin.RzCore_write_block(self, addr, data, len)

    def write_seq_at(self, addr, _from, to, step, value_size):
        return _rizin.RzCore_write_seq_at(self, addr, _from, to, step, value_size)

    def shift_block(self, addr, b_size, dist):
        return _rizin.RzCore_shift_block(self, addr, b_size, dist)

    def autocomplete_rzshell(self, buf, prompt_type):
        return _rizin.RzCore_autocomplete_rzshell(self, buf, prompt_type)

    def help_vars_print(self):
        return _rizin.RzCore_help_vars_print(self)

    def prevop_addr(self, start_addr, numinstrs, prev_addr):
        return _rizin.RzCore_prevop_addr(self, start_addr, numinstrs, prev_addr)

    def prevop_addr_force(self, start_addr, numinstrs):
        return _rizin.RzCore_prevop_addr_force(self, start_addr, numinstrs)

    def getreloc(self, addr, size):
        return _rizin.RzCore_getreloc(self, addr, size)

    def get_reloc_to(self, addr):
        return _rizin.RzCore_get_reloc_to(self, addr)

    def get_asmqjmps(self, str):
        return _rizin.RzCore_get_asmqjmps(self, str)

    def set_asmqjmps(self, str, len, i):
        return _rizin.RzCore_set_asmqjmps(self, str, len, i)

    def add_asmqjmp(self, addr):
        return _rizin.RzCore_add_asmqjmp(self, addr)

    def analysis_type_init(self):
        return _rizin.RzCore_analysis_type_init(self)

    def analysis_hasrefs_to_depth(self, value, pj, depth):
        return _rizin.RzCore_analysis_hasrefs_to_depth(self, value, pj, depth)

    def global_vars_propagate_types(self, fcn):
        return _rizin.RzCore_global_vars_propagate_types(self, fcn)

    def analysis_objc_refs(self, auto_analysis):
        return _rizin.RzCore_analysis_objc_refs(self, auto_analysis)

    def analysis_objc_stubs(self):
        return _rizin.RzCore_analysis_objc_stubs(self)

    def analysis_cc_init_by_path(self, path, homepath):
        return _rizin.RzCore_analysis_cc_init_by_path(self, path, homepath)

    def analysis_cc_init(self):
        return _rizin.RzCore_analysis_cc_init(self)

    def analysis_paths(self, _from, to, followCalls, followDepth, is_json):
        return _rizin.RzCore_analysis_paths(self, _from, to, followCalls, followDepth, is_json)

    def types_as_c(self, name, multiline):
        return _rizin.RzCore_types_as_c(self, name, multiline)

    def types_as_c_all(self, multiline):
        return _rizin.RzCore_types_as_c_all(self, multiline)

    def analysis_esil_trace_start(self):
        return _rizin.RzCore_analysis_esil_trace_start(self)

    def analysis_esil_trace_stop(self):
        return _rizin.RzCore_analysis_esil_trace_stop(self)

    def search_cb(self, _from, to, cb):
        return _rizin.RzCore_search_cb(self, _from, to, cb)

    def file_reopen(self, args, perm, binload):
        return _rizin.RzCore_file_reopen(self, args, perm, binload)

    def file_reopen_in_malloc(self):
        return _rizin.RzCore_file_reopen_in_malloc(self)

    def file_reopen_debug(self, args):
        return _rizin.RzCore_file_reopen_debug(self, args)

    def file_reopen_remote_debug(self, uri, addr):
        return _rizin.RzCore_file_reopen_remote_debug(self, uri, addr)

    def file_resize(self, newsize):
        return _rizin.RzCore_file_resize(self, newsize)

    def file_resize_delta(self, delta):
        return _rizin.RzCore_file_resize_delta(self, delta)

    def file_find_by_fd(self, fd):
        return _rizin.RzCore_file_find_by_fd(self, fd)

    def file_find_by_name(self, name):
        return _rizin.RzCore_file_find_by_name(self, name)

    def file_cur(self):
        return _rizin.RzCore_file_cur(self)

    def file_set_by_fd(self, fd):
        return _rizin.RzCore_file_set_by_fd(self, fd)

    def file_set_by_name(self, name):
        return _rizin.RzCore_file_set_by_name(self, name)

    def file_set_by_file(self, cf):
        return _rizin.RzCore_file_set_by_file(self, cf)

    def setup_debugger(self, debugbackend, attach):
        return _rizin.RzCore_setup_debugger(self, debugbackend, attach)

    def file_open_many(self, file, perm, loadaddr):
        return _rizin.RzCore_file_open_many(self, file, perm, loadaddr)

    def file_malloc_copy_chunk(self, len, offset):
        return _rizin.RzCore_file_malloc_copy_chunk(self, len, offset)

    def file_get_by_fd(self, fd):
        return _rizin.RzCore_file_get_by_fd(self, fd)

    def file_close_fd(self, fd):
        return _rizin.RzCore_file_close_fd(self, fd)

    def file_close_all_but(self):
        return _rizin.RzCore_file_close_all_but(self)

    def raw_file_print(self):
        return _rizin.RzCore_raw_file_print(self)

    def file_print(self, mode):
        return _rizin.RzCore_file_print(self, mode)

    def file_binlist(self):
        return _rizin.RzCore_file_binlist(self)

    def file_bin_raise(self, num):
        return _rizin.RzCore_file_bin_raise(self, num)

    def io_file_open(self, fd):
        return _rizin.RzCore_io_file_open(self, fd)

    def io_file_reopen(self, fd, perms):
        return _rizin.RzCore_io_file_reopen(self, fd, perms)

    def extend_at(self, addr, size):
        return _rizin.RzCore_extend_at(self, addr, size)

    def write_at(self, addr, buf, size):
        return _rizin.RzCore_write_at(self, addr, buf, size)

    def write_value_at(self, addr, value, sz):
        return _rizin.RzCore_write_value_at(self, addr, value, sz)

    def write_value_inc_at(self, addr, value, sz):
        return _rizin.RzCore_write_value_inc_at(self, addr, value, sz)

    def write_string_at(self, addr, s):
        return _rizin.RzCore_write_string_at(self, addr, s)

    def write_string_zero_at(self, addr, s):
        return _rizin.RzCore_write_string_zero_at(self, addr, s)

    def write_string_wide_at(self, addr, s):
        return _rizin.RzCore_write_string_wide_at(self, addr, s)

    def write_length_string_at(self, addr, s):
        return _rizin.RzCore_write_length_string_at(self, addr, s)

    def write_base64d_at(self, addr, s):
        return _rizin.RzCore_write_base64d_at(self, addr, s)

    def write_base64_at(self, addr, s):
        return _rizin.RzCore_write_base64_at(self, addr, s)

    def write_random_at(self, addr, len):
        return _rizin.RzCore_write_random_at(self, addr, len)

    def write_block_op_at(self, addr, op, hex, hexlen):
        return _rizin.RzCore_write_block_op_at(self, addr, op, hex, hexlen)

    def write_duplicate_at(self, addr, _from, len):
        return _rizin.RzCore_write_duplicate_at(self, addr, _from, len)

    def transform_op(self, addr, op, hex, hexlen, buflen):
        return _rizin.RzCore_transform_op(self, addr, op, hex, hexlen, buflen)

    def file_cur_fd(self):
        return _rizin.RzCore_file_cur_fd(self)

    def io_cache_print(self, state):
        return _rizin.RzCore_io_cache_print(self, state)

    def io_pcache_print(self, desc, state):
        return _rizin.RzCore_io_pcache_print(self, desc, state)

    def reg_default(self):
        return _rizin.RzCore_reg_default(self)

    def reg_getv_by_role_or_name(self, name):
        return _rizin.RzCore_reg_getv_by_role_or_name(self, name)

    def reg_set_by_role_or_name(self, name, num):
        return _rizin.RzCore_reg_set_by_role_or_name(self, name, num)

    def reg_update_flags(self):
        return _rizin.RzCore_reg_update_flags(self)

    def is_debug(self):
        return _rizin.RzCore_is_debug(self)

    def debug_step_one(self, times):
        return _rizin.RzCore_debug_step_one(self, times)

    def debug_continue_until(self, addr):
        return _rizin.RzCore_debug_continue_until(self, addr)

    def debug_bp_add_noreturn_func(self):
        return _rizin.RzCore_debug_bp_add_noreturn_func(self)

    def debug_breakpoint_toggle(self, addr):
        return _rizin.RzCore_debug_breakpoint_toggle(self, addr)

    def debug_set_register_flags(self):
        return _rizin.RzCore_debug_set_register_flags(self)

    def debug_clear_register_flags(self):
        return _rizin.RzCore_debug_clear_register_flags(self)

    def debug_process_close(self):
        return _rizin.RzCore_debug_process_close(self)

    def debug_step_until_frame(self):
        return _rizin.RzCore_debug_step_until_frame(self)

    def debug_step_back(self, steps):
        return _rizin.RzCore_debug_step_back(self, steps)

    def debug_step_over(self, steps):
        return _rizin.RzCore_debug_step_over(self, steps)

    def debug_step_skip(self, times):
        return _rizin.RzCore_debug_step_skip(self, times)

    def dbg_follow_seek_register(self):
        return _rizin.RzCore_dbg_follow_seek_register(self)

    def debug_backtraces(self):
        return _rizin.RzCore_debug_backtraces(self)

    def debug_plugins_print(self, state):
        return _rizin.RzCore_debug_plugins_print(self, state)

    def debug_map_update_flags(self):
        return _rizin.RzCore_debug_map_update_flags(self)

    def debug_map_print(self, addr, state):
        return _rizin.RzCore_debug_map_print(self, addr, state)

    def fortune_list(self):
        return _rizin.RzCore_fortune_list(self)

    def fortune_get_random(self):
        return _rizin.RzCore_fortune_get_random(self)

    def fortune_print_random(self):
        return _rizin.RzCore_fortune_print_random(self)

    def yank_as_string(self, pos):
        return _rizin.RzCore_yank_as_string(self, pos)

    def yank(self, addr, len):
        return _rizin.RzCore_yank(self, addr, len)

    def yank_string(self, addr, maxlen):
        return _rizin.RzCore_yank_string(self, addr, maxlen)

    def yank_hexpair(self, str):
        return _rizin.RzCore_yank_hexpair(self, str)

    def yank_paste(self, addr, len):
        return _rizin.RzCore_yank_paste(self, addr, len)

    def yank_set(self, addr, buf):
        return _rizin.RzCore_yank_set(self, addr, buf)

    def yank_set_str(self, addr, str):
        return _rizin.RzCore_yank_set_str(self, addr, str)

    def yank_to(self, len, addr):
        return _rizin.RzCore_yank_to(self, len, addr)

    def yank_dump(self, pos, state):
        return _rizin.RzCore_yank_dump(self, pos, state)

    def yank_print_hexdump(self, pos):
        return _rizin.RzCore_yank_print_hexdump(self, pos)

    def yank_print(self, pos):
        return _rizin.RzCore_yank_print(self, pos)

    def yank_print_string(self, pos):
        return _rizin.RzCore_yank_print_string(self, pos)

    def yank_hud_file(self, input):
        return _rizin.RzCore_yank_hud_file(self, input)

    def yank_hud_path(self, input, dir):
        return _rizin.RzCore_yank_hud_path(self, input, dir)

    def yank_file(self, len, addr, filename):
        return _rizin.RzCore_yank_file(self, len, addr, filename)

    def yank_file_all(self, filename):
        return _rizin.RzCore_yank_file_all(self, filename)

    def loadlibs_init(self):
        return _rizin.RzCore_loadlibs_init(self)

    def loadlibs(self, where):
        return _rizin.RzCore_loadlibs(self, where)

    def cmd_new(self, has_cons):
        return _rizin.RzCore_cmd_new(self, has_cons)

    def cmd_buffer(self, buf):
        return _rizin.RzCore_cmd_buffer(self, buf)

    def cmd0(self, cmd):
        return _rizin.RzCore_cmd0(self, cmd)

    def cmd0_rzshell(self, cmd):
        return _rizin.RzCore_cmd0_rzshell(self, cmd)

    def op_str(self, addr):
        return _rizin.RzCore_op_str(self, addr)

    def op_analysis(self, addr, mask):
        return _rizin.RzCore_op_analysis(self, addr, mask)

    def disassemble_instr(self, addr, l):
        return _rizin.RzCore_disassemble_instr(self, addr, l)

    def disassemble_bytes(self, addr, b):
        return _rizin.RzCore_disassemble_bytes(self, addr, b)

    def arg_get(self, cc, num):
        return _rizin.RzCore_arg_get(self, cc, num)

    def get_func_args(self, func_name):
        return _rizin.RzCore_get_func_args(self, func_name)

    def print_func_args(self):
        return _rizin.RzCore_print_func_args(self)

    def core_plugins_print(self, state):
        return _rizin.RzCore_core_plugins_print(self, state)

    def analysis_esil(self, addr, size, fcn):
        return _rizin.RzCore_analysis_esil(self, addr, size, fcn)

    def esil_step(self, until_addr, until_expr, prev_addr, stepOver):
        return _rizin.RzCore_esil_step(self, until_addr, until_expr, prev_addr, stepOver)

    def esil_step_back(self):
        return _rizin.RzCore_esil_step_back(self)

    def esil_continue_back(self):
        return _rizin.RzCore_esil_continue_back(self)

    def analysis_esil_step_over(self):
        return _rizin.RzCore_analysis_esil_step_over(self)

    def analysis_esil_reinit(self):
        return _rizin.RzCore_analysis_esil_reinit(self)

    def analysis_esil_deinit(self):
        return _rizin.RzCore_analysis_esil_deinit(self)

    def analysis_esil_init_mem(self, name, addr, size):
        return _rizin.RzCore_analysis_esil_init_mem(self, name, addr, size)

    def analysis_esil_init_mem_del(self, name, addr, size):
        return _rizin.RzCore_analysis_esil_init_mem_del(self, name, addr, size)

    def analysis_esil_init_regs(self):
        return _rizin.RzCore_analysis_esil_init_regs(self)

    def analysis_il_reinit(self):
        return _rizin.RzCore_analysis_il_reinit(self)

    def il_step(self, n):
        return _rizin.RzCore_il_step(self, n)

    def il_step_until(self, until):
        return _rizin.RzCore_il_step_until(self, until)

    def il_step_until_with_events(self, until):
        return _rizin.RzCore_il_step_until_with_events(self, until)

    def analysis_op(self, addr, mask):
        return _rizin.RzCore_analysis_op(self, addr, mask)

    def analysis_fcn_merge(self, addr, addr2):
        return _rizin.RzCore_analysis_fcn_merge(self, addr, addr2)

    def analysis_optype_colorfor(self, addr, verbose):
        return _rizin.RzCore_analysis_optype_colorfor(self, addr, verbose)

    def analysis_address(self, addr):
        return _rizin.RzCore_analysis_address(self, addr)

    def analysis_undefine(self, off):
        return _rizin.RzCore_analysis_undefine(self, off)

    def analysis_search(self, _from, to, ref, mode):
        return _rizin.RzCore_analysis_search(self, _from, to, ref, mode)

    def analysis_search_xrefs(self, _from, to):
        return _rizin.RzCore_analysis_search_xrefs(self, _from, to)

    def analysis_data(self, addr, count, depth, wordsize):
        return _rizin.RzCore_analysis_data(self, addr, count, depth, wordsize)

    def analysis_resolve_jumps(self):
        return _rizin.RzCore_analysis_resolve_jumps(self)

    def analysis_refs(self, nbytes):
        return _rizin.RzCore_analysis_refs(self, nbytes)

    def analysis_flag_every_function(self):
        return _rizin.RzCore_analysis_flag_every_function(self)

    def analysis_function_rename(self, addr, _name):
        return _rizin.RzCore_analysis_function_rename(self, addr, _name)

    def analysis_function_add(self, name, addr, analyze_recursively):
        return _rizin.RzCore_analysis_function_add(self, name, addr, analyze_recursively)

    def analysis_fcn(self, at, _from, reftype, depth):
        return _rizin.RzCore_analysis_fcn(self, at, _from, reftype, depth)

    def analysis_function_autoname(self, fcn):
        return _rizin.RzCore_analysis_function_autoname(self, fcn)

    def analysis_function_strings_print(self, fcn, pj):
        return _rizin.RzCore_analysis_function_strings_print(self, fcn, pj)

    def analysis_autoname_all_fcns(self):
        return _rizin.RzCore_analysis_autoname_all_fcns(self)

    def analysis_recover_golang_functions(self):
        return _rizin.RzCore_analysis_recover_golang_functions(self)

    def analysis_resolve_golang_strings(self):
        return _rizin.RzCore_analysis_resolve_golang_strings(self)

    def analysis_fcn_clean(self, addr):
        return _rizin.RzCore_analysis_fcn_clean(self, addr)

    def analysis_graph_to(self, addr, n):
        return _rizin.RzCore_analysis_graph_to(self, addr, n)

    def analysis_all(self):
        return _rizin.RzCore_analysis_all(self)

    def analysis_everything(self, experimental, dh_orig):
        return _rizin.RzCore_analysis_everything(self, experimental, dh_orig)

    def analysis_sigdb_list(self, with_details):
        return _rizin.RzCore_analysis_sigdb_list(self, with_details)

    def analysis_sigdb_apply(self, n_applied, filter):
        return _rizin.RzCore_analysis_sigdb_apply(self, n_applied, filter)

    def analysis_sigdb_print(self, table):
        return _rizin.RzCore_analysis_sigdb_print(self, table)

    def analysis_cycles(self, ccl):
        return _rizin.RzCore_analysis_cycles(self, ccl)

    def analysis_fcn_get_calls(self, fcn):
        return _rizin.RzCore_analysis_fcn_get_calls(self, fcn)

    def analysis_calls(self, imports_only):
        return _rizin.RzCore_analysis_calls(self, imports_only)

    def get_stacksz(self, _from, to):
        return _rizin.RzCore_get_stacksz(self, _from, to)

    def analysis_hint_set_offset(self, struct_member):
        return _rizin.RzCore_analysis_hint_set_offset(self, struct_member)

    def analysis_continue_until_syscall(self):
        return _rizin.RzCore_analysis_continue_until_syscall(self)

    def analysis_continue_until_call(self):
        return _rizin.RzCore_analysis_continue_until_call(self)

    def is_debugging(self):
        return _rizin.RzCore_is_debugging(self)

    def perform_auto_analysis(self, type):
        return _rizin.RzCore_perform_auto_analysis(self, type)

    def analysis_coverage_count(self):
        return _rizin.RzCore_analysis_coverage_count(self)

    def analysis_code_count(self):
        return _rizin.RzCore_analysis_code_count(self)

    def analysis_calls_count(self):
        return _rizin.RzCore_analysis_calls_count(self)

    def analysis_name(self, addr):
        return _rizin.RzCore_analysis_name(self, addr)

    def analysis_rename(self, name, addr):
        return _rizin.RzCore_analysis_rename(self, name, addr)

    def analysis_bytes(self, start_addr, buf, nops):
        return _rizin.RzCore_analysis_bytes(self, start_addr, buf, nops)

    def analysis_op_chunk_iter(self, offset, len, nops, mask):
        return _rizin.RzCore_analysis_op_chunk_iter(self, offset, len, nops, mask)

    def analysis_op_function_iter(self, fcn, mask):
        return _rizin.RzCore_analysis_op_function_iter(self, fcn, mask)

    def analysis_ops_size(self, start_addr, buf, nops):
        return _rizin.RzCore_analysis_ops_size(self, start_addr, buf, nops)

    def graph_datarefs(self, addr):
        return _rizin.RzCore_graph_datarefs(self, addr)

    def graph_coderefs(self, addr):
        return _rizin.RzCore_graph_coderefs(self, addr)

    def graph_codexrefs(self, addr):
        return _rizin.RzCore_graph_codexrefs(self, addr)

    def graph_importxrefs(self):
        return _rizin.RzCore_graph_importxrefs(self)

    def graph_callgraph(self, addr):
        return _rizin.RzCore_graph_callgraph(self, addr)

    def graph_function(self, addr):
        return _rizin.RzCore_graph_function(self, addr)

    def graph_line(self, addr):
        return _rizin.RzCore_graph_line(self, addr)

    def graph_il(self, addr):
        return _rizin.RzCore_graph_il(self, addr)

    def graph_icfg(self):
        return _rizin.RzCore_graph_icfg(self)

    def graph_cfg(self, addr):
        return _rizin.RzCore_graph_cfg(self, addr)

    def graph_write_graph(self, graph, filename):
        return _rizin.RzCore_graph_write_graph(self, graph, filename)

    def graph_write(self, addr, type, path):
        return _rizin.RzCore_graph_write(self, addr, type, path)

    def graph_to_dot_str(self, graph):
        return _rizin.RzCore_graph_to_dot_str(self, graph)

    def graph_to_sdb_str(self, graph):
        return _rizin.RzCore_graph_to_sdb_str(self, graph)

    def analysis_type_match(self, fcn, addr_loop_table):
        return _rizin.RzCore_analysis_type_match(self, fcn, addr_loop_table)

    def syscall(self, name, args):
        return _rizin.RzCore_syscall(self, name, args)

    def set_asm_configs(self, arch, bits, segoff):
        return _rizin.RzCore_set_asm_configs(self, arch, bits, segoff)

    def asm_search(self, input):
        return _rizin.RzCore_asm_search(self, input)

    def asm_plugins_print(self, state, flags):
        return _rizin.RzCore_asm_plugins_print(self, state, flags)

    def asm_cpu_plugin_print(self, state, arch_name):
        return _rizin.RzCore_asm_cpu_plugin_print(self, state, arch_name)

    def cpu_descs_print(self, plugin):
        return _rizin.RzCore_cpu_descs_print(self, plugin)

    def asm_strsearch(self, input, _from, to, maxhits, regexp, everyByte, mode):
        return _rizin.RzCore_asm_strsearch(self, input, _from, to, maxhits, regexp, everyByte, mode)

    def asm_bwdisassemble(self, addr, n, len):
        return _rizin.RzCore_asm_bwdisassemble(self, addr, n, len)

    def asm_back_disassemble_instr(self, addr, len, hit_count, extra_padding):
        return _rizin.RzCore_asm_back_disassemble_instr(self, addr, len, hit_count, extra_padding)

    def asm_back_disassemble_byte(self, addr, len, hit_count, extra_padding):
        return _rizin.RzCore_asm_back_disassemble_byte(self, addr, len, hit_count, extra_padding)

    def asm_bwdis_len(self, len, start_addr, l):
        return _rizin.RzCore_asm_bwdis_len(self, len, start_addr, l)

    def print_disasm(self, addr, buf, nlines, state, options):
        return _rizin.RzCore_print_disasm(self, addr, buf, nlines, state, options)

    def print_disasm_json(self, addr, buf, lines, pj):
        return _rizin.RzCore_print_disasm_json(self, addr, buf, lines, pj)

    def print_disasm_instructions_with_buf(self, address, buf, nb_bytes, nb_opcodes):
        return _rizin.RzCore_print_disasm_instructions_with_buf(self, address, buf, nb_bytes, nb_opcodes)

    def print_disasm_instructions(self, nb_bytes, nb_opcodes):
        return _rizin.RzCore_print_disasm_instructions(self, nb_bytes, nb_opcodes)

    def print_disasm_all(self, addr, l, len, mode):
        return _rizin.RzCore_print_disasm_all(self, addr, l, len, mode)

    def disasm_pdi_with_buf(self, address, buf, nb_opcodes, nb_bytes, fmt):
        return _rizin.RzCore_disasm_pdi_with_buf(self, address, buf, nb_opcodes, nb_bytes, fmt)

    def disasm_pdi(self, nb_opcodes, nb_bytes, fmt):
        return _rizin.RzCore_disasm_pdi(self, nb_opcodes, nb_bytes, fmt)

    def disasm_pde(self, nb_opcodes, state):
        return _rizin.RzCore_disasm_pde(self, nb_opcodes, state)

    def disasm_instruction(self, addr, reladdr, fcn, color):
        return _rizin.RzCore_disasm_instruction(self, addr, reladdr, fcn, color)

    def print_function_disasm_json(self, fcn, pj):
        return _rizin.RzCore_print_function_disasm_json(self, fcn, pj)

    def flag_in_middle(self, at, oplen, midflags):
        return _rizin.RzCore_flag_in_middle(self, at, oplen, midflags)

    def bb_starts_in_middle(self, at, oplen):
        return _rizin.RzCore_bb_starts_in_middle(self, at, oplen)

    def disasm_all_possible_opcodes(self, buffer, addr, n_bytes):
        return _rizin.RzCore_disasm_all_possible_opcodes(self, buffer, addr, n_bytes)

    def bin_raise(self, bfid):
        return _rizin.RzCore_bin_raise(self, bfid)

    def bin_set_cur(self, binfile):
        return _rizin.RzCore_bin_set_cur(self, binfile)

    def bin_options_init(self, opts, fd, baseaddr, loadaddr):
        return _rizin.RzCore_bin_options_init(self, opts, fd, baseaddr, loadaddr)

    def bin_apply_strings(self, binfile):
        return _rizin.RzCore_bin_apply_strings(self, binfile)

    def bin_apply_config(self, binfile):
        return _rizin.RzCore_bin_apply_config(self, binfile)

    def bin_apply_maps(self, binfile, va):
        return _rizin.RzCore_bin_apply_maps(self, binfile, va)

    def bin_apply_main(self, binfile, va):
        return _rizin.RzCore_bin_apply_main(self, binfile, va)

    def bin_apply_dwarf(self, binfile):
        return _rizin.RzCore_bin_apply_dwarf(self, binfile)

    def bin_apply_entry(self, binfile, va):
        return _rizin.RzCore_bin_apply_entry(self, binfile, va)

    def bin_apply_sections(self, binfile, va):
        return _rizin.RzCore_bin_apply_sections(self, binfile, va)

    def bin_apply_relocs(self, binfile, va):
        return _rizin.RzCore_bin_apply_relocs(self, binfile, va)

    def bin_apply_imports(self, binfile, va):
        return _rizin.RzCore_bin_apply_imports(self, binfile, va)

    def bin_apply_symbols(self, binfile, va):
        return _rizin.RzCore_bin_apply_symbols(self, binfile, va)

    def bin_apply_classes(self, binfile):
        return _rizin.RzCore_bin_apply_classes(self, binfile)

    def bin_apply_resources(self, binfile):
        return _rizin.RzCore_bin_apply_resources(self, binfile)

    def bin_apply_info(self, binfile, mask):
        return _rizin.RzCore_bin_apply_info(self, binfile, mask)

    def bin_apply_all_info(self, binfile):
        return _rizin.RzCore_bin_apply_all_info(self, binfile)

    def bin_set_by_fd(self, bin_fd):
        return _rizin.RzCore_bin_set_by_fd(self, bin_fd)

    def bin_set_by_name(self, name):
        return _rizin.RzCore_bin_set_by_name(self, name)

    def bin_load(self, file_uri, base_addr):
        return _rizin.RzCore_bin_load(self, file_uri, base_addr)

    def bin_export_info(self, mode):
        return _rizin.RzCore_bin_export_info(self, mode)

    def binfiles_print(self, state):
        return _rizin.RzCore_binfiles_print(self, state)

    def binfiles_delete(self, bf):
        return _rizin.RzCore_binfiles_delete(self, bf)

    def bin_create_digests(self, paddr, size, digests):
        return _rizin.RzCore_bin_create_digests(self, paddr, size, digests)

    def bin_print_source_line_sample(self, s, state):
        return _rizin.RzCore_bin_print_source_line_sample(self, s, state)

    def bin_print_source_line_info(self, li, state):
        return _rizin.RzCore_bin_print_source_line_info(self, li, state)

    def sysenv_begin(self):
        return _rizin.RzCore_sysenv_begin(self)

    def sysenv_end(self):
        return _rizin.RzCore_sysenv_end(self)

    def recover_vars(self, fcn, argonly):
        return _rizin.RzCore_recover_vars(self, fcn, argonly)

    def bin_set_arch_bits(self, name, arch, bits):
        return _rizin.RzCore_bin_set_arch_bits(self, name, arch, bits)

    def bin_update_arch_bits(self):
        return _rizin.RzCore_bin_update_arch_bits(self)

    def bin_pdb_get_filename(self):
        return _rizin.RzCore_bin_pdb_get_filename(self)

    def bin_pdb_load(self, filename):
        return _rizin.RzCore_bin_pdb_load(self, filename)

    def pdb_load_info(self, file):
        return _rizin.RzCore_pdb_load_info(self, file)

    def pdb_info_print(self, db, pdb, state):
        return _rizin.RzCore_pdb_info_print(self, db, pdb, state)

    def bin_entries_print(self, bf, state):
        return _rizin.RzCore_bin_entries_print(self, bf, state)

    def bin_initfini_print(self, bf, state):
        return _rizin.RzCore_bin_initfini_print(self, bf, state)

    def bin_exports_print(self, bf, state, filter):
        return _rizin.RzCore_bin_exports_print(self, bf, state, filter)

    def bin_cur_export_print(self, bf, state):
        return _rizin.RzCore_bin_cur_export_print(self, bf, state)

    def bin_symbols_print(self, bf, state, filter):
        return _rizin.RzCore_bin_symbols_print(self, bf, state, filter)

    def bin_cur_symbol_print(self, bf, state):
        return _rizin.RzCore_bin_cur_symbol_print(self, bf, state)

    def bin_imports_print(self, bf, state, filter):
        return _rizin.RzCore_bin_imports_print(self, bf, state, filter)

    def bin_libs_print(self, bf, state):
        return _rizin.RzCore_bin_libs_print(self, bf, state)

    def bin_main_print(self, bf, state):
        return _rizin.RzCore_bin_main_print(self, bf, state)

    def bin_relocs_print(self, bf, state):
        return _rizin.RzCore_bin_relocs_print(self, bf, state)

    def bin_sections_print(self, bf, state, filter, hashes):
        return _rizin.RzCore_bin_sections_print(self, bf, state, filter, hashes)

    def bin_cur_section_print(self, bf, state, hashes):
        return _rizin.RzCore_bin_cur_section_print(self, bf, state, hashes)

    def bin_cur_segment_print(self, bf, state, hashes):
        return _rizin.RzCore_bin_cur_segment_print(self, bf, state, hashes)

    def bin_segments_print(self, bf, state, filter, hashes):
        return _rizin.RzCore_bin_segments_print(self, bf, state, filter, hashes)

    def bin_strings_print(self, bf, state):
        return _rizin.RzCore_bin_strings_print(self, bf, state)

    def bin_whole_strings(self, bf):
        return _rizin.RzCore_bin_whole_strings(self, bf)

    def bin_whole_strings_print(self, bf, state):
        return _rizin.RzCore_bin_whole_strings_print(self, bf, state)

    def bin_xrefs_strings_print(self, bf, state):
        return _rizin.RzCore_bin_xrefs_strings_print(self, bf, state)

    def file_info_print(self, bf, state):
        return _rizin.RzCore_file_info_print(self, bf, state)

    def bin_info_print(self, bf, state):
        return _rizin.RzCore_bin_info_print(self, bf, state)

    def bin_classes_print(self, bf, state):
        return _rizin.RzCore_bin_classes_print(self, bf, state)

    def bin_class_as_source_print(self, bf, class_name):
        return _rizin.RzCore_bin_class_as_source_print(self, bf, class_name)

    def bin_class_fields_print(self, bf, state, class_name):
        return _rizin.RzCore_bin_class_fields_print(self, bf, state, class_name)

    def bin_class_methods_print(self, bf, state, class_name):
        return _rizin.RzCore_bin_class_methods_print(self, bf, state, class_name)

    def bin_signatures_print(self, bf, state):
        return _rizin.RzCore_bin_signatures_print(self, bf, state)

    def bin_fields_print(self, bf, state):
        return _rizin.RzCore_bin_fields_print(self, bf, state)

    def bin_headers_print(self, bf):
        return _rizin.RzCore_bin_headers_print(self, bf)

    def bin_dwarf_print(self, bf, state):
        return _rizin.RzCore_bin_dwarf_print(self, bf, state)

    def bin_memory_print(self, bf, state):
        return _rizin.RzCore_bin_memory_print(self, bf, state)

    def bin_resources_print(self, bf, state, hashes):
        return _rizin.RzCore_bin_resources_print(self, bf, state, hashes)

    def bin_versions_print(self, bf, state):
        return _rizin.RzCore_bin_versions_print(self, bf, state)

    def bin_trycatch_print(self, bf, state):
        return _rizin.RzCore_bin_trycatch_print(self, bf, state)

    def bin_size_print(self, bf, state):
        return _rizin.RzCore_bin_size_print(self, bf, state)

    def bin_sections_mapping_print(self, bf, state):
        return _rizin.RzCore_bin_sections_mapping_print(self, bf, state)

    def bin_print(self, bf, mask, filter, state, hashes):
        return _rizin.RzCore_bin_print(self, bf, mask, filter, state, hashes)

    def bin_basefind_print(self, pointer_size, state):
        return _rizin.RzCore_bin_basefind_print(self, pointer_size, state)

    def meta_string_add(self, addr, size, encoding, name):
        return _rizin.RzCore_meta_string_add(self, addr, size, encoding, name)

    def meta_pascal_string_add(self, addr, encoding, name):
        return _rizin.RzCore_meta_pascal_string_add(self, addr, encoding, name)

    def print_string_c_cpp(self):
        return _rizin.RzCore_print_string_c_cpp(self)

    def hex_of_assembly(self, assembly):
        return _rizin.RzCore_hex_of_assembly(self, assembly)

    def esil_of_assembly(self, assembly):
        return _rizin.RzCore_esil_of_assembly(self, assembly)

    def assembly_of_hex(self, hex, len):
        return _rizin.RzCore_assembly_of_hex(self, hex, len)

    def esil_of_hex(self, hex, len):
        return _rizin.RzCore_esil_of_hex(self, hex, len)

    def print_hexdump_diff_str(self, aa, ba, len):
        return _rizin.RzCore_print_hexdump_diff_str(self, aa, ba, len)

    def print_dump_str(self, mode, addr, n, len, format):
        return _rizin.RzCore_print_dump_str(self, mode, addr, n, len, format)

    def print_hexdump_or_hexdiff_str(self, mode, addr, len, use_comment):
        return _rizin.RzCore_print_hexdump_or_hexdiff_str(self, mode, addr, len, use_comment)

    def print_hexdump_byline_str(self, hex_offset, addr, len, size):
        return _rizin.RzCore_print_hexdump_byline_str(self, hex_offset, addr, len, size)

    def print_bytes_with_inst(self, buf, addr, len):
        return _rizin.RzCore_print_bytes_with_inst(self, buf, addr, len)

    def print_disasm_strings(self, mode, n_bytes, fcn):
        return _rizin.RzCore_print_disasm_strings(self, mode, n_bytes, fcn)

    def rtr_init(self):
        return _rizin.RzCore_rtr_init(self)

    def rtr_cmds(self, port):
        return _rizin.RzCore_rtr_cmds(self, port)

    def rtr_cmds_query(self, host, port, cmd):
        return _rizin.RzCore_rtr_cmds_query(self, host, port, cmd)

    def rtr_pushout(self, input):
        return _rizin.RzCore_rtr_pushout(self, input)

    def rtr_list(self):
        return _rizin.RzCore_rtr_list(self)

    def rtr_add(self, input):
        return _rizin.RzCore_rtr_add(self, input)

    def rtr_remove(self, input):
        return _rizin.RzCore_rtr_remove(self, input)

    def rtr_session(self, input):
        return _rizin.RzCore_rtr_session(self, input)

    def rtr_cmd(self, input):
        return _rizin.RzCore_rtr_cmd(self, input)

    def rtr_http(self, open_browser):
        return _rizin.RzCore_rtr_http(self, open_browser)

    def rtr_gdb(self, port, file_path, gdb_args, debug_msg):
        return _rizin.RzCore_rtr_gdb(self, port, file_path, gdb_args, debug_msg)

    def search_preludes(self, log):
        return _rizin.RzCore_search_preludes(self, log)

    def search_prelude(self, _from, to, buf, blen, mask, mlen):
        return _rizin.RzCore_search_prelude(self, _from, to, buf, blen, mask, mlen)

    def get_boundaries_raw(self, interval):
        return _rizin.RzCore_get_boundaries_raw(self, interval)

    def get_boundaries_block(self, interval):
        return _rizin.RzCore_get_boundaries_block(self, interval)

    def get_boundaries_current_function(self, interval):
        return _rizin.RzCore_get_boundaries_current_function(self, interval)

    def get_boundaries_current_function_bb(self, interval):
        return _rizin.RzCore_get_boundaries_current_function_bb(self, interval)

    def get_boundaries_current_io_map(self, interval):
        return _rizin.RzCore_get_boundaries_current_io_map(self, interval)

    def get_boundaries_current_bin_section(self, interval):
        return _rizin.RzCore_get_boundaries_current_bin_section(self, interval)

    def get_boundaries_current_bin_segment(self, interval):
        return _rizin.RzCore_get_boundaries_current_bin_segment(self, interval)

    def get_boundaries_io_maps(self, interval, perms, perms_mask):
        return _rizin.RzCore_get_boundaries_io_maps(self, interval, perms, perms_mask)

    def get_boundaries_io_skyline(self, interval, perms, perms_mask):
        return _rizin.RzCore_get_boundaries_io_skyline(self, interval, perms, perms_mask)

    def get_boundaries_bin_segments(self, interval, perms, perms_mask):
        return _rizin.RzCore_get_boundaries_bin_segments(self, interval, perms, perms_mask)

    def get_boundaries_bin_sections(self, interval, perms, perms_mask):
        return _rizin.RzCore_get_boundaries_bin_sections(self, interval, perms, perms_mask)

    def get_boundaries_code_only(self, interval):
        return _rizin.RzCore_get_boundaries_code_only(self, interval)

    def get_boundaries_debug_maps(self, interval, perms, perms_mask, current):
        return _rizin.RzCore_get_boundaries_debug_maps(self, interval, perms, perms_mask, current)

    def get_boundaries_debug_heap(self, interval):
        return _rizin.RzCore_get_boundaries_debug_heap(self, interval)

    def get_boundaries_debug_stack(self, interval):
        return _rizin.RzCore_get_boundaries_debug_stack(self, interval)

    def get_boundaries_debug_program(self, interval):
        return _rizin.RzCore_get_boundaries_debug_program(self, interval)

    def get_boundaries_select(self, from_key, to_key, in_key):
        return _rizin.RzCore_get_boundaries_select(self, from_key, to_key, in_key)

    def hack(self, op):
        return _rizin.RzCore_hack(self, op)

    def dump(self, file, addr, size, append):
        return _rizin.RzCore_dump(self, file, addr, size, append)

    def clippy(self, msg):
        return _rizin.RzCore_clippy(self, msg)

    def cmd_help(self, help):
        return _rizin.RzCore_cmd_help(self, help)

    def help_vars_get(self):
        return _rizin.RzCore_help_vars_get(self)

    def analysis_hasrefs(self, value, mode):
        return _rizin.RzCore_analysis_hasrefs(self, value, mode)

    def analysis_get_comments(self, addr):
        return _rizin.RzCore_analysis_get_comments(self, addr)

    def analysis_get_stats(self, _from, to, step):
        return _rizin.RzCore_analysis_get_stats(self, _from, to, step)

    def syscall_as_string(self, num, addr):
        return _rizin.RzCore_syscall_as_string(self, num, addr)

    def table(self):
        return _rizin.RzCore_table(self)

    def search_value_in_range(self, search_itv, vmin, vmax, vsize, cb, cb_user):
        return _rizin.RzCore_search_value_in_range(self, search_itv, vmin, vmax, vsize, cb, cb_user)

    def cmd_task_new(self, cmd, finished_cb, finished_cb_user):
        return _rizin.RzCore_cmd_task_new(self, cmd, finished_cb, finished_cb_user)

    def function_task_new(self, fcn, fcn_user):
        return _rizin.RzCore_function_task_new(self, fcn, fcn_user)

    def task_print(self, task, mode, j):
        return _rizin.RzCore_task_print(self, task, mode, j)

    def task_list(self, mode):
        return _rizin.RzCore_task_list(self, mode)

    def task_is_cmd(self, id):
        return _rizin.RzCore_task_is_cmd(self, id)

    def task_del_all_done(self):
        return _rizin.RzCore_task_del_all_done(self)

    def analysis_propagate_noreturn(self, addr):
        return _rizin.RzCore_analysis_propagate_noreturn(self, addr)

    def flirt_create_file(self, output_file, written_nodes):
        return _rizin.RzCore_flirt_create_file(self, output_file, written_nodes)

    def flirt_convert_file(self, input_file, ouput_file):
        return _rizin.RzCore_flirt_convert_file(self, input_file, ouput_file)

    def project_load_for_cli(self, file, load_bin_io):
        return _rizin.RzCore_project_load_for_cli(self, file, load_bin_io)

    def reg_assign_sync(self, reg, sync_cb, name, val):
        return _rizin.RzCore_reg_assign_sync(self, reg, sync_cb, name, val)

    def reg_filter_items_sync(self, reg, sync_cb, filter):
        return _rizin.RzCore_reg_filter_items_sync(self, reg, sync_cb, filter)

    def rtr_enable(self, cmdremote):
        return _rizin.RzCore_rtr_enable(self, cmdremote)

    def analysis_var_to_string(self, var):
        return _rizin.RzCore_analysis_var_to_string(self, var)

    def analysis_var_display(self, var, add_name):
        return _rizin.RzCore_analysis_var_display(self, var, add_name)

    def analysis_var_addr(self, var):
        return _rizin.RzCore_analysis_var_addr(self, var)

    def analysis_bytes_il(self, len, num_ops, pretty):
        return _rizin.RzCore_analysis_bytes_il(self, len, num_ops, pretty)

    def disasm_until_ret(self, addr, limit, mode, ret_val, buf):
        return _rizin.RzCore_disasm_until_ret(self, addr, limit, mode, ret_val, buf)

    def setup_io_search_parameters(self, search_opts):
        return _rizin.RzCore_setup_io_search_parameters(self, search_opts)

    def setup_default_search_find_opts(self):
        return _rizin.RzCore_setup_default_search_find_opts(self)

    def search_bytes(self, user_opts, pattern):
        return _rizin.RzCore_search_bytes(self, user_opts, pattern)

    def search_values(self, user_opts, vranges):
        return _rizin.RzCore_search_values(self, user_opts, vranges)

    def search_string(self, user_opts, string, string_len, flags, expected):
        return _rizin.RzCore_search_string(self, user_opts, string, string_len, flags, expected)

    def search_cryptographic_material(self, user_opts, type):
        return _rizin.RzCore_search_cryptographic_material(self, user_opts, type)

    def search_hash(self, user_opts, algo_name, expected_digits, block_size):
        return _rizin.RzCore_search_hash(self, user_opts, algo_name, expected_digits, block_size)

    def search_entropy(self, user_opts, fractional, min_inclusive_limit, max_inclusive_limit, block_size):
        return _rizin.RzCore_search_entropy(self, user_opts, fractional, min_inclusive_limit, max_inclusive_limit, block_size)

    def search_magic(self, user_opts, magic_dir):
        return _rizin.RzCore_search_magic(self, user_opts, magic_dir)

    def register_group(self, cmd, summary):
        help_desc = RzCmdDescHelp()
        help_desc.thisown = False
        help_desc.summary = summary
        self.rcmd.register_swig_command(cmd, None, None, help_desc)

    def register_command(self, cmd, fn):
        import inspect
        params = list(inspect.signature(fn).parameters.values())

        core_arg = None
        if len(params) > 0 and params[0].annotation == RzCore:
            core_arg = params[0].name
            params = params[1:]

        desc_args = Array_RzCmdDescArg(len(params) + 1)
        desc_args.thisown = False
        for i, param in enumerate(params):
            if not param.annotation:
                raise Exception(f"Parameter {param.name} has no annotation")

            desc_arg = RzCmdDescArg()
            desc_arg.name = param.name

            if param.annotation == str:
                desc_arg.type = RZ_CMD_ARG_TYPE_STRING
            elif param.annotation == RzNumArg:
                desc_arg.type = RZ_CMD_ARG_TYPE_RZNUM
            elif param.annotation == int:
                desc_arg.type = RZ_CMD_ARG_TYPE_NUM
            elif param.annotation == RzFilenameArg:
                desc_arg.type = RZ_CMD_ARG_TYPE_FILE
            elif param.annotation == RzFlagItem:
                desc_arg.type = RZ_CMD_ARG_TYPE_FLAG
            elif param.annotation == RzAnalysisFunction:
                desc_arg.type = RZ_CMD_ARG_TYPE_FCN
            else:
                raise Exception(
                    f"Parameter {param.name} has unknown type {param.annotation}"
                )

            desc_arg.thisown = False
            desc_args[i] = desc_arg

        null_arg = RzCmdDescArg()
        null_arg.thisown = False
        desc_args[len(params)] = null_arg

        help_desc = RzCmdDescHelp()
        help_desc.thisown = False
        help_desc.args = desc_args.cast()

        class wrapper(CmdDirector):
            def run(self, core, argc, argv):
                try:
                    args = {}
                    args_array = Array_String.frompointer(argv)
                    if core_arg:
                        args[core_arg] = core
                    for i, param in enumerate(params):
                        orig_arg = args_array[i + 1]
                        arg = orig_arg
                        if param.annotation == RzNumArg:
                            if not core.num.is_valid_input(arg):
                                raise ValueError(f"Could not convert '{orig_arg}' to RzNum value")

                            arg = core.num.math(arg)
                        elif param.annotation == int:
                            try:
                                arg = int(arg)
                            except ValueError:
                                raise ValueError(f"Could not convert '{orig_arg}' to int") from e
                        elif param.annotation == RzFlagItem:
                            arg = core.flags.get(arg)
                            if arg is None:
                                raise ValueError(f"Could not find a flag named '{orig_arg}'")
                        elif param.annotation == RzAnalysisFunction:
                            arg = core.analysis.get_function_byname(arg)
                            if arg is None:
                                raise ValueError(f"Could not find a function named '{orig_arg}'")
                        args[param.name] = arg
                    return fn(**args)
                except Exception as e:
                    print(e)
                    return False

        director = wrapper()
        director.__disown__()
        self.rcmd.register_swig_command(cmd, director, help_desc)


# Register RzCore in _rizin:
_rizin.RzCore_swigregister(RzCore)
class RzCoreFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    core = property(_rizin.RzCoreFile_core_get, _rizin.RzCoreFile_core_set)
    dbg = property(_rizin.RzCoreFile_dbg_get, _rizin.RzCoreFile_dbg_set)
    fd = property(_rizin.RzCoreFile_fd_get, _rizin.RzCoreFile_fd_set)
    binfiles = property(_rizin.RzCoreFile_binfiles_get, _rizin.RzCoreFile_binfiles_set)
    extra_files = property(_rizin.RzCoreFile_extra_files_get, _rizin.RzCoreFile_extra_files_set)
    maps = property(_rizin.RzCoreFile_maps_get, _rizin.RzCoreFile_maps_set)

    def __init__(self):
        _rizin.RzCoreFile_swiginit(self, _rizin.new_RzCoreFile())
    __swig_destroy__ = _rizin.delete_RzCoreFile

# Register RzCoreFile in _rizin:
_rizin.RzCoreFile_swigregister(RzCoreFile)
class RzFlagItem(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzFlagItem_name_get, _rizin.RzFlagItem_name_set)
    realname = property(_rizin.RzFlagItem_realname_get, _rizin.RzFlagItem_realname_set)
    demangled = property(_rizin.RzFlagItem_demangled_get, _rizin.RzFlagItem_demangled_set)
    offset = property(_rizin.RzFlagItem_offset_get, _rizin.RzFlagItem_offset_set)
    size = property(_rizin.RzFlagItem_size_get, _rizin.RzFlagItem_size_set)
    space = property(_rizin.RzFlagItem_space_get, _rizin.RzFlagItem_space_set)
    color = property(_rizin.RzFlagItem_color_get, _rizin.RzFlagItem_color_set)
    comment = property(_rizin.RzFlagItem_comment_get, _rizin.RzFlagItem_comment_set)
    alias = property(_rizin.RzFlagItem_alias_get, _rizin.RzFlagItem_alias_set)

    def set_alias(self, alias):
        return _rizin.RzFlagItem_set_alias(self, alias)

    def free(self):
        return _rizin.RzFlagItem_free(self)

    def set_comment(self, comment):
        return _rizin.RzFlagItem_set_comment(self, comment)

    def set_realname(self, realname):
        return _rizin.RzFlagItem_set_realname(self, realname)

    def set_color(self, color):
        return _rizin.RzFlagItem_set_color(self, color)

    def clone(self):
        return _rizin.RzFlagItem_clone(self)

    def __init__(self):
        _rizin.RzFlagItem_swiginit(self, _rizin.new_RzFlagItem())
    __swig_destroy__ = _rizin.delete_RzFlagItem

# Register RzFlagItem in _rizin:
_rizin.RzFlagItem_swigregister(RzFlagItem)
class RzFlag(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    spaces = property(_rizin.RzFlag_spaces_get, _rizin.RzFlag_spaces_set)
    realnames = property(_rizin.RzFlag_realnames_get, _rizin.RzFlag_realnames_set)
    num = property(_rizin.RzFlag_num_get, _rizin.RzFlag_num_set)
    by_off = property(_rizin.RzFlag_by_off_get, _rizin.RzFlag_by_off_set)
    ht_name = property(_rizin.RzFlag_ht_name_get, _rizin.RzFlag_ht_name_set)
    zones = property(_rizin.RzFlag_zones_get, _rizin.RzFlag_zones_set)

    @staticmethod
    def new():
        return _rizin.RzFlag_new()

    @staticmethod
    def zone_item_free(a):
        return _rizin.RzFlag_zone_item_free(a)

    def bind(self, bnd):
        return _rizin.RzFlag_bind(self, bnd)

    def free(self):
        return _rizin.RzFlag_free(self)

    def exist_at(self, flag_prefix, fp_size, off):
        return _rizin.RzFlag_exist_at(self, flag_prefix, fp_size, off)

    def get(self, name):
        return _rizin.RzFlag_get(self, name)

    def get_i(self, off):
        return _rizin.RzFlag_get_i(self, off)

    def get_by_spaces(self, off):
        return _rizin.RzFlag_get_by_spaces(self, off)

    def get_at(self, off, closest):
        return _rizin.RzFlag_get_at(self, off, closest)

    def get_at_by_spaces(self, closest, off):
        return _rizin.RzFlag_get_at_by_spaces(self, closest, off)

    def all_list(self, by_space):
        return _rizin.RzFlag_all_list(self, by_space)

    def get_list(self, off):
        return _rizin.RzFlag_get_list(self, off)

    def get_liststr(self, off):
        return _rizin.RzFlag_get_liststr(self, off)

    def unset(self, item):
        return _rizin.RzFlag_unset(self, item)

    def unset_name(self, name):
        return _rizin.RzFlag_unset_name(self, name)

    def unset_off(self, addr):
        return _rizin.RzFlag_unset_off(self, addr)

    def unset_all_off(self, off):
        return _rizin.RzFlag_unset_all_off(self, off)

    def unset_all(self):
        return _rizin.RzFlag_unset_all(self)

    def unset_all_in_space(self, space_name):
        return _rizin.RzFlag_unset_all_in_space(self, space_name)

    def set(self, name, addr, size):
        return _rizin.RzFlag_set(self, name, addr, size)

    def set_next(self, name, addr, size):
        return _rizin.RzFlag_set_next(self, name, addr, size)

    def unset_glob(self, name):
        return _rizin.RzFlag_unset_glob(self, name)

    def rename(self, item, name):
        return _rizin.RzFlag_rename(self, item, name)

    def relocate(self, off, off_mask, to):
        return _rizin.RzFlag_relocate(self, off, off_mask, to)

    def move(self, at, to):
        return _rizin.RzFlag_move(self, at, to)

    def count(self, glob):
        return _rizin.RzFlag_count(self, glob)

    def foreach(self, cb, user):
        return _rizin.RzFlag_foreach(self, cb, user)

    def foreach_prefix(self, pfx, pfx_len, cb, user):
        return _rizin.RzFlag_foreach_prefix(self, pfx, pfx_len, cb, user)

    def foreach_range(self, _from, to, cb, user):
        return _rizin.RzFlag_foreach_range(self, _from, to, cb, user)

    def foreach_glob(self, glob, cb, user):
        return _rizin.RzFlag_foreach_glob(self, glob, cb, user)

    def foreach_space(self, space, cb, user):
        return _rizin.RzFlag_foreach_space(self, space, cb, user)

    def foreach_space_glob(self, glob, space, cb, user):
        return _rizin.RzFlag_foreach_space_glob(self, glob, space, cb, user)

    def tags_list(self):
        return _rizin.RzFlag_tags_list(self)

    def tags_set(self, name, words):
        return _rizin.RzFlag_tags_set(self, name, words)

    def tags_reset(self, name):
        return _rizin.RzFlag_tags_reset(self, name)

    def tags_get(self, name):
        return _rizin.RzFlag_tags_get(self, name)

    def zone_add(self, name, addr):
        return _rizin.RzFlag_zone_add(self, name, addr)

    def zone_del(self, name):
        return _rizin.RzFlag_zone_del(self, name)

    def zone_around(self, addr, prev, next):
        return _rizin.RzFlag_zone_around(self, addr, prev, next)

    def zone_reset(self):
        return _rizin.RzFlag_zone_reset(self)

    def zone_barlist(self, _from, bsize, rows):
        return _rizin.RzFlag_zone_barlist(self, _from, bsize, rows)

    def __init__(self):
        _rizin.RzFlag_swiginit(self, _rizin.new_RzFlag())
    __swig_destroy__ = _rizin.delete_RzFlag

# Register RzFlag in _rizin:
_rizin.RzFlag_swigregister(RzFlag)
class RzHash(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    plugins = property(_rizin.RzHash_plugins_get, _rizin.RzHash_plugins_set)

    def __init__(self):
        _rizin.RzHash_swiginit(self, _rizin.new_RzHash())
    __swig_destroy__ = _rizin.delete_RzHash

# Register RzHash in _rizin:
_rizin.RzHash_swigregister(RzHash)
class RzIO(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    desc = property(_rizin.RzIO_desc_get, _rizin.RzIO_desc_set)
    off = property(_rizin.RzIO_off_get, _rizin.RzIO_off_set)
    bits = property(_rizin.RzIO_bits_get, _rizin.RzIO_bits_set)
    va = property(_rizin.RzIO_va_get, _rizin.RzIO_va_set)
    ff = property(_rizin.RzIO_ff_get, _rizin.RzIO_ff_set)
    Oxff = property(_rizin.RzIO_Oxff_get, _rizin.RzIO_Oxff_set)
    addrbytes = property(_rizin.RzIO_addrbytes_get, _rizin.RzIO_addrbytes_set)
    aslr = property(_rizin.RzIO_aslr_get, _rizin.RzIO_aslr_set)
    autofd = property(_rizin.RzIO_autofd_get, _rizin.RzIO_autofd_set)
    cached = property(_rizin.RzIO_cached_get, _rizin.RzIO_cached_set)
    cachemode = property(_rizin.RzIO_cachemode_get, _rizin.RzIO_cachemode_set)
    p_cache = property(_rizin.RzIO_p_cache_get, _rizin.RzIO_p_cache_set)
    map_ids = property(_rizin.RzIO_map_ids_get, _rizin.RzIO_map_ids_set)
    maps = property(_rizin.RzIO_maps_get, _rizin.RzIO_maps_set)
    map_skyline = property(_rizin.RzIO_map_skyline_get, _rizin.RzIO_map_skyline_set)
    files = property(_rizin.RzIO_files_get, _rizin.RzIO_files_set)
    cache = property(_rizin.RzIO_cache_get, _rizin.RzIO_cache_set)
    cache_skyline = property(_rizin.RzIO_cache_skyline_get, _rizin.RzIO_cache_skyline_set)
    write_mask = property(_rizin.RzIO_write_mask_get, _rizin.RzIO_write_mask_set)
    write_mask_len = property(_rizin.RzIO_write_mask_len_get, _rizin.RzIO_write_mask_len_set)
    plugins = property(_rizin.RzIO_plugins_get, _rizin.RzIO_plugins_set)
    runprofile = property(_rizin.RzIO_runprofile_get, _rizin.RzIO_runprofile_set)
    envprofile = property(_rizin.RzIO_envprofile_get, _rizin.RzIO_envprofile_set)
    args = property(_rizin.RzIO_args_get, _rizin.RzIO_args_set)
    event = property(_rizin.RzIO_event_get, _rizin.RzIO_event_set)
    cb_printf = property(_rizin.RzIO_cb_printf_get, _rizin.RzIO_cb_printf_set)
    corebind = property(_rizin.RzIO_corebind_get, _rizin.RzIO_corebind_set)

    def __init__(self):
        _rizin.RzIO_swiginit(self, _rizin.new_RzIO())
    __swig_destroy__ = _rizin.delete_RzIO

# Register RzIO in _rizin:
_rizin.RzIO_swigregister(RzIO)
class RzIODesc(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    fd = property(_rizin.RzIODesc_fd_get, _rizin.RzIODesc_fd_set)
    perm = property(_rizin.RzIODesc_perm_get, _rizin.RzIODesc_perm_set)
    uri = property(_rizin.RzIODesc_uri_get, _rizin.RzIODesc_uri_set)
    name = property(_rizin.RzIODesc_name_get, _rizin.RzIODesc_name_set)
    referer = property(_rizin.RzIODesc_referer_get, _rizin.RzIODesc_referer_set)
    cache = property(_rizin.RzIODesc_cache_get, _rizin.RzIODesc_cache_set)
    data = property(_rizin.RzIODesc_data_get, _rizin.RzIODesc_data_set)
    plugin = property(_rizin.RzIODesc_plugin_get, _rizin.RzIODesc_plugin_set)
    io = property(_rizin.RzIODesc_io_get, _rizin.RzIODesc_io_set)

    def __init__(self):
        _rizin.RzIODesc_swiginit(self, _rizin.new_RzIODesc())
    __swig_destroy__ = _rizin.delete_RzIODesc

# Register RzIODesc in _rizin:
_rizin.RzIODesc_swigregister(RzIODesc)
class RzIOPlugin(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_rizin.RzIOPlugin_name_get, _rizin.RzIOPlugin_name_set)
    desc = property(_rizin.RzIOPlugin_desc_get, _rizin.RzIOPlugin_desc_set)
    version = property(_rizin.RzIOPlugin_version_get, _rizin.RzIOPlugin_version_set)
    author = property(_rizin.RzIOPlugin_author_get, _rizin.RzIOPlugin_author_set)
    license = property(_rizin.RzIOPlugin_license_get, _rizin.RzIOPlugin_license_set)
    widget = property(_rizin.RzIOPlugin_widget_get, _rizin.RzIOPlugin_widget_set)
    uris = property(_rizin.RzIOPlugin_uris_get, _rizin.RzIOPlugin_uris_set)
    listener = property(_rizin.RzIOPlugin_listener_get, _rizin.RzIOPlugin_listener_set)
    init = property(_rizin.RzIOPlugin_init_get, _rizin.RzIOPlugin_init_set)
    isdbg = property(_rizin.RzIOPlugin_isdbg_get, _rizin.RzIOPlugin_isdbg_set)
    system = property(_rizin.RzIOPlugin_system_get, _rizin.RzIOPlugin_system_set)
    open = property(_rizin.RzIOPlugin_open_get, _rizin.RzIOPlugin_open_set)
    open_many = property(_rizin.RzIOPlugin_open_many_get, _rizin.RzIOPlugin_open_many_set)
    read = property(_rizin.RzIOPlugin_read_get, _rizin.RzIOPlugin_read_set)
    lseek = property(_rizin.RzIOPlugin_lseek_get, _rizin.RzIOPlugin_lseek_set)
    write = property(_rizin.RzIOPlugin_write_get, _rizin.RzIOPlugin_write_set)
    close = property(_rizin.RzIOPlugin_close_get, _rizin.RzIOPlugin_close_set)
    is_blockdevice = property(_rizin.RzIOPlugin_is_blockdevice_get, _rizin.RzIOPlugin_is_blockdevice_set)
    is_chardevice = property(_rizin.RzIOPlugin_is_chardevice_get, _rizin.RzIOPlugin_is_chardevice_set)
    getpid = property(_rizin.RzIOPlugin_getpid_get, _rizin.RzIOPlugin_getpid_set)
    gettid = property(_rizin.RzIOPlugin_gettid_get, _rizin.RzIOPlugin_gettid_set)
    getbase = property(_rizin.RzIOPlugin_getbase_get, _rizin.RzIOPlugin_getbase_set)
    resize = property(_rizin.RzIOPlugin_resize_get, _rizin.RzIOPlugin_resize_set)
    accept = property(_rizin.RzIOPlugin_accept_get, _rizin.RzIOPlugin_accept_set)
    create = property(_rizin.RzIOPlugin_create_get, _rizin.RzIOPlugin_create_set)
    check = property(_rizin.RzIOPlugin_check_get, _rizin.RzIOPlugin_check_set)
    get_buf = property(_rizin.RzIOPlugin_get_buf_get, _rizin.RzIOPlugin_get_buf_set)

    def __init__(self):
        _rizin.RzIOPlugin_swiginit(self, _rizin.new_RzIOPlugin())
    __swig_destroy__ = _rizin.delete_RzIOPlugin

# Register RzIOPlugin in _rizin:
_rizin.RzIOPlugin_swigregister(RzIOPlugin)
class RzNum(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    callback = property(_rizin.RzNum_callback_get, _rizin.RzNum_callback_set)
    cb_from_value = property(_rizin.RzNum_cb_from_value_get, _rizin.RzNum_cb_from_value_set)
    value = property(_rizin.RzNum_value_get, _rizin.RzNum_value_set)
    fvalue = property(_rizin.RzNum_fvalue_get, _rizin.RzNum_fvalue_set)
    userptr = property(_rizin.RzNum_userptr_get, _rizin.RzNum_userptr_set)
    dbz = property(_rizin.RzNum_dbz_get, _rizin.RzNum_dbz_set)
    nc = property(_rizin.RzNum_nc_get, _rizin.RzNum_nc_set)

    @staticmethod
    def new(cb, cb2, ptr):
        return _rizin.RzNum_new(cb, cb2, ptr)

    @staticmethod
    def units(buf, len, number):
        return _rizin.RzNum_units(buf, len, number)

    @staticmethod
    def minmax_swap(a, b):
        return _rizin.RzNum_minmax_swap(a, b)

    @staticmethod
    def minmax_swap_i(a, b):
        return _rizin.RzNum_minmax_swap_i(a, b)

    @staticmethod
    def to_bits(out, num):
        return _rizin.RzNum_to_bits(out, num)

    @staticmethod
    def to_trits(out, num):
        return _rizin.RzNum_to_trits(out, num)

    @staticmethod
    def rand32(max):
        return _rizin.RzNum_rand32(max)

    @staticmethod
    def rand64(max):
        return _rizin.RzNum_rand64(max)

    @staticmethod
    def irand():
        return _rizin.RzNum_irand()

    @staticmethod
    def str_len(str):
        return _rizin.RzNum_str_len(str)

    @staticmethod
    def str_split(str):
        return _rizin.RzNum_str_split(str)

    @staticmethod
    def str_split_list(str):
        return _rizin.RzNum_str_split_list(str)

    @staticmethod
    def dup(n):
        return _rizin.RzNum_dup(n)

    @staticmethod
    def is_hex_prefix(p):
        return _rizin.RzNum_is_hex_prefix(p)

    def free(self):
        return _rizin.RzNum_free(self)

    def conditional(self, str):
        return _rizin.RzNum_conditional(self, str)

    def calc(self, str, err):
        return _rizin.RzNum_calc(self, str, err)

    def calc_index(self, p):
        return _rizin.RzNum_calc_index(self, p)

    def is_valid_input(self, input_value):
        return _rizin.RzNum_is_valid_input(self, input_value)

    def get_input_value(self, input_value):
        return _rizin.RzNum_get_input_value(self, input_value)

    def as_string(self, n, printable_only):
        return _rizin.RzNum_as_string(self, n, printable_only)

    def tail(self, addr, hex):
        return _rizin.RzNum_tail(self, addr, hex)

    def tail_base(self, addr, off):
        return _rizin.RzNum_tail_base(self, addr, off)

    def math(self, str):
        return _rizin.RzNum_math(self, str)

    def get(self, str):
        return _rizin.RzNum_get(self, str)

    def between(self, input_value):
        return _rizin.RzNum_between(self, input_value)

    def base_of_string(self, str):
        return _rizin.RzNum_base_of_string(self, str)

    def get_float(self, str):
        return _rizin.RzNum_get_float(self, str)

    def __init__(self):
        _rizin.RzNum_swiginit(self, _rizin.new_RzNum())
    __swig_destroy__ = _rizin.delete_RzNum

# Register RzNum in _rizin:
_rizin.RzNum_swigregister(RzNum)
class RzReg(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    profile = property(_rizin.RzReg_profile_get, _rizin.RzReg_profile_set)
    reg_profile_cmt = property(_rizin.RzReg_reg_profile_cmt_get, _rizin.RzReg_reg_profile_cmt_set)
    reg_profile_str = property(_rizin.RzReg_reg_profile_str_get, _rizin.RzReg_reg_profile_str_set)
    reg_profile = property(_rizin.RzReg_reg_profile_get, _rizin.RzReg_reg_profile_set)
    name = property(_rizin.RzReg_name_get, _rizin.RzReg_name_set)
    _regset = property(_rizin.RzReg__regset_get, _rizin.RzReg__regset_set)
    allregs = property(_rizin.RzReg_allregs_get, _rizin.RzReg_allregs_set)
    roregs = property(_rizin.RzReg_roregs_get, _rizin.RzReg_roregs_set)
    iters = property(_rizin.RzReg_iters_get, _rizin.RzReg_iters_set)
    arch = property(_rizin.RzReg_arch_get, _rizin.RzReg_arch_set)
    bits = property(_rizin.RzReg_bits_get, _rizin.RzReg_bits_set)
    size = property(_rizin.RzReg_size_get, _rizin.RzReg_size_set)
    is_thumb = property(_rizin.RzReg_is_thumb_get, _rizin.RzReg_is_thumb_set)
    big_endian = property(_rizin.RzReg_big_endian_get, _rizin.RzReg_big_endian_set)

    @staticmethod
    def new():
        return _rizin.RzReg_new()

    @staticmethod
    def parse_gdb_profile(profile):
        return _rizin.RzReg_parse_gdb_profile(profile)

    @staticmethod
    def get_type(idx):
        return _rizin.RzReg_get_type(idx)

    @staticmethod
    def get_role(role):
        return _rizin.RzReg_get_role(role)

    @staticmethod
    def role_by_name(str):
        return _rizin.RzReg_role_by_name(str)

    @staticmethod
    def item_free(item):
        return _rizin.RzReg_item_free(item)

    @staticmethod
    def type_by_name(str):
        return _rizin.RzReg_type_by_name(str)

    @staticmethod
    def get_name_idx(type):
        return _rizin.RzReg_get_name_idx(type)

    @staticmethod
    def arena_new(size):
        return _rizin.RzReg_arena_new(size)

    @staticmethod
    def arena_free(ra):
        return _rizin.RzReg_arena_free(ra)

    @staticmethod
    def cond_to_string(n):
        return _rizin.RzReg_cond_to_string(n)

    @staticmethod
    def cond_from_string(str):
        return _rizin.RzReg_cond_from_string(str)

    @staticmethod
    def filter_items_covered(regs):
        return _rizin.RzReg_filter_items_covered(regs)

    def convert_32_to_64(self, rreg32):
        return _rizin.RzReg_convert_32_to_64(self, rreg32)

    def convert_64_to_32(self, rreg64):
        return _rizin.RzReg_convert_64_to_32(self, rreg64)

    def free(self):
        return _rizin.RzReg_free(self)

    def free_internal(self, init):
        return _rizin.RzReg_free_internal(self, init)

    def set_name(self, role, name):
        return _rizin.RzReg_set_name(self, role, name)

    def set_profile_string(self, profile):
        return _rizin.RzReg_set_profile_string(self, profile)

    def profile_to_cc(self):
        return _rizin.RzReg_profile_to_cc(self)

    def set_reg_profile(self):
        return _rizin.RzReg_set_reg_profile(self)

    def set_profile(self, profile):
        return _rizin.RzReg_set_profile(self, profile)

    def is_readonly(self, item):
        return _rizin.RzReg_is_readonly(self, item)

    def regset_get(self, type):
        return _rizin.RzReg_regset_get(self, type)

    def getv(self, name):
        return _rizin.RzReg_getv(self, name)

    def getv_by_role_or_name(self, name):
        return _rizin.RzReg_getv_by_role_or_name(self, name)

    def setv(self, name, val):
        return _rizin.RzReg_setv(self, name, val)

    def is_role(self, name, id):
        return _rizin.RzReg_is_role(self, name, id)

    def get_name_by_type(self, name):
        return _rizin.RzReg_get_name_by_type(self, name)

    def get_name(self, kind):
        return _rizin.RzReg_get_name(self, kind)

    def get_by_role(self, role):
        return _rizin.RzReg_get_by_role(self, role)

    def get(self, name, type):
        return _rizin.RzReg_get(self, name, type)

    def get_by_role_or_name(self, name):
        return _rizin.RzReg_get_by_role_or_name(self, name)

    def get_list(self, type):
        return _rizin.RzReg_get_list(self, type)

    def get_at(self, type, regsize, delta):
        return _rizin.RzReg_get_at(self, type, regsize, delta)

    def next_diff(self, type, buf, buflen, prev_ri, regsize):
        return _rizin.RzReg_next_diff(self, type, buf, buflen, prev_ri, regsize)

    def reindex(self):
        return _rizin.RzReg_reindex(self)

    def index_get(self, idx):
        return _rizin.RzReg_index_get(self, idx)

    def cond_get(self, name):
        return _rizin.RzReg_cond_get(self, name)

    def cond_apply(self, f):
        return _rizin.RzReg_cond_apply(self, f)

    def cond_set(self, name, val):
        return _rizin.RzReg_cond_set(self, name, val)

    def cond_get_value(self, name):
        return _rizin.RzReg_cond_get_value(self, name)

    def cond_bits_set(self, type, f, v):
        return _rizin.RzReg_cond_bits_set(self, type, f, v)

    def cond_bits(self, type, f):
        return _rizin.RzReg_cond_bits(self, type, f)

    def cond_retrieve(self, f):
        return _rizin.RzReg_cond_retrieve(self, f)

    def cond(self, type):
        return _rizin.RzReg_cond(self, type)

    def get_bv(self, item):
        return _rizin.RzReg_get_bv(self, item)

    def set_bv(self, item, bv):
        return _rizin.RzReg_set_bv(self, item, bv)

    def get_value(self, item):
        return _rizin.RzReg_get_value(self, item)

    def set_value(self, item, value):
        return _rizin.RzReg_set_value(self, item, value)

    def get_value_by_role(self, role):
        return _rizin.RzReg_get_value_by_role(self, role)

    def set_value_by_role(self, role, value):
        return _rizin.RzReg_set_value_by_role(self, role, value)

    def get_bytes(self, type, size):
        return _rizin.RzReg_get_bytes(self, type, size)

    def set_bytes(self, type, buf):
        return _rizin.RzReg_set_bytes(self, type, buf)

    def read_regs(self, buf):
        return _rizin.RzReg_read_regs(self, buf)

    def arena_set_bytes(self, str):
        return _rizin.RzReg_arena_set_bytes(self, str)

    def fit_arena(self):
        return _rizin.RzReg_fit_arena(self)

    def arena_swap(self, copy):
        return _rizin.RzReg_arena_swap(self, copy)

    def arena_push(self):
        return _rizin.RzReg_arena_push(self)

    def arena_pop(self):
        return _rizin.RzReg_arena_pop(self)

    def arena_zero(self, type):
        return _rizin.RzReg_arena_zero(self, type)

    def arena_peek(self):
        return _rizin.RzReg_arena_peek(self)

    def arena_poke(self, buf):
        return _rizin.RzReg_arena_poke(self, buf)

    def arena_dup(self, source):
        return _rizin.RzReg_arena_dup(self, source)

    def arena_shrink(self):
        return _rizin.RzReg_arena_shrink(self)

    def __init__(self):
        _rizin.RzReg_swiginit(self, _rizin.new_RzReg())
    __swig_destroy__ = _rizin.delete_RzReg

# Register RzReg in _rizin:
_rizin.RzReg_swigregister(RzReg)
class RzType(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    _kind = property(_rizin.RzType__kind_get, _rizin.RzType__kind_set)

    @staticmethod
    def db_new():
        return _rizin.RzType_db_new()

    @staticmethod
    def db_free(typedb):
        return _rizin.RzType_db_free(typedb)

    @staticmethod
    def db_load_sdb(typedb, path):
        return _rizin.RzType_db_load_sdb(typedb, path)

    @staticmethod
    def db_load_sdb_str(typedb, str):
        return _rizin.RzType_db_load_sdb_str(typedb, str)

    @staticmethod
    def db_load_callables_sdb(typedb, path):
        return _rizin.RzType_db_load_callables_sdb(typedb, path)

    @staticmethod
    def db_load_callables_sdb_str(typedb, str):
        return _rizin.RzType_db_load_callables_sdb_str(typedb, str)

    @staticmethod
    def db_set_bits(typedb, bits):
        return _rizin.RzType_db_set_bits(typedb, bits)

    @staticmethod
    def db_set_address_bits(typedb, addr_bits):
        return _rizin.RzType_db_set_address_bits(typedb, addr_bits)

    @staticmethod
    def db_set_os(typedb, os):
        return _rizin.RzType_db_set_os(typedb, os)

    @staticmethod
    def db_set_cpu(typedb, cpu):
        return _rizin.RzType_db_set_cpu(typedb, cpu)

    @staticmethod
    def db_set_endian(typedb, big_endian):
        return _rizin.RzType_db_set_endian(typedb, big_endian)

    @staticmethod
    def db_pointer_size(typedb):
        return _rizin.RzType_db_pointer_size(typedb)

    @staticmethod
    def db_del(typedb, name):
        return _rizin.RzType_db_del(typedb, name)

    @staticmethod
    def db_init(typedb, dir_prefix, arch, bits, os):
        return _rizin.RzType_db_init(typedb, dir_prefix, arch, bits, os)

    @staticmethod
    def db_reload(typedb, dir_prefix):
        return _rizin.RzType_db_reload(typedb, dir_prefix)

    @staticmethod
    def db_purge(typedb):
        return _rizin.RzType_db_purge(typedb)

    @staticmethod
    def base_type_free(type):
        return _rizin.RzType_base_type_free(type)

    @staticmethod
    def base_type_new(kind):
        return _rizin.RzType_base_type_new(kind)

    @staticmethod
    def base_type_kind_as_string(kind):
        return _rizin.RzType_base_type_kind_as_string(kind)

    @staticmethod
    def base_enum_case_free(e, user):
        return _rizin.RzType_base_enum_case_free(e, user)

    @staticmethod
    def base_struct_member_free(e, user):
        return _rizin.RzType_base_struct_member_free(e, user)

    @staticmethod
    def base_union_member_free(e, user):
        return _rizin.RzType_base_union_member_free(e, user)

    @staticmethod
    def db_get_base_type(typedb, name):
        return _rizin.RzType_db_get_base_type(typedb, name)

    @staticmethod
    def db_get_compound_type(typedb, name):
        return _rizin.RzType_db_get_compound_type(typedb, name)

    @staticmethod
    def db_save_base_type(typedb, type):
        return _rizin.RzType_db_save_base_type(typedb, type)

    @staticmethod
    def db_update_base_type(typedb, type):
        return _rizin.RzType_db_update_base_type(typedb, type)

    @staticmethod
    def db_delete_base_type(typedb, type):
        return _rizin.RzType_db_delete_base_type(typedb, type)

    @staticmethod
    def db_get_base_types_of_kind(typedb, kind):
        return _rizin.RzType_db_get_base_types_of_kind(typedb, kind)

    @staticmethod
    def db_get_base_types(typedb):
        return _rizin.RzType_db_get_base_types(typedb)

    @staticmethod
    def db_base_type_as_string(typedb, btype):
        return _rizin.RzType_db_base_type_as_string(typedb, btype)

    @staticmethod
    def db_base_type_as_pretty_string(typedb, btype, opts, unfold_level):
        return _rizin.RzType_db_base_type_as_pretty_string(typedb, btype, opts, unfold_level)

    @staticmethod
    def db_edit_base_type(typedb, name, typestr):
        return _rizin.RzType_db_edit_base_type(typedb, name, typestr)

    @staticmethod
    def db_base_type_unwrap_typedef(typedb, btype):
        return _rizin.RzType_db_base_type_unwrap_typedef(typedb, btype)

    @staticmethod
    def as_string(typedb, type):
        return _rizin.RzType_as_string(typedb, type)

    @staticmethod
    def declaration_as_string(typedb, type):
        return _rizin.RzType_declaration_as_string(typedb, type)

    @staticmethod
    def identifier_declaration_as_string(typedb, type, identifier):
        return _rizin.RzType_identifier_declaration_as_string(typedb, type, identifier)

    @staticmethod
    def as_pretty_string(typedb, type, identifier, opts, unfold_level):
        return _rizin.RzType_as_pretty_string(typedb, type, identifier, opts, unfold_level)

    @staticmethod
    def exists(typedb, name):
        return _rizin.RzType_exists(typedb, name)

    @staticmethod
    def kind(typedb, name):
        return _rizin.RzType_kind(typedb, name)

    @staticmethod
    def typeclass_as_string(typeclass):
        return _rizin.RzType_typeclass_as_string(typeclass)

    @staticmethod
    def typeclass_from_string(typeclass):
        return _rizin.RzType_typeclass_from_string(typeclass)

    @staticmethod
    def typeclass(typedb, type):
        return _rizin.RzType_typeclass(typedb, type)

    @staticmethod
    def is_num(typedb, type):
        return _rizin.RzType_is_num(typedb, type)

    @staticmethod
    def is_integral(typedb, type):
        return _rizin.RzType_is_integral(typedb, type)

    @staticmethod
    def is_floating(typedb, type):
        return _rizin.RzType_is_floating(typedb, type)

    @staticmethod
    def is_integral_signed(typedb, type):
        return _rizin.RzType_is_integral_signed(typedb, type)

    @staticmethod
    def is_integral_unsigned(typedb, type):
        return _rizin.RzType_is_integral_unsigned(typedb, type)

    @staticmethod
    def typeclass_get_all(typedb, typeclass):
        return _rizin.RzType_typeclass_get_all(typedb, typeclass)

    @staticmethod
    def typeclass_get_all_sized(typedb, typeclass, size):
        return _rizin.RzType_typeclass_get_all_sized(typedb, typeclass, size)

    @staticmethod
    def typeclass_get_default_sized(typedb, typeclass, size):
        return _rizin.RzType_typeclass_get_default_sized(typedb, typeclass, size)

    @staticmethod
    def path_free(tpath):
        return _rizin.RzType_path_free(tpath)

    @staticmethod
    def offset_by_path(typedb, path):
        return _rizin.RzType_offset_by_path(typedb, path)

    @staticmethod
    def path_by_offset(typedb, type, offset, max_depth):
        return _rizin.RzType_path_by_offset(typedb, type, offset, max_depth)

    @staticmethod
    def db_get_by_offset(typedb, offset):
        return _rizin.RzType_db_get_by_offset(typedb, offset)

    @staticmethod
    def db_struct_member_packed_offset(typedb, name, member):
        return _rizin.RzType_db_struct_member_packed_offset(typedb, name, member)

    @staticmethod
    def db_struct_member_offset(typedb, name, member):
        return _rizin.RzType_db_struct_member_offset(typedb, name, member)

    @staticmethod
    def parser_new():
        return _rizin.RzType_parser_new()

    @staticmethod
    def parser_init(types, callables):
        return _rizin.RzType_parser_init(types, callables)

    @staticmethod
    def parser_free(parser):
        return _rizin.RzType_parser_free(parser)

    @staticmethod
    def parser_free_purge(parser):
        return _rizin.RzType_parser_free_purge(parser)

    @staticmethod
    def parse_string_stateless(parser, code, error_msg):
        return _rizin.RzType_parse_string_stateless(parser, code, error_msg)

    @staticmethod
    def parse_file_stateless(parser, path, dir, error_msg):
        return _rizin.RzType_parse_file_stateless(parser, path, dir, error_msg)

    @staticmethod
    def parse_string_single(parser, code, error_msg):
        return _rizin.RzType_parse_string_single(parser, code, error_msg)

    @staticmethod
    def parse_string_declaration_single(parser, code, error_msg):
        return _rizin.RzType_parse_string_declaration_single(parser, code, error_msg)

    @staticmethod
    def parse_string(typedb, code, error_msg):
        return _rizin.RzType_parse_string(typedb, code, error_msg)

    @staticmethod
    def parse_file(typedb, path, dir, error_msg):
        return _rizin.RzType_parse_file(typedb, path, dir, error_msg)

    @staticmethod
    def parse_reset(typedb):
        return _rizin.RzType_parse_reset(typedb)

    @staticmethod
    def db_get_enum(typedb, name):
        return _rizin.RzType_db_get_enum(typedb, name)

    @staticmethod
    def db_get_union(typedb, name):
        return _rizin.RzType_db_get_union(typedb, name)

    @staticmethod
    def db_get_struct(typedb, name):
        return _rizin.RzType_db_get_struct(typedb, name)

    @staticmethod
    def db_get_typedef(typedb, name):
        return _rizin.RzType_db_get_typedef(typedb, name)

    @staticmethod
    def db_enum_member_by_name(typedb, name, member):
        return _rizin.RzType_db_enum_member_by_name(typedb, name, member)

    @staticmethod
    def db_enum_member_by_val(typedb, name, val):
        return _rizin.RzType_db_enum_member_by_val(typedb, name, val)

    @staticmethod
    def db_find_enums_by_val(typedb, val):
        return _rizin.RzType_db_find_enums_by_val(typedb, val)

    @staticmethod
    def db_enum_get_bitfield(typedb, name, val):
        return _rizin.RzType_db_enum_get_bitfield(typedb, name, val)

    @staticmethod
    def db_base_get_bitsize(typedb, btype):
        return _rizin.RzType_db_base_get_bitsize(typedb, btype)

    @staticmethod
    def db_get_bitsize(typedb, type):
        return _rizin.RzType_db_get_bitsize(typedb, type)

    @staticmethod
    def atomic_eq(typedb, typ1, typ2):
        return _rizin.RzType_atomic_eq(typedb, typ1, typ2)

    @staticmethod
    def atomic_str_eq(typedb, typ1, name):
        return _rizin.RzType_atomic_str_eq(typedb, typ1, name)

    @staticmethod
    def atomic_is_void(typedb, type):
        return _rizin.RzType_atomic_is_void(typedb, type)

    @staticmethod
    def atomic_is_const(typedb, type):
        return _rizin.RzType_atomic_is_const(typedb, type)

    @staticmethod
    def integral_set_sign(typedb, type, sign):
        return _rizin.RzType_integral_set_sign(typedb, type, sign)

    @staticmethod
    def is_strictly_atomic(typedb, type):
        return _rizin.RzType_is_strictly_atomic(typedb, type)

    @staticmethod
    def is_atomic(typedb, type):
        return _rizin.RzType_is_atomic(typedb, type)

    @staticmethod
    def is_default(typedb, type):
        return _rizin.RzType_is_default(typedb, type)

    @staticmethod
    def new_default(typedb):
        return _rizin.RzType_new_default(typedb)

    @staticmethod
    def identifier_of_base_type(typedb, btype, is_const):
        return _rizin.RzType_identifier_of_base_type(typedb, btype, is_const)

    @staticmethod
    def identifier_of_base_type_str(typedb, name):
        return _rizin.RzType_identifier_of_base_type_str(typedb, name)

    @staticmethod
    def pointer_of_base_type(typedb, btype, is_const):
        return _rizin.RzType_pointer_of_base_type(typedb, btype, is_const)

    @staticmethod
    def pointer_of_base_type_str(typedb, name, is_const):
        return _rizin.RzType_pointer_of_base_type_str(typedb, name, is_const)

    @staticmethod
    def pointer_of_type(typedb, type, is_const):
        return _rizin.RzType_pointer_of_type(typedb, type, is_const)

    @staticmethod
    def array_of_base_type(typedb, btype, count):
        return _rizin.RzType_array_of_base_type(typedb, btype, count)

    @staticmethod
    def array_of_base_type_str(typedb, name, count):
        return _rizin.RzType_array_of_base_type_str(typedb, name, count)

    @staticmethod
    def array_of_type(typedb, type, count):
        return _rizin.RzType_array_of_type(typedb, type, count)

    @staticmethod
    def callable(callable_arg):
        return _rizin.RzType_callable(callable_arg)

    @staticmethod
    def get_base_type(typedb, type):
        return _rizin.RzType_get_base_type(typedb, type)

    @staticmethod
    def db_format_get(typedb, name):
        return _rizin.RzType_db_format_get(typedb, name)

    @staticmethod
    def db_format_set(typedb, name, fmt):
        return _rizin.RzType_db_format_set(typedb, name, fmt)

    @staticmethod
    def db_format_all(typedb):
        return _rizin.RzType_db_format_all(typedb)

    @staticmethod
    def db_format_delete(typedb, name):
        return _rizin.RzType_db_format_delete(typedb, name)

    @staticmethod
    def db_format_purge(typedb):
        return _rizin.RzType_db_format_purge(typedb)

    @staticmethod
    def format(typedb, type):
        return _rizin.RzType_format(typedb, type)

    @staticmethod
    def format_struct_size(typedb, f, mode, n):
        return _rizin.RzType_format_struct_size(typedb, f, mode, n)

    @staticmethod
    def format_data(t, p, seek, b, len, formatname, mode, setval, ofield):
        return _rizin.RzType_format_data(t, p, seek, b, len, formatname, mode, setval, ofield)

    @staticmethod
    def as_format(typedb, type):
        return _rizin.RzType_as_format(typedb, type)

    @staticmethod
    def as_format_pair(typedb, type):
        return _rizin.RzType_as_format_pair(typedb, type)

    @staticmethod
    def callable_new(name):
        return _rizin.RzType_callable_new(name)

    @staticmethod
    def callable_clone(callable):
        return _rizin.RzType_callable_clone(callable)

    @staticmethod
    def callable_free(callable):
        return _rizin.RzType_callable_free(callable)

    @staticmethod
    def callable_arg_new(typedb, name, type):
        return _rizin.RzType_callable_arg_new(typedb, name, type)

    @staticmethod
    def callable_arg_clone(arg):
        return _rizin.RzType_callable_arg_clone(arg)

    @staticmethod
    def callable_arg_free(arg):
        return _rizin.RzType_callable_arg_free(arg)

    @staticmethod
    def callable_arg_add(callable, arg):
        return _rizin.RzType_callable_arg_add(callable, arg)

    @staticmethod
    def func_new(typedb, name, type):
        return _rizin.RzType_func_new(typedb, name, type)

    @staticmethod
    def func_save(typedb, callable):
        return _rizin.RzType_func_save(typedb, callable)

    @staticmethod
    def func_update(typedb, callable):
        return _rizin.RzType_func_update(typedb, callable)

    @staticmethod
    def func_get(typedb, func_name):
        return _rizin.RzType_func_get(typedb, func_name)

    @staticmethod
    def func_delete(typedb, func_name):
        return _rizin.RzType_func_delete(typedb, func_name)

    @staticmethod
    def func_delete_all(typedb):
        return _rizin.RzType_func_delete_all(typedb)

    @staticmethod
    def func_exist(typedb, func_name):
        return _rizin.RzType_func_exist(typedb, func_name)

    @staticmethod
    def func_ret(typedb, func_name):
        return _rizin.RzType_func_ret(typedb, func_name)

    @staticmethod
    def func_ret_set(typedb, func_name, type):
        return _rizin.RzType_func_ret_set(typedb, func_name, type)

    @staticmethod
    def func_cc(typedb, func_name):
        return _rizin.RzType_func_cc(typedb, func_name)

    @staticmethod
    def func_cc_set(typedb, name, cc):
        return _rizin.RzType_func_cc_set(typedb, name, cc)

    @staticmethod
    def func_args_count(typedb, func_name):
        return _rizin.RzType_func_args_count(typedb, func_name)

    @staticmethod
    def func_args_type(typedb, func_name, i):
        return _rizin.RzType_func_args_type(typedb, func_name, i)

    @staticmethod
    def func_args_name(typedb, func_name, i):
        return _rizin.RzType_func_args_name(typedb, func_name, i)

    @staticmethod
    def func_arg_add(typedb, func_name, arg_name, arg_type):
        return _rizin.RzType_func_arg_add(typedb, func_name, arg_name, arg_type)

    @staticmethod
    def callable_as_string(typedb, callable):
        return _rizin.RzType_callable_as_string(typedb, callable)

    @staticmethod
    def callable_ptr_as_string(typedb, type):
        return _rizin.RzType_callable_ptr_as_string(typedb, type)

    @staticmethod
    def func_is_noreturn(typedb, name):
        return _rizin.RzType_func_is_noreturn(typedb, name)

    @staticmethod
    def func_noreturn_add(typedb, name):
        return _rizin.RzType_func_noreturn_add(typedb, name)

    @staticmethod
    def func_noreturn_drop(typedb, name):
        return _rizin.RzType_func_noreturn_drop(typedb, name)

    @staticmethod
    def function_names(typedb):
        return _rizin.RzType_function_names(typedb)

    @staticmethod
    def noreturn_function_names(typedb):
        return _rizin.RzType_noreturn_function_names(typedb)

    @staticmethod
    def db_enum_names(typedb):
        return _rizin.RzType_db_enum_names(typedb)

    @staticmethod
    def db_struct_names(typedb):
        return _rizin.RzType_db_struct_names(typedb)

    @staticmethod
    def db_union_names(typedb):
        return _rizin.RzType_db_union_names(typedb)

    @staticmethod
    def db_typedef_names(typedb):
        return _rizin.RzType_db_typedef_names(typedb)

    @staticmethod
    def db_all(typedb):
        return _rizin.RzType_db_all(typedb)

    @staticmethod
    def cond_tostring(cc):
        return _rizin.RzType_cond_tostring(cc)

    @staticmethod
    def cond_invert(cond):
        return _rizin.RzType_cond_invert(cond)

    @staticmethod
    def cond_eval(cond, arg0, arg1):
        return _rizin.RzType_cond_eval(cond, arg0, arg1)

    @staticmethod
    def cond_eval_single(cond, arg0):
        return _rizin.RzType_cond_eval_single(cond, arg0)

    def clone(self):
        return _rizin.RzType_clone(self)

    def identifier(self):
        return _rizin.RzType_identifier(self)

    def free(self):
        return _rizin.RzType_free(self)

    def path_new(self, path):
        return _rizin.RzType_path_new(self, path)

    def is_void_ptr(self):
        return _rizin.RzType_is_void_ptr(self)

    def is_void_ptr_nested(self):
        return _rizin.RzType_is_void_ptr_nested(self)

    def is_char_ptr(self):
        return _rizin.RzType_is_char_ptr(self)

    def is_char_ptr_nested(self):
        return _rizin.RzType_is_char_ptr_nested(self)

    def is_identifier(self):
        return _rizin.RzType_is_identifier(self)

    def is_callable(self):
        return _rizin.RzType_is_callable(self)

    def is_callable_ptr(self):
        return _rizin.RzType_is_callable_ptr(self)

    def is_callable_ptr_nested(self):
        return _rizin.RzType_is_callable_ptr_nested(self)

    def __init__(self):
        _rizin.RzType_swiginit(self, _rizin.new_RzType())
    __swig_destroy__ = _rizin.delete_RzType

# Register RzType in _rizin:
_rizin.RzType_swigregister(RzType)
class Sdb(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    dir = property(_rizin.Sdb_dir_get, _rizin.Sdb_dir_set)
    path = property(_rizin.Sdb_path_get, _rizin.Sdb_path_set)
    name = property(_rizin.Sdb_name_get, _rizin.Sdb_name_set)
    fd = property(_rizin.Sdb_fd_get, _rizin.Sdb_fd_set)
    refs = property(_rizin.Sdb_refs_get, _rizin.Sdb_refs_set)
    lock = property(_rizin.Sdb_lock_get, _rizin.Sdb_lock_set)
    ht = property(_rizin.Sdb_ht_get, _rizin.Sdb_ht_set)
    eod = property(_rizin.Sdb_eod_get, _rizin.Sdb_eod_set)
    pos = property(_rizin.Sdb_pos_get, _rizin.Sdb_pos_set)
    dump_end_pos = property(_rizin.Sdb_dump_end_pos_get, _rizin.Sdb_dump_end_pos_set)
    fdump = property(_rizin.Sdb_fdump_get, _rizin.Sdb_fdump_set)
    ndump = property(_rizin.Sdb_ndump_get, _rizin.Sdb_ndump_set)
    options = property(_rizin.Sdb_options_get, _rizin.Sdb_options_set)
    ns_lock = property(_rizin.Sdb_ns_lock_get, _rizin.Sdb_ns_lock_set)
    ns = property(_rizin.Sdb_ns_get, _rizin.Sdb_ns_set)
    depth = property(_rizin.Sdb_depth_get, _rizin.Sdb_depth_set)

    def __init__(self):
        _rizin.Sdb_swiginit(self, _rizin.new_Sdb())
    __swig_destroy__ = _rizin.delete_Sdb

# Register Sdb in _rizin:
_rizin.Sdb_swigregister(Sdb)
class HtPP(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_rizin.HtPP_size_get, _rizin.HtPP_size_set)
    count = property(_rizin.HtPP_count_get, _rizin.HtPP_count_set)
    table = property(_rizin.HtPP_table_get, _rizin.HtPP_table_set)
    prime_idx = property(_rizin.HtPP_prime_idx_get, _rizin.HtPP_prime_idx_set)
    opt = property(_rizin.HtPP_opt_get, _rizin.HtPP_opt_set)

    def __init__(self):
        _rizin.HtPP_swiginit(self, _rizin.new_HtPP())
    __swig_destroy__ = _rizin.delete_HtPP

# Register HtPP in _rizin:
_rizin.HtPP_swigregister(HtPP)
class HtPU(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_rizin.HtPU_size_get, _rizin.HtPU_size_set)
    count = property(_rizin.HtPU_count_get, _rizin.HtPU_count_set)
    table = property(_rizin.HtPU_table_get, _rizin.HtPU_table_set)
    prime_idx = property(_rizin.HtPU_prime_idx_get, _rizin.HtPU_prime_idx_set)
    opt = property(_rizin.HtPU_opt_get, _rizin.HtPU_opt_set)

    def __init__(self):
        _rizin.HtPU_swiginit(self, _rizin.new_HtPU())
    __swig_destroy__ = _rizin.delete_HtPU

# Register HtPU in _rizin:
_rizin.HtPU_swigregister(HtPU)
class HtUP(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_rizin.HtUP_size_get, _rizin.HtUP_size_set)
    count = property(_rizin.HtUP_count_get, _rizin.HtUP_count_set)
    table = property(_rizin.HtUP_table_get, _rizin.HtUP_table_set)
    prime_idx = property(_rizin.HtUP_prime_idx_get, _rizin.HtUP_prime_idx_set)
    opt = property(_rizin.HtUP_opt_get, _rizin.HtUP_opt_set)

    def __init__(self):
        _rizin.HtUP_swiginit(self, _rizin.new_HtUP())
    __swig_destroy__ = _rizin.delete_HtUP

# Register HtUP in _rizin:
_rizin.HtUP_swigregister(HtUP)
class HtUU(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_rizin.HtUU_size_get, _rizin.HtUU_size_set)
    count = property(_rizin.HtUU_count_get, _rizin.HtUU_count_set)
    table = property(_rizin.HtUU_table_get, _rizin.HtUU_table_set)
    prime_idx = property(_rizin.HtUU_prime_idx_get, _rizin.HtUU_prime_idx_set)
    opt = property(_rizin.HtUU_opt_get, _rizin.HtUU_opt_set)

    def __init__(self):
        _rizin.HtUU_swiginit(self, _rizin.new_HtUU())
    __swig_destroy__ = _rizin.delete_HtUU

# Register HtUU in _rizin:
_rizin.HtUU_swigregister(HtUU)
class HtSP(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_rizin.HtSP_size_get, _rizin.HtSP_size_set)
    count = property(_rizin.HtSP_count_get, _rizin.HtSP_count_set)
    table = property(_rizin.HtSP_table_get, _rizin.HtSP_table_set)
    prime_idx = property(_rizin.HtSP_prime_idx_get, _rizin.HtSP_prime_idx_set)
    opt = property(_rizin.HtSP_opt_get, _rizin.HtSP_opt_set)

    def __init__(self):
        _rizin.HtSP_swiginit(self, _rizin.new_HtSP())
    __swig_destroy__ = _rizin.delete_HtSP

# Register HtSP in _rizin:
_rizin.HtSP_swigregister(HtSP)
class HtSS(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_rizin.HtSS_size_get, _rizin.HtSS_size_set)
    count = property(_rizin.HtSS_count_get, _rizin.HtSS_count_set)
    table = property(_rizin.HtSS_table_get, _rizin.HtSS_table_set)
    prime_idx = property(_rizin.HtSS_prime_idx_get, _rizin.HtSS_prime_idx_set)
    opt = property(_rizin.HtSS_opt_get, _rizin.HtSS_opt_set)

    def __init__(self):
        _rizin.HtSS_swiginit(self, _rizin.new_HtSS())
    __swig_destroy__ = _rizin.delete_HtSS

# Register HtSS in _rizin:
_rizin.HtSS_swigregister(HtSS)
class HtSU(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    size = property(_rizin.HtSU_size_get, _rizin.HtSU_size_set)
    count = property(_rizin.HtSU_count_get, _rizin.HtSU_count_set)
    table = property(_rizin.HtSU_table_get, _rizin.HtSU_table_set)
    prime_idx = property(_rizin.HtSU_prime_idx_get, _rizin.HtSU_prime_idx_set)
    opt = property(_rizin.HtSU_opt_get, _rizin.HtSU_opt_set)

    def __init__(self):
        _rizin.HtSU_swiginit(self, _rizin.new_HtSU())
    __swig_destroy__ = _rizin.delete_HtSU

# Register HtSU in _rizin:
_rizin.HtSU_swigregister(HtSU)
class RzBinPluginDirector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def get_sdb(self, obj):
        return _rizin.RzBinPluginDirector_get_sdb(self, obj)

    def load_buffer(self, bf, obj, buf, sdb):
        return _rizin.RzBinPluginDirector_load_buffer(self, bf, obj, buf, sdb)

    def size(self, bin):
        return _rizin.RzBinPluginDirector_size(self, bin)

    def destroy(self, bf):
        return _rizin.RzBinPluginDirector_destroy(self, bf)

    def check_bytes(self, buf, length):
        return _rizin.RzBinPluginDirector_check_bytes(self, buf, length)

    def check_buffer(self, buf):
        return _rizin.RzBinPluginDirector_check_buffer(self, buf)

    def check_filename(self, filename):
        return _rizin.RzBinPluginDirector_check_filename(self, filename)

    def baddr(self, bf):
        return _rizin.RzBinPluginDirector_baddr(self, bf)

    def boffset(self, bf):
        return _rizin.RzBinPluginDirector_boffset(self, bf)

    def virtual_files(self, bf):
        return _rizin.RzBinPluginDirector_virtual_files(self, bf)

    def maps(self, bf):
        return _rizin.RzBinPluginDirector_maps(self, bf)

    def binsym(self, bf, num):
        return _rizin.RzBinPluginDirector_binsym(self, bf, num)

    def entries(self, bf):
        return _rizin.RzBinPluginDirector_entries(self, bf)

    def sections(self, bf):
        return _rizin.RzBinPluginDirector_sections(self, bf)

    def lines(self, bf):
        return _rizin.RzBinPluginDirector_lines(self, bf)

    def symbols(self, bf):
        return _rizin.RzBinPluginDirector_symbols(self, bf)

    def imports(self, bf):
        return _rizin.RzBinPluginDirector_imports(self, bf)

    def strings(self, bf):
        return _rizin.RzBinPluginDirector_strings(self, bf)

    def info(self, bf):
        return _rizin.RzBinPluginDirector_info(self, bf)

    def fields(self, bf):
        return _rizin.RzBinPluginDirector_fields(self, bf)

    def libs(self, bf):
        return _rizin.RzBinPluginDirector_libs(self, bf)

    def relocs(self, bf):
        return _rizin.RzBinPluginDirector_relocs(self, bf)

    def trycatch(self, bf):
        return _rizin.RzBinPluginDirector_trycatch(self, bf)

    def classes(self, bf):
        return _rizin.RzBinPluginDirector_classes(self, bf)

    def mem(self, bf):
        return _rizin.RzBinPluginDirector_mem(self, bf)

    def patch_relocs(self, bf):
        return _rizin.RzBinPluginDirector_patch_relocs(self, bf)

    def hashes(self, bf):
        return _rizin.RzBinPluginDirector_hashes(self, bf)

    def resources(self, bf):
        return _rizin.RzBinPluginDirector_resources(self, bf)

    def header(self, bf):
        return _rizin.RzBinPluginDirector_header(self, bf)

    def signature(self, bf, json):
        return _rizin.RzBinPluginDirector_signature(self, bf, json)

    def demangle_type(self, str):
        return _rizin.RzBinPluginDirector_demangle_type(self, str)

    def enrich_asm(self, bf, asm_str, asm_len):
        return _rizin.RzBinPluginDirector_enrich_asm(self, bf, asm_str, asm_len)

    def get_offset(self, bf, type, idx):
        return _rizin.RzBinPluginDirector_get_offset(self, bf, type, idx)

    def get_name(self, bf, type, idx):
        return _rizin.RzBinPluginDirector_get_name(self, bf, type, idx)

    def get_vaddr(self, bf, baddr, paddr, vaddr):
        return _rizin.RzBinPluginDirector_get_vaddr(self, bf, baddr, paddr, vaddr)

    def section_type_to_string(self, type):
        return _rizin.RzBinPluginDirector_section_type_to_string(self, type)

    def section_flag_to_rzlist(self, flag):
        return _rizin.RzBinPluginDirector_section_flag_to_rzlist(self, flag)

    def create(self, bin, code, codelen, data, datalen, opt):
        return _rizin.RzBinPluginDirector_create(self, bin, code, codelen, data, datalen, opt)

    def demangle(self, str):
        return _rizin.RzBinPluginDirector_demangle(self, str)

    def regstate(self, bf):
        return _rizin.RzBinPluginDirector_regstate(self, bf)

    def file_type(self, bf):
        return _rizin.RzBinPluginDirector_file_type(self, bf)
    __swig_destroy__ = _rizin.delete_RzBinPluginDirector

    def __init__(self):
        if self.__class__ == RzBinPluginDirector:
            _self = None
        else:
            _self = self
        _rizin.RzBinPluginDirector_swiginit(self, _rizin.new_RzBinPluginDirector(_self, ))
    def __disown__(self):
        self.this.disown()
        _rizin.disown_RzBinPluginDirector(self)
        return weakref.proxy(self)

# Register RzBinPluginDirector in _rizin:
_rizin.RzBinPluginDirector_swigregister(RzBinPluginDirector)
class RzBinPluginBuilder(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    enable_get_sdb = property(_rizin.RzBinPluginBuilder_enable_get_sdb_get, _rizin.RzBinPluginBuilder_enable_get_sdb_set)
    enable_load_buffer = property(_rizin.RzBinPluginBuilder_enable_load_buffer_get, _rizin.RzBinPluginBuilder_enable_load_buffer_set)
    enable_size = property(_rizin.RzBinPluginBuilder_enable_size_get, _rizin.RzBinPluginBuilder_enable_size_set)
    enable_destroy = property(_rizin.RzBinPluginBuilder_enable_destroy_get, _rizin.RzBinPluginBuilder_enable_destroy_set)
    enable_check_bytes = property(_rizin.RzBinPluginBuilder_enable_check_bytes_get, _rizin.RzBinPluginBuilder_enable_check_bytes_set)
    enable_check_buffer = property(_rizin.RzBinPluginBuilder_enable_check_buffer_get, _rizin.RzBinPluginBuilder_enable_check_buffer_set)
    enable_check_filename = property(_rizin.RzBinPluginBuilder_enable_check_filename_get, _rizin.RzBinPluginBuilder_enable_check_filename_set)
    enable_baddr = property(_rizin.RzBinPluginBuilder_enable_baddr_get, _rizin.RzBinPluginBuilder_enable_baddr_set)
    enable_boffset = property(_rizin.RzBinPluginBuilder_enable_boffset_get, _rizin.RzBinPluginBuilder_enable_boffset_set)
    enable_virtual_files = property(_rizin.RzBinPluginBuilder_enable_virtual_files_get, _rizin.RzBinPluginBuilder_enable_virtual_files_set)
    enable_maps = property(_rizin.RzBinPluginBuilder_enable_maps_get, _rizin.RzBinPluginBuilder_enable_maps_set)
    enable_binsym = property(_rizin.RzBinPluginBuilder_enable_binsym_get, _rizin.RzBinPluginBuilder_enable_binsym_set)
    enable_entries = property(_rizin.RzBinPluginBuilder_enable_entries_get, _rizin.RzBinPluginBuilder_enable_entries_set)
    enable_sections = property(_rizin.RzBinPluginBuilder_enable_sections_get, _rizin.RzBinPluginBuilder_enable_sections_set)
    enable_lines = property(_rizin.RzBinPluginBuilder_enable_lines_get, _rizin.RzBinPluginBuilder_enable_lines_set)
    enable_symbols = property(_rizin.RzBinPluginBuilder_enable_symbols_get, _rizin.RzBinPluginBuilder_enable_symbols_set)
    enable_imports = property(_rizin.RzBinPluginBuilder_enable_imports_get, _rizin.RzBinPluginBuilder_enable_imports_set)
    enable_strings = property(_rizin.RzBinPluginBuilder_enable_strings_get, _rizin.RzBinPluginBuilder_enable_strings_set)
    enable_info = property(_rizin.RzBinPluginBuilder_enable_info_get, _rizin.RzBinPluginBuilder_enable_info_set)
    enable_fields = property(_rizin.RzBinPluginBuilder_enable_fields_get, _rizin.RzBinPluginBuilder_enable_fields_set)
    enable_libs = property(_rizin.RzBinPluginBuilder_enable_libs_get, _rizin.RzBinPluginBuilder_enable_libs_set)
    enable_relocs = property(_rizin.RzBinPluginBuilder_enable_relocs_get, _rizin.RzBinPluginBuilder_enable_relocs_set)
    enable_trycatch = property(_rizin.RzBinPluginBuilder_enable_trycatch_get, _rizin.RzBinPluginBuilder_enable_trycatch_set)
    enable_classes = property(_rizin.RzBinPluginBuilder_enable_classes_get, _rizin.RzBinPluginBuilder_enable_classes_set)
    enable_mem = property(_rizin.RzBinPluginBuilder_enable_mem_get, _rizin.RzBinPluginBuilder_enable_mem_set)
    enable_patch_relocs = property(_rizin.RzBinPluginBuilder_enable_patch_relocs_get, _rizin.RzBinPluginBuilder_enable_patch_relocs_set)
    enable_hashes = property(_rizin.RzBinPluginBuilder_enable_hashes_get, _rizin.RzBinPluginBuilder_enable_hashes_set)
    enable_resources = property(_rizin.RzBinPluginBuilder_enable_resources_get, _rizin.RzBinPluginBuilder_enable_resources_set)
    enable_header = property(_rizin.RzBinPluginBuilder_enable_header_get, _rizin.RzBinPluginBuilder_enable_header_set)
    enable_signature = property(_rizin.RzBinPluginBuilder_enable_signature_get, _rizin.RzBinPluginBuilder_enable_signature_set)
    enable_demangle_type = property(_rizin.RzBinPluginBuilder_enable_demangle_type_get, _rizin.RzBinPluginBuilder_enable_demangle_type_set)
    enable_enrich_asm = property(_rizin.RzBinPluginBuilder_enable_enrich_asm_get, _rizin.RzBinPluginBuilder_enable_enrich_asm_set)
    enable_get_offset = property(_rizin.RzBinPluginBuilder_enable_get_offset_get, _rizin.RzBinPluginBuilder_enable_get_offset_set)
    enable_get_name = property(_rizin.RzBinPluginBuilder_enable_get_name_get, _rizin.RzBinPluginBuilder_enable_get_name_set)
    enable_get_vaddr = property(_rizin.RzBinPluginBuilder_enable_get_vaddr_get, _rizin.RzBinPluginBuilder_enable_get_vaddr_set)
    enable_section_type_to_string = property(_rizin.RzBinPluginBuilder_enable_section_type_to_string_get, _rizin.RzBinPluginBuilder_enable_section_type_to_string_set)
    enable_section_flag_to_rzlist = property(_rizin.RzBinPluginBuilder_enable_section_flag_to_rzlist_get, _rizin.RzBinPluginBuilder_enable_section_flag_to_rzlist_set)
    enable_create = property(_rizin.RzBinPluginBuilder_enable_create_get, _rizin.RzBinPluginBuilder_enable_create_set)
    enable_demangle = property(_rizin.RzBinPluginBuilder_enable_demangle_get, _rizin.RzBinPluginBuilder_enable_demangle_set)
    enable_regstate = property(_rizin.RzBinPluginBuilder_enable_regstate_get, _rizin.RzBinPluginBuilder_enable_regstate_set)
    enable_file_type = property(_rizin.RzBinPluginBuilder_enable_file_type_get, _rizin.RzBinPluginBuilder_enable_file_type_set)
    name = property(_rizin.RzBinPluginBuilder_name_get, _rizin.RzBinPluginBuilder_name_set)
    desc = property(_rizin.RzBinPluginBuilder_desc_get, _rizin.RzBinPluginBuilder_desc_set)
    author = property(_rizin.RzBinPluginBuilder_author_get, _rizin.RzBinPluginBuilder_author_set)
    version = property(_rizin.RzBinPluginBuilder_version_get, _rizin.RzBinPluginBuilder_version_set)
    license = property(_rizin.RzBinPluginBuilder_license_get, _rizin.RzBinPluginBuilder_license_set)
    strfilter = property(_rizin.RzBinPluginBuilder_strfilter_get, _rizin.RzBinPluginBuilder_strfilter_set)
    user = property(_rizin.RzBinPluginBuilder_user_get, _rizin.RzBinPluginBuilder_user_set)

    def build(self, director):
        return _rizin.RzBinPluginBuilder_build(self, director)

    def __init__(self):
        _rizin.RzBinPluginBuilder_swiginit(self, _rizin.new_RzBinPluginBuilder())
    __swig_destroy__ = _rizin.delete_RzBinPluginBuilder

# Register RzBinPluginBuilder in _rizin:
_rizin.RzBinPluginBuilder_swigregister(RzBinPluginBuilder)

def register_RzBinPlugin(director_class):
    fields = [
        "name",
        "desc",
        "author",
        "version",
        "license",
        "strfilter",
        "user",
    ]
    funcs = [
        "get_sdb",
        "load_buffer",
        "size",
        "destroy",
        "check_bytes",
        "check_buffer",
        "check_filename",
        "baddr",
        "boffset",
        "virtual_files",
        "maps",
        "binsym",
        "entries",
        "sections",
        "lines",
        "symbols",
        "imports",
        "strings",
        "info",
        "fields",
        "libs",
        "relocs",
        "trycatch",
        "classes",
        "mem",
        "patch_relocs",
        "hashes",
        "resources",
        "header",
        "signature",
        "demangle_type",
        "enrich_asm",
        "get_offset",
        "get_name",
        "get_vaddr",
        "section_type_to_string",
        "section_flag_to_rzlist",
        "create",
        "demangle",
        "regstate",
        "file_type",
    ]
    builder = RzBinPluginBuilder()
    class_vars = vars(director_class).keys()
    for field in fields:
        if field in class_vars:
            attr = getattr(director_class, field)
            setattr(builder, field, attr)
    for func in funcs:
        if func in class_vars:
            setattr(builder, f"enable_{func}", True)
    director = director_class()
    return director, builder.build(director)

RZ_ANALYSIS_XREF_TYPE_NULL = _rizin.RZ_ANALYSIS_XREF_TYPE_NULL
RZ_ANALYSIS_XREF_TYPE_CODE = _rizin.RZ_ANALYSIS_XREF_TYPE_CODE
RZ_ANALYSIS_XREF_TYPE_CALL = _rizin.RZ_ANALYSIS_XREF_TYPE_CALL
RZ_ANALYSIS_XREF_TYPE_DATA = _rizin.RZ_ANALYSIS_XREF_TYPE_DATA
RZ_ANALYSIS_XREF_TYPE_STRING = _rizin.RZ_ANALYSIS_XREF_TYPE_STRING
RZ_CMD_ARG_TYPE_FAKE = _rizin.RZ_CMD_ARG_TYPE_FAKE
RZ_CMD_ARG_TYPE_NUM = _rizin.RZ_CMD_ARG_TYPE_NUM
RZ_CMD_ARG_TYPE_RZNUM = _rizin.RZ_CMD_ARG_TYPE_RZNUM
RZ_CMD_ARG_TYPE_STRING = _rizin.RZ_CMD_ARG_TYPE_STRING
RZ_CMD_ARG_TYPE_RAW = _rizin.RZ_CMD_ARG_TYPE_RAW
RZ_CMD_ARG_TYPE_ENV = _rizin.RZ_CMD_ARG_TYPE_ENV
RZ_CMD_ARG_TYPE_CHOICES = _rizin.RZ_CMD_ARG_TYPE_CHOICES
RZ_CMD_ARG_TYPE_FCN = _rizin.RZ_CMD_ARG_TYPE_FCN
RZ_CMD_ARG_TYPE_FILE = _rizin.RZ_CMD_ARG_TYPE_FILE
RZ_CMD_ARG_TYPE_OPTION = _rizin.RZ_CMD_ARG_TYPE_OPTION
RZ_CMD_ARG_TYPE_CMD = _rizin.RZ_CMD_ARG_TYPE_CMD
RZ_CMD_ARG_TYPE_MACRO = _rizin.RZ_CMD_ARG_TYPE_MACRO
RZ_CMD_ARG_TYPE_EVAL_KEY = _rizin.RZ_CMD_ARG_TYPE_EVAL_KEY
RZ_CMD_ARG_TYPE_EVAL_FULL = _rizin.RZ_CMD_ARG_TYPE_EVAL_FULL
RZ_CMD_ARG_TYPE_FCN_VAR = _rizin.RZ_CMD_ARG_TYPE_FCN_VAR
RZ_CMD_ARG_TYPE_FLAG = _rizin.RZ_CMD_ARG_TYPE_FLAG
RZ_CMD_ARG_TYPE_ENUM_TYPE = _rizin.RZ_CMD_ARG_TYPE_ENUM_TYPE
RZ_CMD_ARG_TYPE_STRUCT_TYPE = _rizin.RZ_CMD_ARG_TYPE_STRUCT_TYPE
RZ_CMD_ARG_TYPE_UNION_TYPE = _rizin.RZ_CMD_ARG_TYPE_UNION_TYPE
RZ_CMD_ARG_TYPE_ALIAS_TYPE = _rizin.RZ_CMD_ARG_TYPE_ALIAS_TYPE
RZ_CMD_ARG_TYPE_CLASS_TYPE = _rizin.RZ_CMD_ARG_TYPE_CLASS_TYPE
RZ_CMD_ARG_TYPE_ANY_TYPE = _rizin.RZ_CMD_ARG_TYPE_ANY_TYPE
RZ_CMD_ARG_TYPE_GLOBAL_VAR = _rizin.RZ_CMD_ARG_TYPE_GLOBAL_VAR
RZ_CMD_ARG_TYPE_REG_FILTER = _rizin.RZ_CMD_ARG_TYPE_REG_FILTER
RZ_CMD_ARG_TYPE_REG_TYPE = _rizin.RZ_CMD_ARG_TYPE_REG_TYPE
RZ_BIN_TYPE_NOTYPE_STR = _rizin.RZ_BIN_TYPE_NOTYPE_STR
RZ_BIN_TYPE_OBJECT_STR = _rizin.RZ_BIN_TYPE_OBJECT_STR
RZ_BIN_TYPE_FUNC_STR = _rizin.RZ_BIN_TYPE_FUNC_STR
RZ_BIN_TYPE_FIELD_STR = _rizin.RZ_BIN_TYPE_FIELD_STR
RZ_BIN_TYPE_IFACE_STR = _rizin.RZ_BIN_TYPE_IFACE_STR
RZ_BIN_TYPE_METH_STR = _rizin.RZ_BIN_TYPE_METH_STR
RZ_BIN_TYPE_STATIC_STR = _rizin.RZ_BIN_TYPE_STATIC_STR
RZ_BIN_TYPE_SECTION_STR = _rizin.RZ_BIN_TYPE_SECTION_STR
RZ_BIN_TYPE_FILE_STR = _rizin.RZ_BIN_TYPE_FILE_STR
RZ_BIN_TYPE_COMMON_STR = _rizin.RZ_BIN_TYPE_COMMON_STR
RZ_BIN_TYPE_TLS_STR = _rizin.RZ_BIN_TYPE_TLS_STR
RZ_BIN_TYPE_NUM_STR = _rizin.RZ_BIN_TYPE_NUM_STR
RZ_BIN_TYPE_LOOS_STR = _rizin.RZ_BIN_TYPE_LOOS_STR
RZ_BIN_TYPE_HIOS_STR = _rizin.RZ_BIN_TYPE_HIOS_STR
RZ_BIN_TYPE_LOPROC_STR = _rizin.RZ_BIN_TYPE_LOPROC_STR
RZ_BIN_TYPE_HIPROC_STR = _rizin.RZ_BIN_TYPE_HIPROC_STR
RZ_BIN_TYPE_SPECIAL_SYM_STR = _rizin.RZ_BIN_TYPE_SPECIAL_SYM_STR
RZ_BIN_TYPE_UNKNOWN_STR = _rizin.RZ_BIN_TYPE_UNKNOWN_STR
RZ_BIN_BIND_LOCAL_STR = _rizin.RZ_BIN_BIND_LOCAL_STR
RZ_BIN_BIND_GLOBAL_STR = _rizin.RZ_BIN_BIND_GLOBAL_STR
RZ_BIN_BIND_WEAK_STR = _rizin.RZ_BIN_BIND_WEAK_STR
RZ_BIN_BIND_NUM_STR = _rizin.RZ_BIN_BIND_NUM_STR
RZ_BIN_BIND_LOOS_STR = _rizin.RZ_BIN_BIND_LOOS_STR
RZ_BIN_BIND_HIOS_STR = _rizin.RZ_BIN_BIND_HIOS_STR
RZ_BIN_BIND_LOPROC_STR = _rizin.RZ_BIN_BIND_LOPROC_STR
RZ_BIN_BIND_HIPROC_STR = _rizin.RZ_BIN_BIND_HIPROC_STR
RZ_BIN_BIND_IMPORT_STR = _rizin.RZ_BIN_BIND_IMPORT_STR
RZ_BIN_BIND_UNKNOWN_STR = _rizin.RZ_BIN_BIND_UNKNOWN_STR
RZ_BUF_SET = _rizin.RZ_BUF_SET
RZ_BUF_CUR = _rizin.RZ_BUF_CUR
RZ_BUF_END = _rizin.RZ_BUF_END
RZ_PERM_R = _rizin.RZ_PERM_R
RZ_PERM_W = _rizin.RZ_PERM_W
RZ_PERM_X = _rizin.RZ_PERM_X
RZ_PERM_RW = _rizin.RZ_PERM_RW
RZ_PERM_RX = _rizin.RZ_PERM_RX
RZ_PERM_RWX = _rizin.RZ_PERM_RWX
RZ_PERM_WX = _rizin.RZ_PERM_WX
RZ_PERM_SHAR = _rizin.RZ_PERM_SHAR
RZ_PERM_PRIV = _rizin.RZ_PERM_PRIV
RZ_PERM_ACCESS = _rizin.RZ_PERM_ACCESS
RZ_PERM_CREAT = _rizin.RZ_PERM_CREAT

