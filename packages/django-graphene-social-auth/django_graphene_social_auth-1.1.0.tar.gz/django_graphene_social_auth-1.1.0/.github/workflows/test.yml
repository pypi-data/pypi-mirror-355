name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", 3.11, 3.12, 3.13]
        django-version: ["3.2", "4.0", "4.1", "4.2", "5.0", "5.1"]
        exclude:
          # Django 5.0+ requires Python 3.10+
          - python-version: 3.8
            django-version: "5.0"
          - python-version: 3.8
            django-version: "5.1"
          - python-version: 3.9
            django-version: "5.0"
          - python-version: 3.9
            django-version: "5.1"
          # Django 4.2+ drops support for Python 3.8 in the future
          # Django 3.2 is LTS and supports Python 3.8-3.10
          - python-version: 3.13
            django-version: "3.2"
          - python-version: 3.13
            django-version: "4.0"
          - python-version: 3.13
            django-version: "4.1"
          - python-version: 3.12
            django-version: "3.2"
          - python-version: 3.11
            django-version: "3.2"

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    
    - name: Test with tox
      run: tox
      env:
        # Convert version format to match tox.ini (e.g., 3.12 -> 312, 4.1 -> 41)
        TOXENV: py${{ matrix.python-version == '3.10' && '310' || matrix.python-version == '3.11' && '311' || matrix.python-version == '3.12' && '312' || matrix.python-version == '3.13' && '313' || matrix.python-version == '3.8' && '38' || '39' }}-django${{ matrix.django-version == '3.2' && '32' || matrix.django-version == '4.0' && '40' || matrix.django-version == '4.1' && '41' || matrix.django-version == '4.2' && '42' || matrix.django-version == '5.0' && '50' || '51' }}

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
    
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.11
    
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install tox
    
  #   - name: Lint with flake8
  #     run: tox -e flake8

  # coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
    
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: 3.11
    
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install -e .[test]
  #       pip install codecov
    
  #   - name: Run tests with coverage
  #     run: |
  #       python -m pip install -e .[test]
  #       PYTHONPATH=$PWD pytest --cov=graphql_social_auth --cov-report=xml
    
  #   - name: Upload coverage to Codecov
  #     uses: codecov/codecov-action@v3
  #     with:
  #       file: ./coverage.xml
  #       fail_ci_if_error: true
