Metadata-Version: 2.4
Name: django-graphene-social-auth
Version: 1.0.1
Summary: Python Social Auth support for Django GraphQL
Home-page: https://github.com/Ademic2022/django-graphene-social-auth/
Author: Michael
Author-email: Michael <ademictech@gmail.com>, mongkok <domake.io@gmail.com>
Maintainer: Michael
Maintainer-email: Michael <ademictech@gmail.com>
License: The MIT License (MIT)
        
        Copyright (c) 2019 Michael
        Copyright (c) 2024 The Django GraphQL Social Auth Contributors 
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of
        this software and associated documentation files (the "Software"), to deal in
        the Software without restriction, including without limitation the rights to
        use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
        the Software, and to permit persons to whom the Software is furnished to do so,
        subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
        FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
        COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
        IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
        CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/Ademic2022/django-graphene-social-auth/
Project-URL: Repository, https://github.com/Ademic2022/django-graphene-social-auth/
Project-URL: Issues, https://github.com/Ademic2022/django-graphene-social-auth/issues
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Framework :: Django
Classifier: Framework :: Django :: 3.2
Classifier: Framework :: Django :: 4.0
Classifier: Framework :: Django :: 4.1
Classifier: Framework :: Django :: 4.2
Classifier: Framework :: Django :: 5.0
Classifier: Framework :: Django :: 5.1
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: Django>=3.2
Requires-Dist: graphene-django>=3.0.0
Requires-Dist: social-auth-app-django>=5.0.0
Requires-Dist: django-filter>=24.3
Provides-Extra: jwt
Requires-Dist: django-graphql-jwt>=0.4.0; extra == "jwt"
Provides-Extra: test
Requires-Dist: coverage>=7.0; extra == "test"
Requires-Dist: pytest>=7.0.0; extra == "test"
Requires-Dist: pytest-cov>=4.0.0; extra == "test"
Requires-Dist: pytest-django>=4.5.0; extra == "test"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "test"
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: maintainer

Django GraphQL Social Auth
==========================

`Python Social Auth`_ support for `Django GraphQL`_

.. _Django GraphQL: https://github.com/graphql-python/graphene-django


Dependencies
------------

* Python ≥ 3.8
* Django ≥ 3.2


Installation
------------

Install last stable version from Pypi.

.. code:: sh

    pip install django-graphql-social-auth


See the `documentation`_ for further guidance on setting *Python Social Auth*.

.. _documentation: http://python-social-auth.readthedocs.io/en/latest/configuration/django.html

Add the ``SocialAuth`` mutation to your GraphQL schema.

.. code:: python

    import graphene
    import graphql_social_auth


    class Mutations(graphene.ObjectType):
        social_auth = graphql_social_auth.SocialAuth.Field()

`Session`_ authentication via *accessToken*.

.. _Session: https://docs.djangoproject.com/en/2.0/topics/http/sessions/

- ``provider``: provider name from `Authentication backend list`_.
- ``accessToken``: third-party (Google, Facebook...) OAuth token obtained with any OAuth client.

.. _Authentication backend list: https://github.com/Ademic2022/django-graphene-social-auth/wiki/Authentication-backends

.. code:: graphql

    mutation SocialAuth($provider: String!, $accessToken: String!) {
      socialAuth(provider: $provider, accessToken: $accessToken) {
        social {
          uid
          extraData
        }
      }
    }


JSON Web Token (JWT)
--------------------

Authentication solution based on `JSON Web Token`_.

.. _JSON Web Token: https://jwt.io/

Install additional requirements.

.. code:: sh

    pip install 'django-graphql-social-auth[jwt]'


Add the ``SocialAuthJWT`` mutation to your GraphQL schema.

.. code:: python

    import graphene
    import graphql_social_auth


    class Mutations(graphene.ObjectType):
        social_auth = graphql_social_auth.SocialAuthJWT.Field()


Authenticate via *accessToken* to obtain a JSON Web Token.

.. code:: graphql

    mutation SocialAuth($provider: String!, $accessToken: String!) {
      socialAuth(provider: $provider, accessToken: $accessToken) {
        social {
          uid
        }
        token
      }
    }


Relay
-----

Complete support for `Relay`_.

.. _Relay: https://facebook.github.io/relay/

.. code:: python

    import graphene
    import graphql_social_auth


    class Mutations(graphene.ObjectType):
        social_auth = graphql_social_auth.relay.SocialAuth.Field()

``graphql_social_auth.relay.SocialAuthJWT.Field()`` for `JSON Web Token (JWT)`_ authentication.

`Relay mutations`_ only accepts one argument named *input*:

.. _Relay mutations: https://facebook.github.io/relay/graphql/mutations.htm

.. code:: graphql

    mutation SocialAuth($provider: String!, $accessToken: String!) {
      socialAuth(input:{provider: $provider, accessToken: $accessToken}) {
        social {
          uid
        }
      }
    }


Customizing
-----------

If you want to customize the ``SocialAuth`` behavior, you'll need to customize the ``resolve()`` method on a subclass of ``SocialAuthMutation`` or ``.relay.SocialAuthMutation.``

.. code:: python

    import graphene
    import graphql_social_auth


    class SocialAuth(graphql_social_auth.SocialAuthMutation):
        user = graphene.Field(UserType)

        @classmethod
        def resolve(cls, root, info, social, **kwargs):
            return cls(user=social.user)


Authenticate via *accessToken* to obtain the *user id*.

.. code:: graphql

    mutation SocialAuth($provider: String!, $accessToken: String!) {
      socialAuth(provider: $provider, accessToken: $accessToken) {
        social {
          uid
        }
        user {
          id
        }
      }
    }


Project template
----------------

There is a `Django project template`_ to start a demo project.

.. _Django project template: https://github.com/ice-creams/graphql-social-auth-template

----

Gracias `@omab`_ / `Python Social Auth`_.

.. _@omab: https://github.com/omab
.. _Python Social Auth: http://python-social-auth.readthedocs.io/


.. |Pypi| image:: https://img.shields.io/pypi/v/django-graphql-social-auth.svg
   :target: https://pypi.python.org/pypi/django-graphql-social-auth

.. |Wheel| image:: https://img.shields.io/pypi/wheel/django-graphql-social-auth.svg
   :target: https://pypi.python.org/pypi/django-graphql-social-auth


A maintained fork of the original Django GraphQL Social Auth package.

Original project: https://github.com/flavors/django-graphql-social-auth/
