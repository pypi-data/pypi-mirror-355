[project]
name = "agntcy-acp"
version = "1.5.2"
license = "Apache-2.0"
description = "Agent Connect Protocol SDK"
readme = "README.md"
authors = [
    { name = "AGNTCY Internet of Agents Collective", email = "pypi@agntcy.io" },
]
maintainers = [
    { name = "AGNTCY Internet of Agents Collective", email = "pypi@agntcy.io" },
]
requires-python = ">=3.9.0, <4.0"
dependencies = [
    "openapi-spec-validator >= 0.7.1",
    "datamodel-code-generator >= 0.25.6",
    "pyyaml >= 6.0.2",
    "aiofiles >= 24.1.0",
    # Inherited from generated openapi model
    "urllib3 >= 1.25.3, < 3.0.0",
    "python-dateutil >= 2.8.2",
    "pydantic >= 2",
    "typing-extensions >= 4.7.1",
    "aiohttp >= 3.8.4",
    "aiohttp-retry >= 2.8.3",
]

[project.optional-dependencies]
langgraph=["langgraph >= 0.3.16"]
iomapper_langgraph=["agntcy-iomapper[langgraph] >= 0.2.2"]
cli=["click >= 8.1.8"]

[project.urls]
Homepage = "https://github.com/agntcy/acp-sdk"
Source = "https://github.com/agntcy/acp-sdk"
Documentation = "https://docs.agntcy.org/index.html"
Issues = "https://github.com/agntcy/acp-sdk/issues"

[dependency-groups]
test = [
    "pytest >= 8.3",
    "deepdiff >= 8.1.1",
    "pytest-asyncio >= 0.23.5",
    "langgraph >= 0.3.16",
    "agntcy-iomapper[langgraph] >= 0.2.2"
]

[tool.pytest.ini_options]
pythonpath = ["."]
asyncio_mode = "auto"
markers = [
  "needs_acp_spec: mark test as needing the ACP specification"
]

[tool.poetry.scripts]
acp = "agntcy_acp.__main__:cli"

[tool.ruff]
lint.select = ["E", "F", "I", "TID251"]
lint.ignore = ["E501"]
line-length = 88
indent-width = 4
extend-include = ["*.ipynb"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.mypy]
disallow_untyped_defs = true
explicit_package_bases = true
warn_no_return = false
warn_unused_ignores = true
warn_redundant_casts = true
allow_redefinition = true
# https://mypy.readthedocs.io/en/stable/config_file.html
disable_error_code = "typeddict-item, return-value, override, has-type"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
