[build-system]
requires = ["setuptools>=64"]
build-backend = "setuptools.build_meta"

[project]
name = "esp-idf-diag"
authors = [{name = "Espressif Systems"}]
description = "Diagnostic tool for ESP-IDF"
keywords = ["espressif", "embedded", "diagnostic", "bug", "report"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Environment :: Console",
    "Topic :: Software Development :: Embedded Systems",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS :: MacOS X",
]
requires-python = ">=3.7"
dynamic = ['version']
dependencies = [
    "PyYAML",
    "rich",
]

[project.scripts]
esp-idf-diag = "esp_idf_diag.__main__:main"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/espressif/esp-idf-diag"

[project.optional-dependencies]
dev = [
    "pre-commit",
    "commitizen",
    "czespressif>=1.3.1",
    "pytest",
]

[tool.setuptools]
packages = ["esp_idf_diag"]
include-package-data = true

[tool.setuptools.package-data]
"esp_idf_diag" = ["data/**/*.yml"]

[tool.setuptools.dynamic]
version = {attr = "esp_idf_diag.__version__"}

[tool.commitizen]
name = "czespressif"
version = "0.2.0"
update_changelog_on_bump = true
tag_format = "v$version"
changelog_merge_prerelease = true
annotated_tag = true
bump_message = "change: Update version to $new_version"
version_files = [
    "esp_idf_diag/__init__.py:__version__"
]

[tool.mypy]
disallow_incomplete_defs = false # Disallows defining functions with incomplete type annotations
disallow_untyped_defs    = false # Disallows defining functions without type annotations or with incomplete type annotations
ignore_missing_imports   = true  # Suppress error messages about imports that cannot be resolved
python_version           = "3.8" # Specifies the Python version used to parse and check the target program
warn_no_return           = true  # Shows errors for missing return statements on some execution paths
warn_return_any          = true  # Shows a warning when returning a value with type Any from a function declared with a non- Any return type

[tool.codespell]
write-changes = true

[tool.ruff]
line-length = 79

[tool.ruff.lint]
extend-select = ["E501", "I"]

[tool.ruff.format]
quote-style = "single"
