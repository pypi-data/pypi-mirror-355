[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "dataset-format-converter"
dynamic = ["version"]
description = "多格式数据集标注转换工具 - Multi-format dataset annotation converter"
readme = "README.md"
requires-python = ">=3.6"
license = "MIT"
authors = [
    {name = "Blake Zhu", email = "2112304124@mail2.gdut.edu.cn"},
]
maintainers = [
    {name = "Blake Zhu", email = "2112304124@mail2.gdut.edu.cn"},
]
keywords = ["yolo", "obb", "object-detection", "computer-vision", "annotation-tool", "dota", "labelimg", "pascal-voc"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=1.19.0",
    "pillow>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.812",
    "pre-commit>=2.15.0",
]
gui = [
    "pillow>=8.0.0",
    "tkinter",
]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "pytest-mock>=3.6.0",
]

[project.urls]
Homepage = "https://github.com/BIANG-qilie/dataset-format-converter"
Documentation = "https://github.com/BIANG-qilie/dataset-format-converter#readme"
Repository = "https://github.com/BIANG-qilie/dataset-format-converter.git"
"Bug Tracker" = "https://github.com/BIANG-qilie/dataset-format-converter/issues"

[project.scripts]
dataset-format-converter = "dataset_format_converter.cli.main:main"
dataset-converter-gui = "dataset_format_converter.gui.main_window:main"

[tool.setuptools]
packages = [
    "dataset_format_converter",
    "dataset_format_converter.core",
    "dataset_format_converter.formats",
    "dataset_format_converter.gui",
    "dataset_format_converter.cli",
    "dataset_format_converter.config",
    "dataset_format_converter.i18n",
    "dataset_format_converter.i18n.locales"
]

[tool.setuptools.dynamic]
version = {attr = "dataset_format_converter.__version__"}

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.6"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=dataset_format_converter --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
source = ["dataset_format_converter"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
] 