#!python
# -*- coding: utf-8 -*-
"""
@summary: Prints the public NAT IPv4 address and/or the automatic assigned IPv6 address.

@author: Frank Brehm
@contact: frank@brehm-online.com
@copyright: Â© 2025 by Frank Brehm, Berlin
"""
from __future__ import print_function

import locale
import os
import sys

try:
    from pathlib import Path
except ImportError:
    from pathlib2 import Path

__exp_py_version_major__ = 3
__min_py_version_minor__ = 6

if sys.version_info[0] != __exp_py_version_major__:
    print('This script is intended to use with Python {}.'.format(
        __exp_py_version_major__), file=sys.stderr)
    print('You are using Python: {0}.{1}.{2}-{3}-{4}.'.format(
        *sys.version_info), file=sys.stderr)
    sys.exit(1)

if sys.version_info[1] < __min_py_version_minor__:
    print('A minimal Python version of {maj}.{min} is necessary to execute this script.'.format(
        maj=__exp_py_version_major__, min=__min_py_version_minor__), file=sys.stderr)
    print('You are using Python: {0}.{1}.{2}-{3}-{4}.'.format(
        *sys.version_info), file=sys.stderr)
    sys.exit(1)

cur_dir = os.getcwd()
base_dir = cur_dir

my_path = Path(__file__)
my_real_path = my_path.resolve()
bin_path = my_real_path.parent
base_dir = bin_path.parent
lib_dir = base_dir.joinpath('lib')
module_dir = lib_dir.joinpath('fb_tools')

# print("My path:      {!r}".format(str(my_path)))
# print("My real path: {!r}".format(str(my_real_path)))
# print("Bin path:     {!r}".format(str(bin_path)))
# print("Base dir:     {!r}".format(str(base_dir)))
# print("Lib dir:      {!r}".format(str(lib_dir)))
# print("Module dir:   {!r}".format(str(module_dir)))

if module_dir.exists():
    sys.path.insert(0, str(lib_dir))

# own modules:
from fb_tools.ddns.myip_app import MyIpApplication
from fb_tools.xlate import XLATOR

_ = XLATOR.gettext

__author__ = 'Frank Brehm <frank@brehm-online.com>'
__copyright__ = '(C) 2025 by Frank Brehm, Berlin'

appname = os.path.basename(sys.argv[0])

locale.setlocale(locale.LC_ALL, '')

app = MyIpApplication(appname=appname, base_dir=base_dir)
app.initialized = True

if app.verbose > 2:
    print(_('{c}-Object:\n{a}').format(c=app.__class__.__name__, a=app))

app()

sys.exit(0)

# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4
