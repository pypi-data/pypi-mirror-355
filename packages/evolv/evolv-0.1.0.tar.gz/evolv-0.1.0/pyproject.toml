[project]
name = "evolv"
version = "0.1.0"
description = "A Python framework for evolving code using AI."
authors = [{name = "Johan Gras", email = "johan.gras-sub@outlook.com"}]
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["ai", "evolutionary algorithms", "code generation", "python", "autonomous agents"]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
    "aiofiles>=24.1.0",
    "dspy>=2.6.27",
    "modal>=1.0.3",
    "numpy>=2.0.2",
    "pandas>=2.3.0",
    "python-dotenv>=1.1.0",
    "scikit-learn>=1.6.1",
]

[project.scripts]
evolve = "evolve:main"

[project.urls]
Homepage = "https://github.com/johan-gras/evolve"
Repository = "https://github.com/johan-gras/evolve"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/evolve"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.8.0",
    "black>=24.0.0",
    "mypy>=1.11.0",
    "pre-commit>=3.5.0",
    "types-requests>=2.31.0",
]

[tool.pytest.ini_options]
testpaths = [
    "src/tests",
]
addopts = "-s -v"

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "RUF",  # Ruff-specific rules
]
ignore = ["E501", "N806", "N803", "UP035", "UP006", "F821"]  # Line length, ML naming, forward refs

[tool.ruff.lint.per-file-ignores]
"src/tests/*" = ["D", "S101", "PLR2004", "F841", "E741"]
"examples/*" = ["N806", "N803"]  # Allow uppercase variables in ML examples

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311', 'py312']

[tool.isort]
profile = "black"
line_length = 120

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true
allow_untyped_decorators = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["src/evolve"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true
skip_covered = false
