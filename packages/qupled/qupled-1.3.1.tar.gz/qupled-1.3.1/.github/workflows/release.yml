name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set build version
        run: ./devtool update-version ${{ github.ref_name }}

      - name: Build sdist
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install build
          python -m build --sdist --outdir dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build-wheels:
    name: Build ${{ matrix.arch }} wheels
    runs-on: ubuntu-latest
    needs: build-sdist

    strategy:
      matrix:
        arch: [x86_64, aarch64]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set build version
        run: ./devtool update-version ${{ github.ref_name }}

      - name: Set up QEMU (for aarch64 emulation)
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3

      - name: Authenticate with GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull correct manylinux image
        run: |
          docker pull --platform linux/${{ matrix.arch }} ghcr.io/fedluc/qupled/qupled_manylinux_${{ matrix.arch }}

      - name: Build wheels using cibuildwheel
        uses: pypa/cibuildwheel@v2.16.5
        with:
          output-dir: wheelhouse
        env:
          CIBW_PLATFORM: linux
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_CONTAINER_PLATFORM: linux/${{ matrix.arch }}

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.arch }}
          path: wheelhouse/*.whl

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [build-sdist, build-wheels]

    steps:
      - name: Prepare dist folder
        run: mkdir -p dist

      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: temp-sdist

      - name: Download wheels (x86_64)
        uses: actions/download-artifact@v4
        with:
          name: wheels-x86_64
          path: temp-wheels-x86_64

      - name: Download wheels (aarch64)
        uses: actions/download-artifact@v4
        with:
          name: wheels-aarch64
          path: temp-wheels-aarch64

      - name: Move all files to dist/
        run: |
          mv temp-sdist/* dist/ || true
          mv temp-wheels-*/* dist/ || true

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip3 install --upgrade pip
          pip3 install twine
          twine check dist/*
          twine upload dist/* --non-interactive