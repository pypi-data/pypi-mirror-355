[tool.poetry]
name = "lsa-cli"
version = "1.0.0"
description = "CLI part of Linking Software Artifacts project"
authors = ["Mark Seliverstov <smdmrr00@gmail.com>"]
readme = "README.md"
packages = [
    { include = "lsa_cli_smdmrr", from = "src" },
]
include = ["py.typed"]

[tool.poetry.dependencies]
python = "^3.11"
structlog = "^24.4.0"
comment-parser = "^1.2.4"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.3.3"
mypy = "^1.10.0"
poethepoet = "^0.26.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.1"
pytest-asyncio = "^0.23.7"
pytest-mypy = "^0.10.3"
pytest-ruff = "^0.3.2"

[tool.poetry.scripts]
lsa-cli = "lsa_cli_smdmrr.__main__:main"

[tool.pytest.ini_options]
addopts = """
    --verbose
    --ruff
    --mypy
    """
asyncio_mode = "auto"

[tool.poe.tasks]
_ruff_sort_imports = "ruff check --select I --fix ."
_ruff_format = "ruff format ."
format-code = ["_ruff_sort_imports", "_ruff_format"]

[tool.ruff]
line-length = 99
output-format = "full"
force-exclude = true
extend-exclude = ["**pb2.py", "**pb2.pyi"]

[tool.ruff.lint]
select = ["E", "F", "I", "PERF", "ARG"]
ignore = [
    "E1", # handled by formatter
    "E4", # handled by formatter
    "E5", # handled by formatter
]

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 99

[tool.mypy]
strict = true
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
warn_unused_ignores = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
