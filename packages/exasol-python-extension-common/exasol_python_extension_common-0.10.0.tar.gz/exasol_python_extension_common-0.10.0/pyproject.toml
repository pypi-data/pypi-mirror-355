[project]
name = "exasol-python-extension-common"
version = "0.10.0"
requires-python = ">=3.10,<4.0"
description = "A collection of common utilities for Exasol extensions."
authors = [
    {name="Mikhail Beck", email="mikhail.beck@exasol.com"},
]
readme = "README.md"
license = "MIT"
dynamic = ["dependencies"]

[tool.poetry]
requires-poetry = ">=2.1.0"
packages = [ {include = "exasol"}, ]

[tool.poetry.dependencies]
pyexasol = ">=0.25.0,<1.0.0"
exasol-bucketfs = ">=0.10.0"
click = "^8.1.7"
exasol-saas-api = ">=1.1.0,<2"
requests = ">=2.32.0"
tenacity = "^8.3.0"
exasol-script-languages-container-tool = "^1.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
exasol-toolbox = "^1.0.1"
pytest-exasol-backend = ">=0.4.0,<1.0.0"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
relative_files = true
source = [
    "exasol",
]

[tool.coverage.report]
fail_under = 15

[tool.black]
line-length = 100
verbose = false
include = "\\.pyi?$"


[tool.isort]
profile = "black"
force_grid_wrap = 2


[tool.pylint.master]
errors-only = true
output-format = "colorized,json:.lint.json,text:.lint.txt"

[tool.pylint.format]
max-line-length = 100
max-module-lines = 800


[[tool.mypy.overrides]]
module = [
    "exasol.toolbox.nox.tasks",
    "test.*",
]
ignore_errors = true
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = [
    "saas: integration test that creates a db in SaaS.",
]
