Metadata-Version: 2.4
Name: cptd
Version: 1.0.7
Summary: CPTD CLI
Author: Asbjorn Rasen
Author-email: asbjornrasen@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: argcomplete>=1.12.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

CPTD CLI

CPTD CLI is not just a command-line tool.
It is an extensible management platform designed to:

Create custom commands and extensions
Enable command exchange between users
Integrate with external tools and APIs
Automate workflows, reporting, and strategic analysis
Serve as the core engine for any user or graphical interfaces (UI)

Architectural Principles

1. CLI as an Extensible Platform

Every command is just a regular Python file with a defined interface.
You can create your own command in under 5 minutes.

Commands are simple Python modules with minimal structure.
Each command includes a manifest file (name, description, author, version, dependencies).
Developers can use the "cptd newcommand" template to get started instantly.

Commands can be tested and debugged interactively during development using:
cptd command --add \<your\_command.py> — adds the command to the CLI system
cptd command --del \<your\_command.py> — removes the command

This enables rapid prototyping, testing, and cleanup without restarting or rebuilding the system.

2. Security and Validation

All commands in the shared repository undergo strict security review.
During installation, CPTD CLI performs automatic checks for forbidden code (e.g., dynamic pip install inside command files).
During publishing to the shared repository, each command undergoes rigorous validation for security, structure, and manifest integrity.
When submitted by the community, commands are moderated and reviewed before inclusion in the official repository.

3. CLI as a Core Engine for UI

It serves as a bridge between graphical environments that use CLI as their core engine.
CPTD CLI acts as the core backend for all present and future interfaces.
All UI components interact with the CLI for logic processing and data operations.

4. Centralized and Decentralized Distribution

Commands can be shared and loaded from shared repositories.
Follows a standardized format for sharing, importing, and distributing CLI commands.

5. Autonomy and Reliability

Works fully offline — no cloud required.
No telemetry, no hidden data collection, no external connections.
Compatible with Windows, Linux, and macOS.

Why It Matters

Flexibility: Adapt CLI to any workflow — from license checks to automation.
Scalability: From solo developers to enterprise teams.
Extensibility: Build, share, moderate, and integrate custom commands.
Security: Strict validation at all stages — installation, execution, and repository submission.
Transparency: All code is open, modular, and auditable.

6. Open Source and Public Repository

CPTD CLI is a free and open-source project.
Its full source code is available in the public repository:  
https://github.com/asbjornrasen/cptd-dsl

This guarantees full transparency, increases trust and security, and allows anyone to inspect, contribute to, or fork the system.
By being open, CPTD ensures long-term independence and verifiability.

Summary

CPTD CLI is more than a tool — it is a foundation for building, validating, and exchanging smart operational utilities.
Its flexible architecture, strict security, and transparent model make it the ideal control core for personal and enterprise-level systems.
