_answers_file: .bhklab-template-builder-answers.yml

_exclude:
    - includes

_templates_suffix: .jinja

_subdirectory: TEMPLATE

_message_before_copy: |
    ┌─────────────────────────────────────────────────────┐
    │                                                     │
    │   PROJECT GENERATOR                                 │
    │                                                     │
    │   ██████╗ ██╗  ██╗██╗  ██╗██╗      █████╗ ██████╗   │
    │   ██╔══██╗██║  ██║██║ ██╔╝██║     ██╔══██╗██╔══██╗  │
    │   ██████╔╝███████║█████╔╝ ██║     ███████║██████╔╝  │
    │   ██╔══██╗██╔══██║██╔═██╗ ██║     ██╔══██║██╔══██╗  │
    │   ██████╔╝██║  ██║██║  ██╗███████╗██║  ██║██████╔╝  │
    │   ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝   │
    │                                                     │
    └─────────────────────────────────────────────────────┘

    Thanks for generating a project using our template!

    You'll be asked a series of questions whose answers will be used to
    generate a tailored project following our best practices.

_tasks:
    # Setup local project structure
    - command: ["echo", "Setting up project..."]

    # Initialize git repository
    - command: ["git", "init", "--initial-branch=main"]

    # Initialize pixi environment
    - command: ["pixi", "lock"]

    # Install default environment
    - command: ["pixi", "install"]

    # Create project folder structure
    - command:
          ["mkdir", "-p", "config", "metadata", "resources", "logs", "sandbox"]

    # Git setup and initial commit
    # Stage files
    - command: ["git", "add", "."]

    # Create initial commit
    - command: ["git", "commit", "-m", "feat: first commit"]

    # GitHub repository setup - only if user wants to publish
    # Create GitHub repository
    - command:
          [
              "pixi",
              "exec",
              "gh",
              "repo",
              "create",
              "--public",
              "--source=.",
              "--remote=origin",
              "--push",
              "{{ repo_location }}/{{ project_slug }}",
          ]
      when: "{{ publish_to_github }}"

    # Set repository metadata
    - command:
          [
              "pixi",
              "exec",
              "gh",
              "repo",
              "edit",
              "--homepage=https://{{ repo_location }}.github.io/{{ project_slug }}",
              "--description={{ project_description }}",
          ]
      when: "{{ publish_to_github }}"

    # Create gh-pages branch
    - command: ["git", "branch", "gh-pages"]
      when: "{{ publish_to_github }}"

    # Push gh-pages branch
    - command: ["git", "push", "-u", "origin", "gh-pages"]
      when: "{{ publish_to_github }}"

    # Release 0.1.0
    - command:
          [
              "pixi",
              "exec",
              "gh",
              "release",
              "create",
              "v0.1.0",
              "--title=Initial alpha release",
              "--notes=Starting point for the project",
          ]
      when: "{{ publish_to_github }}"

_message_after_copy: |
    ✅ Your project "{{ project_name }}" has been created successfully!

    🚀 Next steps:

    1. Change directory to the project root:

       $ cd {{ _copier_conf.dst_path }}

    2. Enter the development environment:

       $ pixi shell

    3. Build and view the documentation:

       $ pixi run doc-serve

    {% if publish_to_github %}
      📚 Documentation available at: https://{{ repo_location }}.github.io/{{ project_slug }}
      (You may need to wait a few minutes for the site to be available)

      🔗 Repository: https://github.com/{{ repo_location }}/{{ project_slug }}
    {% endif %}
