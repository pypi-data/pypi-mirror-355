[project]
name = "withingpy"
version = "1.0.9"
description = "Withings Public API Integration"
readme = "README.md"
authors = [
    { name = "Ian Day", email = "ian@ianday.me" }
]
license = { text="GPL-3.0-or-later" }
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Development Status :: 4 - Beta"
]
dependencies = [
    "pydantic>=2.11.5",
    "requests>=2.32.3",
    "typer>=0.15.4",
]

[project.urls]
Homepage = "https://iandday.github.io/withingpy/"
Documentation = "https://iandday.github.io/withingpy/"
Repository = "https://github.com/iandday/withingpy"
Issues = "https://github.com/iandday/withingpy/issues"
Changelog = "https://github.com/iandday/withingpy/master/CHANGELOG.md"

[dependency-groups]
dev = [
    "python-semantic-release>=10.0.2",
    "ruff>=0.11.12",
]
doc = [
  "griffe-fieldz>=0.2.1",
  "griffe-pydantic>=1.1.4",
  "mkdocs (>=1.6.1,<1.7)",
  "mkdocs-autorefs (>=1.2,<1.3)",
  "mkdocs-get-deps (>=0.2,<0.3)",
  "mkdocs-git-authors-plugin>=0.9.5",
  "mkdocs-git-committers-plugin-2>=2.5.0",
  "mkdocs-git-revision-date-localized-plugin>=1.4.6",
  "mkdocs-glightbox (>=0.4,<0.5)",
  "mkdocs-material (>=9.5,<9.6)",
  "mkdocs-material-extensions (>=1.3,<1.4)",
  "mkdocs-typer2>=0.1.4",
  "mkdocstrings[python] (>=0.26,<0.27)",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
withings-cli = "withingpy.cli:app"

[tool.ruff]
line-length = 145
target-version = "py39"

[tool.ruff.lint]
select = [ # Auto-fixable rules only
    "I",    # isort
    "UP",   # pyupgrade
    "F401", # unused imports
    "RUF"   # ruff rules
]

ignore = [
    "RUF012", # Not auto-fixable (remove eventually)
    "RUF001" # Not auto-fixable (remove eventually)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "UP035"]  # __init__.py file exceptions

# Keep complexity below 28
[tool.ruff.lint.mccabe]
max-complexity = 28

[tool.ruff.lint.isort]
combine-as-imports = true
lines-after-imports = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# HTML linting
[tool.djlint]
profile = "django"
extension = "html"
indent = 2

# Auto-fixable rules only
include = "H008,H009,H010,H014,H024,H026,H033,T028,T034"

# Ignore troublesome rules that aren't auto-fixable or causing issues
ignore = "D004,D018,H005,H006,H007,H011,H012,H013,H015,H016,H017,H019,H020,H021,H022,H023,H025,H029,H030,H031,H035,H036,H037,J004,J018,T001,T002,T003,T027,T032"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "pip install uv && uv build"
commit_parser = "conventional"

[tool.semantic_release.changelog.default_templates]
changelog_file = "docs/CHANGELOG.md"
output_format = "md"

[tool.semantic_release.commit_parser_options]
parse_squash_commits = true
ignore_merge_commits = true


[tool.semantic_release.branches.alpha]
prerelease = false