[project]
name = "jitter-llm"
version = "0.2.2"
description = "Build your program Just-in-Time with LLM Assistance"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Jason Steving", email = "jasonmail99@gmail.com" }]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: User Interfaces",
    "Intended Audience :: Developers",
]
license = { file = "LICENSE" }
dependencies = [
    "google-genai>=1.19.0",
    "pydantic>=2.11.5",
]

[project.optional-dependencies]
# Users don't need to install these deps unless they want to use Jitter as a cli tool
# to generate program scaffolding that can be implemented seamlessly with Jitter.
cli = ["claude-code-sdk>=0.0.10", "asyncclick>=8.1.8"]

[dependency-groups]
dev = [
    "marimo>=0.13.15",
    "ruff>=0.6.0",
    "pyright>=1.1.350",
    "asyncclick>=8.1.8",
    "claude-code-sdk>=0.0.10",
]

[project.scripts]
jitter = "jitter.scaffold:main"

[project.urls]
Homepage = "https://github.com/JasonSteving99/Jitter"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["src/jitter"]
[tool.hatch.build.targets.wheel]
packages = ["src/jitter"]

# I'll use this to deploy test versions to testpypi via:
# $ uv build
# $ uv publish --index=testpypi
[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true  # Ensure that uv doesn't pull any deps from testpypi without me noticing.


[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP", "W291", "W293"]
extend-safe-fixes = [
    "W291",  # trailing-whitespace: Remove trailing whitespace
    "W293",  # blank-line-with-whitespace: Remove whitespace from blank lines
]

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "basic"
