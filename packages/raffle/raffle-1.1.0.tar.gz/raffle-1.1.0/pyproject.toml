[build-system]
requires = [
    "f90wrap>=0.2.14,<=0.2.16",
    "numpy>=1.26.4,<=2.2",
    "meson~=1.6.0",
    "cython~=3.0.11",
    "scikit-build-core",
]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
cmake.version = "CMakeLists.txt"
ninja.version = ">=1.10"
cmake.build-type = "Release"
cmake.source-dir = "."
cmake.args = [
    "-DBUILD_PYTHON=On",
    "-DBUILD_EXECUTABLE=Off",
    "-DREMAKE_F90WRAP=Off",
]
sdist.cmake = true
wheel.cmake = true
build-dir="build/{wheel_tag}"
wheel.expand-macos-universal-tags = true
ninja.make-fallback = true
sdist.reproducible = true
# dev purposes only
build.verbose = false

[project]
name = "raffle"
dynamic = ["version"]
dependencies = [
    "ase>=3.23.0",
    "numpy>=1.26.4,<=2.2",
    "f90wrap>=0.2.14,<=0.2.16",
]
requires-python = ">=3.11,<3.14"
authors = [
    { name = "Ned Thaddeus Taylor", email = "n.t.taylor@exeter.ac.uk" },
    { name = "Joe Pitfield", email = "joepitfield@gmail.com" },
    { name = "Steven Paul Hepplestone", email = "s.p.hepplestone@exeter.ac.uk" },
]
description = "A material interface structure prediction package"
readme = "README.md"
license = { text = 'GNU General Public License v3.0 or later'}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Fortran",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/ExeQuantCode/raffle"
Documentation = "https://raffle-fortran.readthedocs.io/"
Repository = "https://github.com/ExeQuantCode/raffle"
Issues = "https://github.com/ExeQuantCode/raffle/issues"

[project.optional-dependencies]
tests = [
    "pytest",
    "pytest-cov",
    "parameterized",
    "unittest",
]

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "fpm.toml"
regex = '(?i)^version *= \"(?P<value>.+?)\"'
