name: run-cmake-build

on:
  pull_request:
    branches:
      - main
      - development
    types:
      - opened
      - synchronize
    paths:
      - ".github/workflows/cmake.yml"
      - "CMakeLists.txt"
      - "**.f90"
      - "**.F90"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: cmake
  cancel-in-progress: false

jobs:
  build-and-test-cmake-debug:
    environment:
      name: github-pages
    name: Build and test in debug mode
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [ "3.11", "3.12", "3.13" ]
        toolchain:
        - {fortran-compiler: gcc, fc-version: 13}
        - {fortran-compiler: gcc, fc-version: 14}
        # - {fortran-compiler: intel, fc-version: '2024.1'}
        # - {fortran-compiler: intel-classic,fc- version: '2021.10'}
        # exclude:
        #   - os: macos-latest
        #     toolchain: {fortran-compiler: intel, fc-version: '2024.1'}
        #   - os: macos-latest
        #     toolchain: {fortran-compiler: intel-classic,fc- version: '2021.10'}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: actions-setup-python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: actions-setup-cmake
        uses: jwlawson/actions-setup-cmake@v2.0.1
        with:
          cmake-version: '3.24.x'

      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.fortran-compiler }}
          version: ${{ matrix.toolchain.fc-version }}

      - name: Install gcovr
        run: |
          pip --version
          pip install gcovr

      - name: Install python dependencies
        run: |
          python --version
          python -m pip install pip-tools
          python -m piptools compile -o requirements.txt pyproject.toml --all-build-deps
          python -m pip install -r requirements.txt

      - name: Install OpenMP runtime (Linux only)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libgomp1

      - name: Compile
        run: |
          cmake --version
          python --version
          ${{ env.FC }} --version
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_Fortran_COMPILER=${{ env.FC }} -DPython_EXECUTABLE=$(which python) -DPython_INCLUDE_DIRS=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") ..
          make
          make install

      - name: Test
        run: |
          ${{ env.FC }} --version
          ctest

  build-and-test-cmake-release:
    environment:
      name: github-pages
    name: Build and test in release mode
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [ "3.11", "3.12", "3.13" ]
        toolchain:
        - {fortran-compiler: gcc, fc-version: 13}
        # - {fortran-compiler: intel, fc-version: '2024.1'}
        # - {fortran-compiler: intel-classic,fc- version: '2021.10'}
        # exclude:
        #   - os: macos-latest
        #     toolchain: {fortran-compiler: intel, fc-version: '2024.1'}
        #   - os: macos-latest
        #     toolchain: {fortran-compiler: intel-classic,fc- version: '2021.10'}
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: actions-setup-python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: actions-setup-cmake
        uses: jwlawson/actions-setup-cmake@v2.0.1
        with:
          cmake-version: '3.24.x'

      - uses: fortran-lang/setup-fortran@v1
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.fortran-compiler }}
          version: ${{ matrix.toolchain.fc-version }}

      - name: Install python dependencies
        run: |
          python --version
          python -m pip install pip-tools
          python -m piptools compile -o requirements.txt pyproject.toml --all-build-deps
          python -m pip install -r requirements.txt

      - name: Install OpenMP runtime (Linux only)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libgomp1

      - name: Compile
        run: |
          cmake --version
          python --version
          ${{ env.FC }} --version
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_Fortran_COMPILER=${{ env.FC }} -DPython_EXECUTABLE=$(which python) -DPython_INCLUDE_DIRS=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") ..
          make
          make install

      - name: Test
        run: |
          ${{ env.FC }} --version
          ctest
