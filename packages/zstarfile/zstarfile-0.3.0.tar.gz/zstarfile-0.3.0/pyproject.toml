# Copyright (C) 2024 Maxwell G <maxwell@gtmx.me>
# SPDX-License-Identifier: MIT

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "zstarfile"
description = "tarfile extension with additional compression algorithms and PEP 706 by default"
dynamic = ["version"]
authors = [{ name = "Maxwell G", email = "maxwell@gtmx.me" }]
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    # NOTE: lz4 is not yet supported on Python 3.14.
    # See https://github.com/python-lz4/python-lz4/pull/303.
    "Programming Language :: Python :: 3.14",
    "Development Status :: 3 - Alpha",
    "Typing :: Typed",
]
dependencies = [
]
requires-python = ">=3.9"

[project.optional-dependencies]
# User-facing
lz4 = [
    "lz4",
]
zstandard = [
    "pyzstd",
]
all = [
    "zstarfile[lz4]",
    "zstarfile[zstandard]",
]

# Dev
codeqa = [
    "pymarkdownlnt",
    "ruff>=0.2.0",
    "reuse",
]
formatters = [
    "black",
    "isort",
]
typing = [
    "zstarfile[all]",
    "mypy",
    "pytest",
    "typing_extensions",
    # For checking noxfile.py
    "nox",
]
test = [
    "zstarfile[all]",
    "pytest",
]
dev = [
    "zstarfile[codeqa]",
    "zstarfile[formatters]",
    "zstarfile[test]",
    "zstarfile[typing]",
    "nox",
]

[project.urls]
Homepage = "https://sr.ht/~gotmax23/zstarfile"
Source = "https://git.sr.ht/~gotmax23/zstarfile"
"Mailing List" = "https://lists.sr.ht/~gotmax23/zstarfile"
Changelog = "https://git.sr.ht/~gotmax23/zstarfile/tree/main/item/NEWS.md"


[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]


[tool.isort]
profile = "black"
add_imports = [
    'from __future__ import annotations',
]


[tool.mypy]
check_untyped_defs = true


[tool.pymarkdown.plugins.first-line-heading]
enabled = false
[tool.pymarkdown.plugins.no-inline-html]
enabled = false
[tool.pymarkdown.plugins.line-length]
# Code blocks can be a little longer than regular text
code_block_line_length = 120
[tool.pymarkdown.plugins.no-duplicate-heading]
# NEWS.md deliberately has duplicate headings
enabled = false


[tool.coverage.run]
source = [
    "zstarfile",
]

[tool.coverage.paths]
source = [
    "src",
    "*/site-packages",
]

[tool.coverage.report]
# https://coverage.readthedocs.io/en/latest/excluding.html#advanced-exclusion
# These should use single quotes in TOML, as they're regular expressions.
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    'if t\.TYPE_CHECKING:',
    '@(abc\.)?abstractmethod',
    '@overload',
]

[[tool.mypy.overrides]]
module = [
    "lz4.*",
]
ignore_missing_imports = true
