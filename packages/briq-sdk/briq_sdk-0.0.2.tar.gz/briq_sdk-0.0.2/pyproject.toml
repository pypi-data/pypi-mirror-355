[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "briq-sdk"
dynamic = ["version"]
description = "A modern Python SDK for the Briq SMS API"
readme = "README.md"
license = "MIT"
authors = [{ name = "Elution Hub", email = "elusion.lab@gmail.com" }]
maintainers = [{ name = "Elution Hub", email = "elusion.lab@gmail.com" }]
keywords = [
    "sms",
    "api",
    "briq",
    "messaging",
    "notifications",
    "sdk",
    "communications",
    "text-messaging"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "typing-extensions>=4.0.0; python_version < '3.11'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "respx>=0.20.0",
    "mypy>=1.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
examples = ["asyncio"]

[project.urls]
Homepage = "https://github.com/elusionhub/briq-python-sdk"
Documentation = "https://github.com/elusionhub/briq-python-sdk#readme"
Repository = "https://github.com/elusionhub/briq-python-sdk.git"
Issues = "https://github.com/elusionhub/briq-python-sdk/issues"
Changelog = "https://github.com/elusionhub/briq-python-sdk/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "src/elusion/briq/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/elusion"]

[tool.hatch.build]
include = ["src/elusion"]

[tool.setuptools.package-data]
"briq" = ["py.typed"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/briq",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "asyncio: Async tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/elusion/briq"]
omit = ["*/tests/*", "*/examples/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
implicit_reexport = false
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 110
select = ["E", "W", "F", "I", "B", "C4", "UP", "ARG001"]
ignore = ["E501", "B008", "C901", "W191"]
unfixable = ["B"]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["ARG", "FBT"]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["briq"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[tool.bumpversion]
current_version = "0.0.2"
commit = true
tag = true
tag_name = "{new_version}"
message = "Bump version: {current_version} â†’ {new_version}"

[[tool.bumpversion.files]]
filename = "src/elusion/briq/__init__.py"
