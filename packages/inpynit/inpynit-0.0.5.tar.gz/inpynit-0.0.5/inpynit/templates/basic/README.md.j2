# {{ project_name }}

{{ description }}

## 🚀 특징

- 🏷️ **Git 태그 기반 버전 관리**: setuptools-scm을 사용한 자동 버전 관리
- 🛠️ **모던한 개발 도구**: ruff, pytest 포함
- 📦 **자동 빌드**: `python -m build`로 간편한 패키지 빌드

## 📦 설치

```bash
pip install {{ project_name }}
```

## 🎯 사용법

```python
from {{ project_slug }} import main

# 여기에 사용 예제를 작성하세요
main()
```

## 🛠️ 개발

### 개발 환경 설정

```bash
git clone https://github.com/{{ author }}/{{ project_name }}.git
cd {{ project_name }}
pip install -e ".[dev]"
```

### 개발 도구

```bash
# 도움말 확인
make help

# 테스트 실행
make test

# 코드 포매팅
make format

# 코드 린팅
make lint

# 패키지 빌드
make build
```

## 📋 버전 관리

이 프로젝트는 **Git 태그 기반 자동 버전 관리**를 사용합니다.

**Git 태그를 생성하면 패키지 버전이 자동으로 동일하게 됩니다!**

```bash
# Git 태그 생성
git tag 1.0.0

# 빌드 시 자동으로 동일한 버전 적용
python -m build
# 결과: {{ project_name }}-1.0.0-py3-none-any.whl

# 패키지 내 버전도 자동으로 동일
python -c "import {{ project_slug }}; print({{ project_slug }}.__version__)"
# 출력: 1.0.0
```

setuptools-scm이 Git 태그를 읽어서 모든 버전을 자동으로 동기화합니다.

### 버전 관리 명령어

```bash
# 현재 버전 확인
make version

# 새 버전 태그 생성 및 빌드
make tag-patch  # 패치 버전 증가 (1.0.0 → 1.0.1)
make tag-minor  # 마이너 버전 증가 (1.0.0 → 1.1.0)
make tag-major  # 메이저 버전 증가 (1.0.0 → 2.0.0)
```

{% if license %}## 📄 라이선스

{{ license }} License{% endif %}

## 🤝 기여

기여를 환영합니다! Pull Request를 보내주세요.

---

✨ Generated with ❤️ by [inpynit](https://github.com/inpynit/inpynit) 