name: 🚀 Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: 📦 Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: 🏗️ Build package
        run: python -m build

      - name: 🔍 Verify build
        run: |
          ls -la dist/
          python -m twine check dist/*

      - name: 📋 Extract release notes
        id: extract-notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          TAG_MESSAGE=$(git tag -l --format='%(contents)' "$VERSION")
          echo "tag_message=$TAG_MESSAGE" >> $GITHUB_OUTPUT

      - name: 🎉 Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.extract-notes.outputs.version }}
          body: |
            ## 🎉 inpynit ${{ steps.extract-notes.outputs.version }} 릴리스

            ${{ steps.extract-notes.outputs.tag_message }}

            ### 📦 설치 방법

            ```bash
            pipx install inpynit
            ```

          draft: false
          prerelease: false

      - name: 📤 Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/inpynit-${{ steps.extract-notes.outputs.version }}-py3-none-any.whl
          asset_name: inpynit-${{ steps.extract-notes.outputs.version }}-py3-none-any.whl
          asset_content_type: application/octet-stream
