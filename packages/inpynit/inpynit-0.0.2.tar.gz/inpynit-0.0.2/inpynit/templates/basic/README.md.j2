# {{ project_name }}

{{ description }}

## 🚀 특징

- 🏷️ **Git 태그 기반 버전 관리**: setuptools-scm을 사용한 자동 버전 관리
- 🛠️ **모던한 개발 도구**: ruff, pytest 포함
- 📦 **자동 빌드**: `python -m build`로 간편한 패키지 빌드

## 📦 설치

```bash
pip install {{ project_name }}
```

## 🎯 사용법

```python
from {{ project_slug }} import main

# 여기에 사용 예제를 작성하세요
main()
```

## 🛠️ 개발

### 개발 환경 설정

```bash
git clone https://github.com/{{ author }}/{{ project_name }}.git
cd {{ project_name }}
pip install -e ".[dev]"
```

### 개발 도구

```bash
# 도움말 확인
make help

# 테스트 실행
make test

# 코드 포매팅
make format

# 코드 린팅
make lint
```

## 📋 버전 관리

이 프로젝트는 **Git 태그 기반 자동 버전 관리**를 사용합니다.

### 🎯 핵심 개념: Git 태그 = 패키지 버전

**Git 태그를 생성하면 빌드 결과물의 버전이 자동으로 동일하게 됩니다!**

```bash
# 🏷️ Git 태그 생성
git tag 1.0.0

# 📦 빌드 시 자동으로 동일한 버전 적용
python -m build
# 결과: {{ project_name }}-1.0.0-py3-none-any.whl

# 🔍 패키지 내 버전도 자동으로 동일
python -c "import {{ project_slug }}; print({{ project_slug }}.__version__)"
# 출력: 1.0.0
```

**더 이상 여러 파일에서 버전을 수동으로 변경할 필요가 없습니다!** 
setuptools-scm이 Git 태그 하나로 모든 버전을 자동 동기화합니다.

### 버전 확인
```bash
# 현재 버전 상태 확인
make version-status
```

### 새 버전 릴리스
```bash
# 패치 버전 증가 (0.1.0 → 0.1.1)
make version-bump-patch

# 마이너 버전 증가 (0.1.0 → 0.2.0)  
make version-bump-minor

# 메이저 버전 증가 (0.1.0 → 1.0.0)
make version-bump-major

# 수동으로 버전 관리
python scripts/version_manager.py bump
```

### 빌드 및 배포
```bash
# 패키지 빌드 (Git 태그 기반 버전 자동 적용)
make build

# 전체 릴리스 워크플로우
make release-patch  # 패치 버전 증가 + 빌드
```

### 💡 버전 관리 팁

**기존 방식 (수동)** ❌:
```bash
# pyproject.toml에서 version = "1.0.0" 수정
# __init__.py에서 __version__ = "1.0.0" 수정
# setup.py에서 version="1.0.0" 수정
# 실수 하나면 버전 불일치 발생!
```

**inpynit 방식 (자동)** ✅:
```bash
git tag 1.0.0        # 태그 하나만 생성
python -m build      # 모든 버전 자동 동기화!
```

**한 번의 Git 태그로 모든 버전이 자동으로 일치합니다!** 🎯

## 🏷️ 버전 규칙

### Git 태그 형태
- **릴리스**: `1.0.0` (v 접두사 없음, Semantic Versioning)
- **개발 중**: `1.0.1.dev5+g1234567` (태그 이후 커밋 있을 때 자동 생성)

### 자동 동기화 범위
setuptools-scm이 다음을 **모두 동일한 버전으로** 자동 설정:
- 📦 **빌드 파일명**: `{{ project_name }}-1.0.0-py3-none-any.whl`
- 🐍 **패키지 `__version__`**: `{{ project_slug }}.__version__ == "1.0.0"`
- 📋 **메타데이터**: `pip show {{ project_name }}` 결과
- 🔍 **Git describe**: `git describe --tags` 결과

{% if license %}## 📄 라이선스

{{ license }} License{% endif %}

## 🤝 기여

기여를 환영합니다! Pull Request를 보내주세요.

---

✨ Generated with ❤️ by [inpynit](https://github.com/inpynit/inpynit) 