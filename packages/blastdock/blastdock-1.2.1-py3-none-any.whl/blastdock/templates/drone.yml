template_info:
  description: "Drone CI - Continuous Integration platform"
  version: "1.0"
  services:
    - drone-server
    - drone-runner

fields:
  server_port:
    type: port
    description: "Server port"
    default: "8080"
    required: true
  
  rpc_secret:
    type: password
    description: "RPC secret"
    default: "auto"
    required: true
  
  github_client_id:
    type: string
    description: "GitHub OAuth client ID"
    default: ""
    required: true
  
  github_client_secret:
    type: password
    description: "GitHub OAuth client secret"
    default: ""
    required: true
  
  server_host:
    type: domain
    description: "Server hostname"
    default: "localhost"
    required: true

compose:
  version: '3.8'
  
  services:
    drone-server:
      image: drone/drone:latest
      container_name: "{{ project_name }}_drone_server"
      restart: unless-stopped
      ports:
        - "{{ server_port }}:80"
      environment:
        - DRONE_GITHUB_CLIENT_ID={{ github_client_id }}
        - DRONE_GITHUB_CLIENT_SECRET={{ github_client_secret }}
        - DRONE_RPC_SECRET={{ rpc_secret }}
        - DRONE_SERVER_HOST={{ server_host }}
        - DRONE_SERVER_PROTO=http
        - DRONE_TLS_AUTOCERT=false
      volumes:
        - drone_server_data:/data
      networks:
        - drone_network
    
    drone-runner:
      image: drone/drone-runner-docker:latest
      container_name: "{{ project_name }}_drone_runner"
      restart: unless-stopped
      depends_on:
        - drone-server
      environment:
        - DRONE_RPC_PROTO=http
        - DRONE_RPC_HOST=drone-server
        - DRONE_RPC_SECRET={{ rpc_secret }}
        - DRONE_RUNNER_CAPACITY=2
        - DRONE_RUNNER_NAME=docker-runner
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      networks:
        - drone_network
  
  volumes:
    drone_server_data:
      driver: local
  
  networks:
    drone_network:
      driver: bridge
