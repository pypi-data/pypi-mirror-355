[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyfasty"
version = "0.1.0b2"
description = "ðŸš€ Native C-powered Python utilities: magic registry, auto events, premium console - Code 10x faster!"
readme = "README.md"
license = {file = "LICENCE.txt"}
authors = [
    {name = "Hakan KARADAG"}
]
maintainers = [
    {name = "Hakan KARADAG"}
]
keywords = [
    "python", "c-extension", "performance", "registry", "console", 
    "logging", "events", "threading", "native", "fast", "utilities"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: C",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Logging",
    "Topic :: Utilities",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
]
requires-python = ">=3.8"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "isort>=5.10.0",
    "pre-commit>=2.17.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "pytest-benchmark>=3.4.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]

[project.urls]
Homepage = "https://github.com/hakan-karadag/pyfasty"
Documentation = "https://github.com/hakan-karadag/pyfasty#readme"
Repository = "https://github.com/hakan-karadag/pyfasty"
"Source Code" = "https://github.com/hakan-karadag/pyfasty"
"Bug Tracker" = "https://github.com/hakan-karadag/pyfasty/issues"
Changelog = "https://github.com/hakan-karadag/pyfasty/releases"

[tool.setuptools]
packages = ["pyfasty"]
include-package-data = true

[tool.setuptools.package-data]
pyfasty = ["*.pyi", "py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["pyfasty"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
    "test"
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["pyfasty"]
omit = [
    "*/tests/*",
    "*/test/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
