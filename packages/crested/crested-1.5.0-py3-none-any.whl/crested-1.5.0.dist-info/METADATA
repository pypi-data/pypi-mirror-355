Metadata-Version: 2.4
Name: crested
Version: 1.5.0
Summary: CREsted: Cis-Regulatory Element Sequence Training, Explanation, and Design
Project-URL: Documentation, https://crested.readthedocs.io/
Project-URL: Source, https://github.com/aertslab/crested/
Project-URL: Home-page, https://github.com/aertslab/crested/
Author: Stein Aerts Lab
Maintainer-email: Lukas Mahieu <lukas.mahieu@kuleuven.be>
License: 
        Academic Non-commercial Software License Agreement
        
        The Licensed Software is developed by and on behalf of the Laboratory of Computational Biology of VIB-KU Leuven and is owned by VIB vzw, located at Rijvisschestraat 120, B-9052 Zwijnaarde, Belgium (hereinafter referred to as "VIB"). By downloading or installing the Licensed Software, the user agrees with the terms and conditions below.
        
        Definitions
        
        “Licensed Software” shall mean CREsted as available on GitHub.
        
        "Effective Date" shall mean the date on which you download or install CREsted (as available on GitHub) on your system and which provide you access to the CREsted tool.
        
        “Commercial Purposes” shall include (1) the use of Licensed Software to provide a service, information or data that is directly or indirectly conveyed to any third party against compensation, (2) any type of transfer of the Licensed Software for compensation, and (3) any other use of Licensed Software that supports commercial entities.
        
        License
        
        1.	Licensed Software is the work of the Aerts lab. The copyright in Licensed Software is owned by VIB.
        
        2.	Subject to the terms and conditions of this Agreement, VIB hereby grants and the user accepts a non-exclusive, non-transferable license to use the Licensed Software for strictly internal academic research use only, on your own behalf or on behalf of your institution, and not for Commercial Purposes.
        
        3.	The user confirms to be an academic user. For academic users, there is no license fee.
        
        4. The user shall acknowledge VIB as the provider of Licensed Software and shall include the following reference “Kempynck et al., CREsted: Cis Regulatory Element Sequence Training, Explanation, and Design. Zenodo (2024) 10.5281/zenodo.13320756: 2024-08” in any manuscript describing data obtained using Licensed Software.
        
        5.	This license does not entitle the user to receive from VIB hard-copy documentation, technical support, telephone assistance, or enhancements or updates to the Licensed Software, and nothing contained herein shall be interpreted as to require VIB, its faculty, employees or students to provide maintenance, installation services, debugging, consultation or end-user support of any kind.
        
        6.	The title and copyright to Licensed Software and any associated programs and documentation shall remain with VIB. The user agrees to preserve the same.
        
        7.	The user agrees not to make any copies of Licensed Software except for use in the user’s laboratory, without VIB’s prior written consent.  The user agrees to place the appropriate copyright notice on any such copies.
        
        8.	The user shall not distribute Licensed Software to other laboratories within user’s institution. The user shall not transfer Licensed Software to another location or person outside of user’s institution without VIB’s prior and written permission.
        
        9.	The user shall not market or otherwise benefit commercially from any product utilizing any portion of Licensed Software, nor any derivative works of Licensed Software, without first entering into a separate commercial license with VIB.
        
        10.	Except as otherwise expressly permitted in this Agreement, the user must not (i) modify or create any derivative works of the Licensed Software or documentation, including customization, translation or localization; (ii) decompile, disassemble, reverse engineer, or otherwise attempt to derive the source code for the Licensed Software; (iii) remove or alter any trademark, logo, copyright or other proprietary notices, legends, symbols or labels in the Licensed Software.
        
        11.	The user acknowledges that the Licensed Software is proprietary to VIB. The software code shall be treated as trade secrets and confidential information of VIB, and the user agrees to use all reasonable efforts to hold the same in confidence. The user’s obligation for confidentiality shall not extend to any information which (i) is or becomes generally available to the public, (ii) is already known to or subsequently disclosed by third parties to the user and at its free disposal, or (iii) is independently developed by the user or its affiliates without the use of the confidential information disclosed by VIB, or (iv) is required by law or legal process to be disclosed.
        
        12.	The user acknowledges that Licensed Software is a research tool and provided free of charge, it is only provided “as is”. VIB makes no representations or warranties of any type whatsoever, express or implied, regarding the Licensed Software. VIB expressly disclaims all representations and warranties regarding the Licensed Software, including but not limited to any representations or warranties of merchantability or fitness for any particular application or that the use of the Licensed Software will not infringe any patents, copyrights or trademarks or other rights of third parties, or any warranty that the rights and licenses granted hereunder comprise all the rights and licenses necessary or desirable to use the Licensed Software for internal non-commercial research purposes as permitted by this Agreement. The entire risk as to the quality and performance of the Licensed Software is borne by the user.
        
        13.	VIB shall not be responsible for losses of any kind resulting from the use of Licensed Software, and can in no way provide compensation for any losses sustained, including but not limited to, any obligation, liability, right, claim or remedy for tort, or for any actual or alleged infringement of patents, copyrights, trade secrets, or similar rights of third parties, nor any business expense, machine downtime or damages caused by any deficiency, defect or error in Licensed Software or mal-function thereof, nor any incidental or consequential damages, however caused.
        
        14.	The user will indemnify, defend and hold harmless VIB, its directors, officers, employees and agents from and against all liability, losses, damages and expenses (including attorney’s fees and costs) arising out of any claims, demands, actions or other proceedings made or instituted by any third party against any of them and arising out of or relating to any breach of this Agreement by the user, or any use of the Licensed Software by the user, except insofar as such claims or liability result from VIB’s gross negligence or willful misconduct.
        
        15.	This Agreement and the license rights granted herein shall become effective as of the date the user downloaded the Licensed Software and shall continue in full force until the user deletes the Licensed Software and any and all related files from the user’s computing system, unless terminated in accordance with this Section. Upon one party's breach of any agreement, covenant, or representation made in this Agreement, the agreement will automatically end thirty (30) days after such breach. Either party shall have the right, at any time, to terminate this Agreement without cause by written notice to the other party specifying the date of termination. Upon termination, the user shall destroy all full and partial copies of the Licensed Software. The user shall forward written notice to VIB that all programs containing Licensed Software have been deleted from all computer libraries and storage or memory devices and are no longer stored therein.
        
        16.	This Agreement shall be construed in accordance with the laws of Belgium. The courts of Belgium shall have exclusive jurisdiction.
        
        17.	The parties agree that this Agreement is the complete and exclusive agreement among the parties and supersedes all proposals and prior agreements whether written or oral, and all other communications among the parties relating to the subject matter of this Agreement. This Agreement cannot be modified except in writing and signed by both parties. Failure by either party at any time to enforce any of the provisions of this Agreement shall not constitute a waiver by such party of such provision nor in any way affect the validity of this Agreement.
        
        18.	The invalidity of singular provisions does not affect the validity of the entire understanding. The parties are obligated, however, to replace the invalid provisions by a regulation, which comes closest to the economic intent of the invalid provision. The same shall apply mutatis mutandis in case of a gap.
        
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
License-File: LICENSE
Requires-Python: >=3.9
Requires-Dist: anndata
Requires-Dist: biothings-client<0.4.0
Requires-Dist: keras>=3.4.0
Requires-Dist: logomaker
Requires-Dist: loguru
Requires-Dist: memelite
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: pooch
Requires-Dist: pybigtools>=0.2.0
Requires-Dist: pysam
Requires-Dist: scanpy
Requires-Dist: scikit-learn
Requires-Dist: seaborn
Requires-Dist: tqdm
Requires-Dist: wandb>=0.12.10
Provides-Extra: dev
Requires-Dist: pre-commit; extra == 'dev'
Requires-Dist: pydocstyle; extra == 'dev'
Requires-Dist: pytest; extra == 'dev'
Requires-Dist: twine>=4.0.2; extra == 'dev'
Provides-Extra: doc
Requires-Dist: docutils!=0.18.*,!=0.19.*,>=0.8; extra == 'doc'
Requires-Dist: ipykernel; extra == 'doc'
Requires-Dist: ipython; extra == 'doc'
Requires-Dist: modisco-lite; extra == 'doc'
Requires-Dist: myst-nb; extra == 'doc'
Requires-Dist: pandas; extra == 'doc'
Requires-Dist: ruff; extra == 'doc'
Requires-Dist: sphinx-autodoc-typehints; extra == 'doc'
Requires-Dist: sphinx-book-theme>=1.0.0; extra == 'doc'
Requires-Dist: sphinx-copybutton; extra == 'doc'
Requires-Dist: sphinx>=4; extra == 'doc'
Requires-Dist: sphinxcontrib-bibtex>=1.0.0; extra == 'doc'
Requires-Dist: sphinxext-opengraph; extra == 'doc'
Requires-Dist: tensorflow; extra == 'doc'
Provides-Extra: test
Requires-Dist: anndata; extra == 'test'
Requires-Dist: coverage; extra == 'test'
Requires-Dist: genomepy; extra == 'test'
Requires-Dist: pytest; extra == 'test'
Description-Content-Type: text/markdown

<div align="center">
   <img src="https://raw.githubusercontent.com/aertslab/CREsted/main/docs/_static/img/crested_banner.png",
   height=300>
</div>

# CREsted: Cis Regulatory Element Sequence Training, Explanation, and Design

[![Tests][badge-tests]][link-tests]
[![Documentation][badge-docs]][link-docs]

[badge-tests]: https://img.shields.io/github/actions/workflow/status/aertslab/CREsted/test.yaml?branch=main
[link-tests]: https://github.com/aertslab/CREsted/actions/workflows/test.yaml
[badge-docs]: https://img.shields.io/readthedocs/crested

## Introduction

**CREsted** (Cis-Regulatory Element Sequence Training, Explanation, and Design) is an easy-to-use deep learning package for training enhancer models on single-cell ATAC sequencing (scATAC-seq) data. CREsted provides comprehensive analyses and tutorials to study enhancer codes and the ability to design synthetic enhancer sequences at a cell type-specific, nucleotide-level resolution. Integrated into the **scverse** framework, CREsted is compatible with outcomes from established scATAC-seq processing tools. It employs novel scATAC-seq preprocessing techniques, such as peak height normalization across cell types, offers flexibility and variety in deep learning modeling architectures and tasks, and contains thorough analysis of the cell type-specific enhancer codes captured during modeling that can also be used for the design of synthetic sequences.

## Getting started

Please refer to the [documentation][link-docs]. In particular, the

-   [Tutorials][link-tutorials]
-   [API documentation][link-api]

## Installation

You need to have Python 3.9 or newer installed on your system and a deep learning backend to be able to use CREsted. Installation takes around five minutes.

CREsted is build on top of keras 3 and can therefore be used with your deep learning backend of choice (Tensorflow or Pytorch).

1. Install either [Tensorflow](https://www.tensorflow.org/install) or [Pytorch](https://pytorch.org/get-started/locally/) for GPU.
   Refer to the installation instructions on those pages to ensure you have the correct version of CUDA and cuDNN installed.
   If you don't have a preference and don't know which backend to choose, refer to [choosing your backend](#choosing-your-backend).
   If you have all the latest drivers installed, this installation boils down to doing:

```bash
pip install tensorflow[and-cuda]
# or
pip install torch
```

2. Install the latest release of `crested` from [PyPI](https://pypi.org/project/CREsted/)

```bash
pip install crested
```

3. If you plan on doing motif analysis using tf-modisco (lite) inside CREsted, you will need to run the following additional install:

```bash
pip install "modisco-lite>=2.2.1"
```

Modiscolite may require a cmake installation on your system. If you don't have it, you can install it with:

```bash
pip install cmake
```

## Release notes

See the [changelog][changelog].

## Contact

For questions and help requests, please use the [issue tracker][issue-tracker].

## Citation

Kempynck, N., De Winter, S., et al. [CREsted: modeling genomic and synthetic cell type-specific enhancers across tissues and species.](https://www.biorxiv.org/content/10.1101/2025.04.02.646812v1)

We also store CREsted version backups on Zenodo: [https://doi.org/10.5281/zenodo.15045960](https://doi.org/10.5281/zenodo.15045960)

## Choosing your backend

CREsted is build on top of keras 3.0 and can therefore be used with your deep learning backend of choice (Tensorflow or Pytorch). If you don't have a preference, you can take the following into account:

1. From our (and Keras' official) benchmarking, **Tensorflow** is generally faster than pytorch for training (up to 2x) since Tensorflow operates in graph mode whereas Pytorch uses eager mode. If you plan on training many models, Tensorflow might be the better choice.
2. **Pytorch** is easier to debug and get going. Tensorflow will easily throw a bunch of warnings or fail to detect CUDA if you don't have the exact right versions of CUDA and cuDNN installed. Pytorch seems more lenient in this regard. If you only plan on running predictions or training a few models, Pytorch might be the easier choice.
3. Current Keras 3.0 is still in active development and some features (mainly multi GPU training and weights and biases logging) are currently only supported with the Tensorflow backend. If you plan on using these features, you should choose Tensorflow. We will implement these features in a backend agnostic way as soon as Keras 3.0 has done so (it is on their roadmap).

[issue-tracker]: https://github.com/aertslab/CREsted/issues
[changelog]: https://crested.readthedocs.io/en/stable/changelog.html
[link-docs]: https://crested.readthedocs.io
[link-tutorials]: https://crested.readthedocs.io/en/stable/tutorials/index.html
[link-api]: https://crested.readthedocs.io/en/stable/index.html
[link-api-latest]: https://crested.readthedocs.io/en/latest/index.html
