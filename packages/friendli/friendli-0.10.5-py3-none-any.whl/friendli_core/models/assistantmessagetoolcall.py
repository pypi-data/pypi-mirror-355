"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations

from typing import Literal

import pydantic
from pydantic.functional_validators import AfterValidator
from typing_extensions import Annotated, TypedDict

from friendli_core.types import BaseModel
from friendli_core.utils import validate_const

from .assistantmessagetoolcallfunction import (
    AssistantMessageToolCallFunction,
    AssistantMessageToolCallFunctionTypedDict,
)


class AssistantMessageToolCallTypedDict(TypedDict):
    function: AssistantMessageToolCallFunctionTypedDict
    id: str
    r"""The ID of tool call."""
    type: Literal["function"]
    r"""The type of tool call."""


class AssistantMessageToolCall(BaseModel):
    function: AssistantMessageToolCallFunction

    id: str
    r"""The ID of tool call."""

    TYPE: Annotated[
        Annotated[Literal["function"], AfterValidator(validate_const("function"))],
        pydantic.Field(alias="type"),
    ] = "function"
    r"""The type of tool call."""
