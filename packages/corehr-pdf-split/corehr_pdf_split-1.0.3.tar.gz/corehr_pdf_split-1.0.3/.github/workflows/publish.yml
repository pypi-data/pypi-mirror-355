name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  id-token: write  # Required for trusted publishing

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        python-version: "3.12"
        
    - name: Install dependencies
      run: uv sync --all-extras
      
    - name: Run tests
      run: uv run pytest
      
    - name: Build package
      run: uv build
      
    - name: Check build artifacts
      run: uvx twine check dist/*
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages-${{ github.run_id }}
        path: dist/
        retention-days: 7

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event.inputs.test_pypi == 'true' && 'testpypi' || 'pypi' }}
      url: ${{ github.event.inputs.test_pypi == 'true' && 'https://test.pypi.org/p/corehr-pdf-split' || 'https://pypi.org/p/corehr-pdf-split' }}
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-packages-${{ github.run_id }}
        path: dist/
        
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        python-version: "3.12"
    
    - name: Publish to Test PyPI
      if: github.event.inputs.test_pypi == 'true'
      run: uv publish --publish-url https://test.pypi.org/legacy/
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
    
    - name: Publish to PyPI
      if: github.event.inputs.test_pypi != 'true'
      run: uv publish
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
