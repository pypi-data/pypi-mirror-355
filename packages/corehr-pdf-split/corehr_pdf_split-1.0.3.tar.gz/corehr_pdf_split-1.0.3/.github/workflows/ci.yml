name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]
    workflow_dispatch:

permissions:
    contents: read

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                python-version: ["3.10", "3.11", "3.12"]
                
        steps:
        - uses: actions/checkout@v4
        - uses: astral-sh/setup-uv@v6
          with:
            python-version: ${{ matrix.python-version }}
        - run: uv sync --all-extras
        - run: uv run pytest
        - run: uv run python -m corehr_pdf_split --help
        - run: uv run corehr-pdf-split --help
        
        - name: Coverage
          if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
          run: |
            uv add --dev coverage[toml]
            uv run coverage run -m pytest tests/
            uv run coverage xml
                
        - uses: codecov/codecov-action@v5
          if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
          with:
            files: ./coverage.xml
            fail_ci_if_error: false

    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
        - uses: actions/checkout@v4
        - uses: astral-sh/setup-uv@v6
          with:
            python-version: "3.12"
        - run: uv build
        - run: uvx twine check dist/*
        - uses: actions/upload-artifact@v4
          with:
            name: dist-packages
            path: dist/
