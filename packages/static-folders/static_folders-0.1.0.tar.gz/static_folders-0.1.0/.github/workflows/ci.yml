name: CI Pipeline

on:
  push:
    branches: [ main ]
    tags: ["*"]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
#          version: "latest"
          python-version: "3.12"


      - name: Install lint dependencies
        run: |
          uv pip install ruff

      - name: Run Ruff format & Check
        run: ruff format --check .

      - name: Run flake8
        run: ruff check

  type-check:
    needs: lint
    runs-on: ubuntu-latest
    name: Type-check (mypy)
    strategy:
      matrix:
        python-version: [3.8, 3.13]
    steps:
      - uses: actions/checkout@v4

      # install pixi (only needed for python 3.7)
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: v0.48.1
          cache: true
          locked: false
          frozen: false
#          auth-host: prefix.dev
#          auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}

      - name: Sideload a python for 3.7 (uv version is not really supported but seems to work sometimes?)
        # https://github.com/astral-sh/uv/issues/12122
        if: ${{ matrix.python-version == '3.7' }}
        run: pixi global install "python=3.7"

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: ${{ matrix.python-version }}


      - name: Run mypy with python ${{ matrix.python-version }}
        run: uv run mypy .

  tests:
    needs: type-check
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.8"
          - os: ubuntu-latest
            python-version: "3.10"
          - os: ubuntu-latest
            python-version: "3.13"
          - os: windows-latest
            python-version: "3.13"
    steps:
      - uses: actions/checkout@v3

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: uv run pytest
