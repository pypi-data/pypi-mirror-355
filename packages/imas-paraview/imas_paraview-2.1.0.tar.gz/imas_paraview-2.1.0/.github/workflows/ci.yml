name: CI 

on: push

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[linting]

    - name: Run Ruff linter
      run: |
        ruff check --output-format=github imas_paraview

    - name: Run Ruff formatter
      run: |
        ruff format --diff imas_paraview

  pytest:
    runs-on: ubuntu-latest
    needs: linting
    env:
      paraview-download-file: ParaView-5.13.3-MPI-Linux-Python3.10-x86_64.tar.gz
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        # Note: Python version **must** match the one in the paraview binaries
        python-version: '3.10'
        cache: 'pip'  # caching pip dependencies

    - name: Cache paraview
      id: cache-paraview
      uses: actions/cache/restore@v4
      with:
        path: paraview/
        key: ${{ env.paraview-download-file }}

    - if: ${{ steps.cache-paraview.outputs.cache-hit != 'true' }}
      name: Download paraview binaries
      run: |
        wget "https://www.paraview.org/paraview-downloads/download.php?submit=Download&version=v5.13&type=binary&os=Linux&downloadFile=${{ env.paraview-download-file }}" -O paraview.tar.gz
        tar -xzf paraview.tar.gz
        mv ParaView* paraview
    
    - name: Always save cache (even if pytest would fail)
      id: cache-paraview-save
      if: always() && steps.cache-paraview.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: ${{ steps.cache-paraview.outputs.cache-primary-key }}
        path: paraview/

    - name: Install dependencies
      run: |
        # Install dependencies required for running paraview gui in xfvb-run:
        sudo apt install -y libqt5gui5-gles

        # Install python dependencies
        python -m venv venv
        . venv/bin/activate
        pip install .[test]
        # vtk installed from PyPI conflicts with the pvpython one(?)
        pip uninstall --yes vtk

    - name: Run tests
      run: |
        export PATH="$PWD/paraview/bin:$PATH"
        pvpython --venv venv -m pytest --cov=imas_paraview --cov-report=term-missing --cov-report=html

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-3.11
        path: htmlcov
        retention-days: 1

  benchmarks:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Fetch develop/master branches
      run: |
        git fetch origin develop:refs/remotes/origin/develop
        git fetch origin main:refs/remotes/origin/main
        git show-ref --verify --quiet refs/heads/develop || git branch develop origin/develop
        git show-ref --verify --quiet refs/heads/main || git branch main origin/main

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[benchmark]

    - name: Ensure machine configuration
      run: |
        asv machine --yes

    - name: Run ASV benchmarks
      run: |
        asv run -v --show-stderr --skip-existing-successful HEAD^!
        asv run -v --show-stderr --skip-existing-successful develop^!
        asv run -v --show-stderr --skip-existing-successful main^!

    - name: Compare results
      run: |
        if [ "$(git rev-parse --abbrev-ref HEAD)" == "develop" ]; then
          echo ""
        else
          asv compare develop HEAD
        fi

    - name: Publish results
      run: |
        asv publish

    - name: Upload HTML reports as artifact
      uses: actions/upload-artifact@v4
      with:
        name: asv-html-reports
        path: .asv/html
        retention-days: 1

  docs:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[docs]

    - name: Build documentation
      run: |
        make -C docs html

    - name: Upload docs artifact
      uses: actions/upload-artifact@v4
      with:
        name: html-docs
        path: docs/_build/html/
        retention-days: 1
