[project]
name = "snekuity"
version = "0.1.1"
description = "Pythonic API for GnuCash"
readme = "README.md"
authors = [{ name = "Claudia Pellegrino", email = "clau@tiqua.de" }]
license = "Apache-2.0"
# See https://pypi.org/pypi?%3Aaction=list_classifiers
classifiers = ["Development Status :: 3 - Alpha", "Topic :: Utilities"]
requires-python = ">=3.11"

dependencies = ["pyxdg"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = ["autopep8", "mypy", "poethepoet", "pylint", "ruff"]
doc = ["myst-parser", "sphinx", "sphinx-autoapi", "sphinx-rtd-theme"]
test = ["pytest"]

[project.urls]
documentation = "https://snekuity.readthedocs.io/en/stable/"
source = "https://github.com/claui/snekuity"

[tool.bumpversion]
current_version = "0.1.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version to {new_version}"
allow_dirty = true
commit = false
message = "Bump version to {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
files = "snekuity/**/*.py,tests/**/*.py"
implicit_reexport = false
no_implicit_optional = true
python_version = "3.11"
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.poe]
verbosity = -1

[tool.poe.tasks]
tasks.cmd = "poe -v"
tasks.help = "List available tasks"
doc.shell = """
    set -ex
    rm -rf build/html build/man
    sphinx-build -aqEW -b html doc/sphinx build/html
    sphinx-build -qW -b man doc/sphinx build/man
"""
doc.help = "Generate documentation"
formatcheck.cmd = "ruff format --check"
formatcheck.help = "Check for formatting style violations not covered by the linter"
html.script = "webbrowser:open('build/html/index.html')"
html.help = "Browse HTML documentation"
linter.cmd = "pylint --enable-all-extensions snekuity tests"
linter.help = "Check for style violations"
man.cmd = "man build/man/snekuity.3"
man.help = "Open manual page"
tests.cmd = "pytest"
tests.help = "Run test suite"
typecheck.cmd = "mypy"
typecheck.help = "Run static type checker"

[tool.pyright]
reportUnsupportedDunderAll = "none"

[tool.pytest.ini_options]
filterwarnings = [
    # Deprecation warning emitted by upstream code
    "ignore:builtin type [Ss]wig\\w+ has no __module__ attribute",
]
testpaths = "tests"
xfail_strict = true

[tool.ruff]
line-length = 72
target-version = "py311"

[tool.ruff.format]
quote-style = "single"

[tool.uv]
default-groups = ["dev", "doc", "test"]
fork-strategy = "fewest"
