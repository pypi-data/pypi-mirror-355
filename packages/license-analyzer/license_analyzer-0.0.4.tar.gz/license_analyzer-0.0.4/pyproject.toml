# pyproject.toml
[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "license-analyzer"
version = "0.0.4"
authors = [{ name = "envolution", email = "involution@gmail.com" }]
description = "A robust Python module for analyzing and comparing software licenses"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
]
dependencies = [
  "numpy>=1.21.0",
  "sentence-transformers>=2.0.0",
  "torch>=1.9.0",
  "transformers>=4.0.0",
  "requests>=2.0.0",
  "appdirs>=1.4.4",
  "rich>=12.0.0",
]

[project.urls]
"Homepage" = "https://github.com/envolution/license-analyzer"
"Bug Tracker" = "https://github.com/envolution/license-analyzer/issues"

[project.optional-dependencies]
dev = [
  "pytest>=6.0",
  "pytest-cov>=2.0",
  "black>=21.0",
  "flake8>=3.8",
  "mypy>=0.800",
  "sphinx>=4.0",
  "sphinx-rtd-theme>=1.0",
]

[project.scripts]
"license-analyzer" = "license_analyzer.cli:main"

[tool.setuptools.packages]
find = { include = ["license_analyzer"] }

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=license_analyzer --cov-report=term-missing --cov-report=html"

[tool.coverage.run]
source = ["license_analyzer"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
