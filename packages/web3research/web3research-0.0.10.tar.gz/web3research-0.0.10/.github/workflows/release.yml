name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      test_pypi:
        description: 'Upload to TestPyPI instead of PyPI'
        required: false
        default: false
        type: boolean
      repository_url:
        description: 'Custom PyPI repository URL (optional)'
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      
      - name: Install dependencies
        run: |
          uv sync --dev
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Run automated release (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          ARGS="${{ github.event.inputs.bump_type }}"
          if [ "${{ github.event.inputs.test_pypi }}" = "true" ]; then
            ARGS="$ARGS --test-pypi"
          fi
          if [ -n "${{ github.event.inputs.repository_url }}" ]; then
            ARGS="$ARGS --repository ${{ github.event.inputs.repository_url }}"
          fi
          python scripts/release.py $ARGS
        env:
          PYPI_TOKEN: ${{ github.event.inputs.test_pypi == 'true' && secrets.TEST_PYPI_API_TOKEN || secrets.PYPI_API_TOKEN }}
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_API_TOKEN }}
      
      - name: Build and upload package (tag trigger)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          # Build package
          uv build
          
          # Upload to PyPI
          uv publish --publish-url https://upload.pypi.org/legacy/ --username __token__ --password $PYPI_TOKEN
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      
      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
