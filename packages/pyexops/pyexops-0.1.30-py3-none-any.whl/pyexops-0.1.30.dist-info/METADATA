Metadata-Version: 2.1
Name: pyexops
Version: 0.1.30
Summary: Um simulador Python de Sistemas ExoplanetÃ¡rios para curvas de luz e velocidades radiais.
Home-page: https://github.com/your_username/pyexops
Author: Your Name or Organization
Author-email: your.email@example.com
Project-URL: Bug Tracker, https://github.com/your_username/pyexops/issues
Project-URL: Documentation, https://pyexops.readthedocs.io/
Project-URL: Source Code, https://github.com/your_username/pyexops
Keywords: exoplanets transit simulation light curve radial velocity photometry dask astronomy
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Astronomy
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Natural Language :: English
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: numpy>=1.20
Requires-Dist: matplotlib>=3.4
Requires-Dist: scipy>=1.7
Requires-Dist: dask>=2023.0.0
Requires-Dist: distributed>=2023.0.0
Provides-Extra: all_extras
Requires-Dist: dask-cuda>=2023.0.0; extra == "all-extras"
Requires-Dist: pytest>=6.0; extra == "all-extras"
Requires-Dist: flake8>=3.9; extra == "all-extras"
Requires-Dist: black>=21.0b0; extra == "all-extras"
Requires-Dist: ipykernel; extra == "all-extras"
Requires-Dist: jupyterlab; extra == "all-extras"
Requires-Dist: twine; extra == "all-extras"
Requires-Dist: wheel; extra == "all-extras"
Requires-Dist: build; extra == "all-extras"
Requires-Dist: sphinx>=4.0; extra == "all-extras"
Requires-Dist: sphinx-rtd-theme>=1.0; extra == "all-extras"
Requires-Dist: nbsphinx>=0.8; extra == "all-extras"
Provides-Extra: cuda
Requires-Dist: dask-cuda>=2023.0.0; extra == "cuda"
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: flake8>=3.9; extra == "dev"
Requires-Dist: black>=21.0b0; extra == "dev"
Requires-Dist: ipykernel; extra == "dev"
Requires-Dist: jupyterlab; extra == "dev"
Requires-Dist: twine; extra == "dev"
Requires-Dist: wheel; extra == "dev"
Requires-Dist: build; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx>=4.0; extra == "docs"
Requires-Dist: sphinx-rtd-theme>=1.0; extra == "docs"
Requires-Dist: nbsphinx>=0.8; extra == "docs"
Requires-Dist: ipykernel; extra == "docs"
Provides-Extra: test
Requires-Dist: pytest>=6.0; extra == "test"

# pyExopS (Python Exoplanetary Systems Simulator)

`pyExopS` is a Python-based simulator designed to generate realistic observational data for exoplanetary systems. It aims to provide a flexible and extensible platform for studying phenomena like planetary transits, stellar activity, and various observational systematics.

## Features

-   **Realistic Star Model:** Includes quadratic limb darkening and dynamic stellar spots (umbra and penumbra).
-   **Planet Model:** Customizable orbiting planets with definable physical and orbital parameters.
-   **Advanced PSF Modeling:** Supports Gaussian, Moffat, Airy Disk, Elliptical Gaussian, and Combined Point Spread Functions to simulate realistic instrumental and atmospheric blurring.
-   **Noise Injection:** Injects Poisson (photon) noise and Gaussian (readout) noise for true-to-life data.
-   **Photometry Methods:** Implements various photometric extraction techniques:
    -   Simple Aperture Photometry (SAP)
    -   Optimal Photometry
    -   PSF Fitting Photometry
    -   Simplified Difference Imaging Photometry (DIP)
-   **Data Conditioning:** Includes a PDCSAP-like detrending algorithm to remove instrumental and astrophysical systematics from light curves while preserving transit signals.
-   **Variable Cadence:** Allows simulation of observations with non-uniform time sampling (e.g., high cadence during transit, low cadence out-of-transit).
-   **Parallel Processing:** Leverages Dask for efficient parallel computation across multicore CPUs, NVIDIA GPUs (Dask-CUDA), or distributed clusters.

## Installation

You can install `pyExopS` using pip:

```bash
pip install pyexops
