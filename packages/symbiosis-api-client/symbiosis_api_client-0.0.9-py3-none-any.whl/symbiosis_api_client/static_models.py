# generated by datamodel-codegen:
#   filename:  mainnet.json
#   timestamp: 2025-04-11T07:35:39+00:00


from typing import List, Optional

from pydantic import BaseModel


class Advisor(BaseModel):
    url: str


class OmniPool(BaseModel):
    chainId: int
    address: str
    oracle: str
    generalPurpose: bool


class RevertableAddress(BaseModel):
    default: str


class Icons(BaseModel):
    large: str
    small: str


class Stable(BaseModel):
    name: str
    address: str
    symbol: str
    decimals: int
    chainId: int
    icons: Icons
    deprecated: Optional[bool] = None


class StaticChain(BaseModel):
    id: int
    rpc: str
    filterBlockOffset: int
    stables: List[Stable]
    router: str
    dexFee: int
    metaRouter: str
    metaRouterGateway: str
    bridge: str
    synthesis: str
    portal: str
    fabric: str
    multicallRouter: str
    spareRpcs: Optional[List[str]] = None
    partnerFeeCollector: Optional[str] = None
    tonPortal: Optional[str] = None


class StaticConfigModel(BaseModel):
    advisor: Advisor
    limits: List
    omniPools: List[OmniPool]
    revertableAddress: RevertableAddress
    refundAddress: str
    chains: List[StaticChain]
