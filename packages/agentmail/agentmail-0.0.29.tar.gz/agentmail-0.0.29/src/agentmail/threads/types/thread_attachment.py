# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...messages.types.attachment_content_type import AttachmentContentType
from ...messages.types.attachment_filename import AttachmentFilename
from ...messages.types.attachment_id import AttachmentId
from ...messages.types.attachment_inline import AttachmentInline
from ...messages.types.attachment_size import AttachmentSize


class ThreadAttachment(UniversalBaseModel):
    message_id: str = pydantic.Field()
    """
    Message ID of attachment.
    """

    attachment_id: AttachmentId
    filename: AttachmentFilename
    content_type: AttachmentContentType
    size: AttachmentSize
    inline: AttachmentInline

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
