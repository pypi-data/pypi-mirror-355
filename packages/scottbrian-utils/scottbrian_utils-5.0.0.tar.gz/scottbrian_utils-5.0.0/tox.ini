[tox]
envlist = py312, py313, lint, mypy, mypywrapt, pytest, coverage, docs

[testenv:py{312, 313}-bandit]
description = invoke bandit to verify security
deps =
    bandit

commands =
    bandit -r src

[testenv:py{312, 313}-safety]
description = invoke safety to verify security
deps =
    safety
    pip~=25.1

commands =
    safety scan --output screen

[check-manifest]
ignore =
    .idea/codeStyles/codeStyleConfig.xml
    .idea/dictionaries/Tiger.xml
    .idea/inspectionProfiles/profiles_settings.xml
    .idea/misc.xml
    .idea/modules.xml
    .idea/other.xml
    .idea/scottbrian_utils.iml
    .idea/vcs.xml
    docs/source/_static
    type_stubs/mypywrapt/build/lib/adjust_src/adjust_src.py
    type_stubs/mypywrapt/build/lib/wrapt-stubs/__init__.pyi
    type_stubs/mypywrapt/build/lib/wrapt-stubs/decorators.pyi

[testenv:manifest]
description = invoke check-manifest to check manifest

deps =
    check-manifest

commands =
    check-manifest

[flake8]
max-doc-length = 72
max-line-length = 88
select = C, E, F, W, B, B950
extend-ignore = E203, W503

[testenv:lint]
description = invoke flake8 to check style

deps =
    flake8
    flake8-docstrings
    darglint

commands =
    flake8 --statistics --docstring-convention google src/scottbrian_utils/
    flake8 --statistics --docstring-convention google tests/test_scottbrian_utils/

    # flake8 --statistics --docstring-convention google src/scottbrian_utils/time_hdr.py
    # flake8 --statistics --docstring-convention google tests/test_scottbrian_utils/test_time_hdr.py

    # apparently, having darglint installed via deps causes flake8 to call it similar to the following calls
    # darglint -v 2 src/scottbrian_utils/
    # darglint -v 2 tests/test_scottbrian_utils/

[testenv:darglint]
description = invoke darglint to check style

deps =
    darglint

[darglint]
ignore=DAR402

commands =

    darglint -v 2 src/scottbrian_utils/
    darglint -v 2 tests/test_scottbrian_utils/

[testenv:mypy]
description = invoke mypy to check types

deps =
    mypy
    pytest
    sybil

commands =
    # python -m pip show mypy
    # python -m pip show pytest
    mypy src/scottbrian_utils/
    mypy tests/test_scottbrian_utils/ --cache-dir=/dev/null --show-absolute-path
    # mypy src/scottbrian_utils/diag_msg.py
    # mypy src/scottbrian_utils/file_catalog.py
    # mypy src/scottbrian_utils/flower_box.py
    # mypy src/scottbrian_utils/log_verifier.py
    # mypy src/scottbrian_utils/msgs.py
    # mypy src/scottbrian_utils/stop_watch.py
    # mypy src/scottbrian_utils/time_hdr.py
    # mypy src/scottbrian_utils/timer.py
    # mypy tests/test_scottbrian_utils/test_diag_msg.py --cache-dir=/dev/null --show-absolute-path
    # mypy tests/test_scottbrian_utils/test_file_catalog.py --cache-dir=/dev/null
    # mypy tests/test_scottbrian_utils/test_flower_box.py --cache-dir=/dev/null
    # mypy tests/test_scottbrian_utils/test_log_verifier.py --cache-dir=/dev/null
    # mypy tests/test_scottbrian_utils/test_msgs.py --cache-dir=/dev/null
    # mypy tests/test_scottbrian_utils/test_stop_watch.py --cache-dir=/dev/null
    # mypy tests/test_scottbrian_utils/test_time_hdr.py --cache-dir=/dev/null
    # mypy tests/test_scottbrian_utils/test_timer.py --cache-dir=/dev/null
    # pytest --import-mode=importlib --capture=tee-sys -p no:threadexception
    # tests/test_scottbrian_utils/test_time_hdr.py::TestStartStopHeader::test_print_start_msg
    # pytest --import-mode=importlib --capture=tee-sys {posargs}
    # pytest --cov=scottbrian_utils --cov-report=term --cov-report=html -m cover -p no:threadexception
    # tests/test_scottbrian_utils/test_log_verifier.py
    # pytest --cov=scottbrian_utils --cov-report=term --cov-report=html -p no:threadexception
    # tests/test_scottbrian_utils/test_msgs.py
    # pytest --cov=scottbrian_utils --cov-report=term --cov-report=html -p no:threadexception -m cover2 {posargs}

[testenv:py{312, 313}-mypywrapt]
description = invoke mypy to check types with wrapt stubs

deps =
    mypy
    pytest
    type_stubs/mypywrapt

commands =
    mypy src/scottbrian_utils/diag_msg.py
    mypy src/scottbrian_utils/file_catalog.py
    mypy src/scottbrian_utils/flower_box.py
    adjust_src --pre src/scottbrian_utils/time_hdr.py type_stubs/mypywrapt/time_hdr.py
    mypy type_stubs/mypywrapt/time_hdr.py
    adjust_src --post type_stubs/mypywrapt/time_hdr.py
    mypy tests/test_scottbrian_utils/test_diag_msg.py --cache-dir=/dev/null
    mypy tests/test_scottbrian_utils/test_file_catalog.py --cache-dir=/dev/null
    mypy tests/test_scottbrian_utils/test_flower_box.py --cache-dir=/dev/null
    mypy tests/test_scottbrian_utils/test_time_hdr.py --cache-dir=/dev/null

[testenv:py{312, 313}-coverage]
description = invoke pytest-cov on the package

deps =
    pytest
    pytest-cov
    sybil

commands =
    pytest --cov=scottbrian_utils --cov-config=.coveragerc --cov-report=term --cov-report=html -p no:threadexception {posargs}

[testenv:py{312, 313}-pytest]
description = invoke pytest on the package
deps =
    pytest
    sybil

commands =
    pytest -v --import-mode=importlib --capture=tee-sys -p no:threadexception {posargs}


[testenv:docs]
description = invoke sphinx-build to build the HTML docs

basepython =
    python3.12

deps =
    sphinx
    sphinx-autodoc-typehints
    sphinx_rtd_theme
    pytest
    sybil

commands =
    sphinx-build -b html docs/source docs/build -W -a -E
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"docs") / "build" / "index.html"))'
