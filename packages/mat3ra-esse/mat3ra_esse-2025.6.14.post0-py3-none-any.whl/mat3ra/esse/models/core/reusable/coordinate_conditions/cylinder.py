# generated by datamodel-codegen:
#   filename:  core/reusable/coordinate_conditions/cylinder.json
#   version:   0.28.5

from __future__ import annotations

from enum import Enum
from typing import List, Literal, Optional

from pydantic import BaseModel, Field


class CoordinateShapeEnum(Enum):
    cylinder = "cylinder"
    sphere = "sphere"
    box = "box"
    triangular_prism = "triangular_prism"
    plane = "plane"


class CylinderCoordinateConditionSchema(BaseModel):
    shape: Literal["cylinder"] = Field(..., title="Coordinate Shape Enum")
    center_coordinate: Optional[List[float]] = Field(None, max_length=3, min_length=3, title="coordinate 3d schema")
    radius: float
    min_z: float
    max_z: float
