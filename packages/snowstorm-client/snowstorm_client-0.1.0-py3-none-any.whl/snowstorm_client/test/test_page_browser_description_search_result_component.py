# coding: utf-8

"""
    Snowstorm

    SNOMED CT Terminology Server REST API

    The version of the OpenAPI document: 10.8.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from snowstorm_client.models.page_browser_description_search_result_component import PageBrowserDescriptionSearchResultComponent

class TestPageBrowserDescriptionSearchResultComponent(unittest.TestCase):
    """PageBrowserDescriptionSearchResultComponent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageBrowserDescriptionSearchResultComponent:
        """Test PageBrowserDescriptionSearchResultComponent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageBrowserDescriptionSearchResultComponent`
        """
        model = PageBrowserDescriptionSearchResultComponent()
        if include_optional:
            return PageBrowserDescriptionSearchResultComponent(
                total_elements = 56,
                total_pages = 56,
                size = 56,
                content = [
                    snowstorm_client.models.browser_description_search_result_component.BrowserDescriptionSearchResult_Component(
                        term = '', 
                        active = True, 
                        language_code = '', 
                        module = '', 
                        concept = snowstorm_client.models.concept_mini_component.ConceptMini_Component(
                            concept_id = '', 
                            active = True, 
                            definition_status = '', 
                            module_id = '', 
                            effective_time = '', 
                            fsn = snowstorm_client.models.term_lang_pojo_component.TermLangPojo_Component(
                                term = '', 
                                lang = '', ), 
                            pt = snowstorm_client.models.term_lang_pojo_component.TermLangPojo_Component(
                                term = '', 
                                lang = '', ), 
                            descendant_count = 56, 
                            is_leaf_inferred = True, 
                            is_leaf_stated = True, 
                            id = '', 
                            definition_status_id = '', 
                            leaf_inferred = snowstorm_client.models.concept_mini_component.ConceptMini_Component(
                                concept_id = '', 
                                active = True, 
                                definition_status = '', 
                                module_id = '', 
                                effective_time = '', 
                                descendant_count = 56, 
                                is_leaf_inferred = True, 
                                is_leaf_stated = True, 
                                id = '', 
                                definition_status_id = '', 
                                leaf_stated = , 
                                extra_fields = {
                                    'key' : None
                                    }, 
                                id_and_fsn_term = '', ), 
                            leaf_stated = , 
                            extra_fields = {
                                'key' : None
                                }, 
                            id_and_fsn_term = '', ), )
                    ],
                number = 56,
                sort = [
                    snowstorm_client.models.sort_object.SortObject(
                        direction = '', 
                        null_handling = '', 
                        ascending = True, 
                        property = '', 
                        ignore_case = True, )
                    ],
                first = True,
                last = True,
                number_of_elements = 56,
                pageable = snowstorm_client.models.pageable_object_component.PageableObject_Component(
                    offset = 56, 
                    sort = [
                        snowstorm_client.models.sort_object.SortObject(
                            direction = '', 
                            null_handling = '', 
                            ascending = True, 
                            property = '', 
                            ignore_case = True, )
                        ], 
                    page_number = 56, 
                    page_size = 56, 
                    paged = True, 
                    unpaged = True, ),
                empty = True
            )
        else:
            return PageBrowserDescriptionSearchResultComponent(
        )
        """

    def testPageBrowserDescriptionSearchResultComponent(self):
        """Test PageBrowserDescriptionSearchResultComponent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
