# coding: utf-8

"""
    Snowstorm

    SNOMED CT Terminology Server REST API

    The version of the OpenAPI document: 10.8.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from snowstorm_client.models.branch import Branch

class TestBranch(unittest.TestCase):
    """Branch unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Branch:
        """Test Branch
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Branch`
        """
        model = Branch()
        if include_optional:
            return Branch(
                internal_id = '',
                path = '',
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                base = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                head = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                creation = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_promotion = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                locked = True,
                contains_content = True,
                versions_replaced = {
                    'key' : [
                        ''
                        ]
                    },
                metadata_internal = {
                    'key' : ''
                    },
                metadata = snowstorm_client.models.metadata.Metadata(
                    as_map = {
                        'key' : None
                        }, ),
                state = 'UP_TO_DATE',
                head_timestamp = 56,
                base_timestamp = 56,
                creation_timestamp = 56,
                versions_replaced_counts = {
                    'key' : 56
                    }
            )
        else:
            return Branch(
        )
        """

    def testBranch(self):
        """Test Branch"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
