# coding: utf-8

"""
    Snowstorm

    SNOMED CT Terminology Server REST API

    The version of the OpenAPI document: 10.8.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from snowstorm_client.models.items_page_relationship_change import ItemsPageRelationshipChange

class TestItemsPageRelationshipChange(unittest.TestCase):
    """ItemsPageRelationshipChange unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ItemsPageRelationshipChange:
        """Test ItemsPageRelationshipChange
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ItemsPageRelationshipChange`
        """
        model = ItemsPageRelationshipChange()
        if include_optional:
            return ItemsPageRelationshipChange(
                items = [
                    snowstorm_client.models.relationship_change.RelationshipChange(
                        internal_id = '', 
                        classification_id = '', 
                        relationship_id = '', 
                        active = True, 
                        source_id = '', 
                        destination_id = '', 
                        value = '', 
                        group = 56, 
                        type_id = '', 
                        modifier_id = '', 
                        inferred_not_stated = True, 
                        source = snowstorm_client.models.concept_mini.ConceptMini(
                            concept_id = '', 
                            active = True, 
                            definition_status = '', 
                            module_id = '', 
                            effective_time = '', 
                            fsn = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                                term = '', 
                                lang = '', ), 
                            pt = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                                term = '', 
                                lang = '', ), 
                            descendant_count = 56, 
                            is_leaf_inferred = True, 
                            is_leaf_stated = True, 
                            id = '', 
                            definition_status_id = '', 
                            leaf_inferred = snowstorm_client.models.concept_mini.ConceptMini(
                                concept_id = '', 
                                active = True, 
                                definition_status = '', 
                                module_id = '', 
                                effective_time = '', 
                                descendant_count = 56, 
                                is_leaf_inferred = True, 
                                is_leaf_stated = True, 
                                id = '', 
                                definition_status_id = '', 
                                leaf_stated = , 
                                extra_fields = {
                                    'key' : None
                                    }, 
                                id_and_fsn_term = '', ), 
                            leaf_stated = , 
                            extra_fields = {
                                'key' : None
                                }, 
                            id_and_fsn_term = '', ), 
                        destination = , 
                        type = , 
                        concrete = True, 
                        change_nature = 'INFERRED', 
                        destination_or_value = '', 
                        characteristic_type_id = '', 
                        destination_or_value_without_prefix = '', 
                        destination_or_raw_value = snowstorm_client.models.destination_or_raw_value.destinationOrRawValue(), 
                        source_fsn = '', 
                        type_fsn = '', 
                        destination_fsn = '', 
                        union_group = 56, )
                    ],
                total = 56,
                limit = 56,
                offset = 56,
                search_after = '',
                search_after_array = [
                    None
                    ]
            )
        else:
            return ItemsPageRelationshipChange(
        )
        """

    def testItemsPageRelationshipChange(self):
        """Test ItemsPageRelationshipChange"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
