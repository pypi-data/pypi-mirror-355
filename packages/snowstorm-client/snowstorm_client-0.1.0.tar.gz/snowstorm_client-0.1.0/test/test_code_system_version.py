# coding: utf-8

"""
    Snowstorm

    SNOMED CT Terminology Server REST API

    The version of the OpenAPI document: 10.8.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from snowstorm_client.models.code_system_version import CodeSystemVersion

class TestCodeSystemVersion(unittest.TestCase):
    """CodeSystemVersion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CodeSystemVersion:
        """Test CodeSystemVersion
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CodeSystemVersion`
        """
        model = CodeSystemVersion()
        if include_optional:
            return CodeSystemVersion(
                id = '',
                short_name = '',
                import_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                parent_branch_path = '',
                effective_date = 56,
                version = '',
                description = '',
                release_package = '',
                dependant_version_effective_time = 56,
                code_system = snowstorm_client.models.code_system.CodeSystem(
                    name = '', 
                    owner = '', 
                    short_name = '', 
                    branch_path = 'MAINjUR,rZ#UM/?R,Fp^l6$ARj', 
                    dependant_version_effective_time = 56, 
                    daily_build_available = True, 
                    latest_daily_build = '', 
                    country_code = '', 
                    default_language_code = '', 
                    default_language_reference_sets = [
                        ''
                        ], 
                    maintainer_type = '', 
                    latest_version = snowstorm_client.models.code_system_version.CodeSystemVersion(
                        id = '', 
                        short_name = '', 
                        import_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        parent_branch_path = '', 
                        effective_date = 56, 
                        version = '', 
                        description = '', 
                        release_package = '', 
                        dependant_version_effective_time = 56, 
                        branch_path = '', ), 
                    languages = {
                        'key' : ''
                        }, 
                    modules = [
                        snowstorm_client.models.concept_mini.ConceptMini(
                            concept_id = '', 
                            active = True, 
                            definition_status = '', 
                            module_id = '', 
                            effective_time = '', 
                            fsn = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                                term = '', 
                                lang = '', ), 
                            pt = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                                term = '', 
                                lang = '', ), 
                            descendant_count = 56, 
                            is_leaf_inferred = True, 
                            is_leaf_stated = True, 
                            id = '', 
                            definition_status_id = '', 
                            leaf_inferred = snowstorm_client.models.concept_mini.ConceptMini(
                                concept_id = '', 
                                active = True, 
                                definition_status = '', 
                                module_id = '', 
                                effective_time = '', 
                                descendant_count = 56, 
                                is_leaf_inferred = True, 
                                is_leaf_stated = True, 
                                id = '', 
                                definition_status_id = '', 
                                leaf_stated = , 
                                extra_fields = {
                                    'key' : None
                                    }, 
                                id_and_fsn_term = '', ), 
                            leaf_stated = , 
                            extra_fields = {
                                'key' : None
                                }, 
                            id_and_fsn_term = '', )
                        ], 
                    user_roles = [
                        ''
                        ], ),
                branch_path = ''
            )
        else:
            return CodeSystemVersion(
        )
        """

    def testCodeSystemVersion(self):
        """Test CodeSystemVersion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
