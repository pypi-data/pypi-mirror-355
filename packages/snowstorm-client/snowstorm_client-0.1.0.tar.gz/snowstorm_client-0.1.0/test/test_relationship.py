# coding: utf-8

"""
    Snowstorm

    SNOMED CT Terminology Server REST API

    The version of the OpenAPI document: 10.8.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from snowstorm_client.models.relationship import Relationship

class TestRelationship(unittest.TestCase):
    """Relationship unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Relationship:
        """Test Relationship
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Relationship`
        """
        model = Relationship()
        if include_optional:
            return Relationship(
                internal_id = '',
                path = '',
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                changed = True,
                active = True,
                module_id = '01234',
                effective_time_i = 56,
                released = True,
                release_hash = '',
                released_effective_time = 56,
                relationship_id = '',
                source_id = '',
                destination_id = '01234',
                concrete_value = snowstorm_client.models.concrete_value.ConcreteValue(
                    data_type = 'DECIMAL', 
                    value = '', 
                    value_with_prefix = '', ),
                relationship_group = 56,
                type_id = '01234',
                characteristic_type_id = '01234',
                modifier_id = '01234',
                source = snowstorm_client.models.concept_mini.ConceptMini(
                    concept_id = '', 
                    active = True, 
                    definition_status = '', 
                    module_id = '', 
                    effective_time = '', 
                    fsn = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                        term = '', 
                        lang = '', ), 
                    pt = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                        term = '', 
                        lang = '', ), 
                    descendant_count = 56, 
                    is_leaf_inferred = True, 
                    is_leaf_stated = True, 
                    id = '', 
                    definition_status_id = '', 
                    leaf_inferred = snowstorm_client.models.concept_mini.ConceptMini(
                        concept_id = '', 
                        active = True, 
                        definition_status = '', 
                        module_id = '', 
                        effective_time = '', 
                        descendant_count = 56, 
                        is_leaf_inferred = True, 
                        is_leaf_stated = True, 
                        id = '', 
                        definition_status_id = '', 
                        leaf_stated = , 
                        extra_fields = {
                            'key' : None
                            }, 
                        id_and_fsn_term = '', ), 
                    leaf_stated = , 
                    extra_fields = {
                        'key' : None
                        }, 
                    id_and_fsn_term = '', ),
                type = snowstorm_client.models.concept_mini.ConceptMini(
                    concept_id = '', 
                    active = True, 
                    definition_status = '', 
                    module_id = '', 
                    effective_time = '', 
                    fsn = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                        term = '', 
                        lang = '', ), 
                    pt = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                        term = '', 
                        lang = '', ), 
                    descendant_count = 56, 
                    is_leaf_inferred = True, 
                    is_leaf_stated = True, 
                    id = '', 
                    definition_status_id = '', 
                    leaf_inferred = snowstorm_client.models.concept_mini.ConceptMini(
                        concept_id = '', 
                        active = True, 
                        definition_status = '', 
                        module_id = '', 
                        effective_time = '', 
                        descendant_count = 56, 
                        is_leaf_inferred = True, 
                        is_leaf_stated = True, 
                        id = '', 
                        definition_status_id = '', 
                        leaf_stated = , 
                        extra_fields = {
                            'key' : None
                            }, 
                        id_and_fsn_term = '', ), 
                    leaf_stated = , 
                    extra_fields = {
                        'key' : None
                        }, 
                    id_and_fsn_term = '', ),
                target = snowstorm_client.models.concept_mini.ConceptMini(
                    concept_id = '', 
                    active = True, 
                    definition_status = '', 
                    module_id = '', 
                    effective_time = '', 
                    fsn = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                        term = '', 
                        lang = '', ), 
                    pt = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                        term = '', 
                        lang = '', ), 
                    descendant_count = 56, 
                    is_leaf_inferred = True, 
                    is_leaf_stated = True, 
                    id = '', 
                    definition_status_id = '', 
                    leaf_inferred = snowstorm_client.models.concept_mini.ConceptMini(
                        concept_id = '', 
                        active = True, 
                        definition_status = '', 
                        module_id = '', 
                        effective_time = '', 
                        descendant_count = 56, 
                        is_leaf_inferred = True, 
                        is_leaf_stated = True, 
                        id = '', 
                        definition_status_id = '', 
                        leaf_stated = , 
                        extra_fields = {
                            'key' : None
                            }, 
                        id_and_fsn_term = '', ), 
                    leaf_stated = , 
                    extra_fields = {
                        'key' : None
                        }, 
                    id_and_fsn_term = '', ),
                concrete = True,
                group_id = 56,
                grouped = True,
                inferred = True,
                modifier = '',
                relationship_id_as_long = 56,
                characteristic_type = '',
                effective_time = '',
                id = ''
            )
        else:
            return Relationship(
                type_id = '01234',
                characteristic_type_id = '01234',
                modifier_id = '01234',
        )
        """

    def testRelationship(self):
        """Test Relationship"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
