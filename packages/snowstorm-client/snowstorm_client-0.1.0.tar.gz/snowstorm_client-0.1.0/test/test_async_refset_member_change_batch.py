# coding: utf-8

"""
    Snowstorm

    SNOMED CT Terminology Server REST API

    The version of the OpenAPI document: 10.8.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from snowstorm_client.models.async_refset_member_change_batch import AsyncRefsetMemberChangeBatch

class TestAsyncRefsetMemberChangeBatch(unittest.TestCase):
    """AsyncRefsetMemberChangeBatch unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AsyncRefsetMemberChangeBatch:
        """Test AsyncRefsetMemberChangeBatch
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AsyncRefsetMemberChangeBatch`
        """
        model = AsyncRefsetMemberChangeBatch()
        if include_optional:
            return AsyncRefsetMemberChangeBatch(
                id = '',
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'RUNNING',
                member_ids = [
                    ''
                    ],
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                message = '',
                seconds_duration = 1.337
            )
        else:
            return AsyncRefsetMemberChangeBatch(
        )
        """

    def testAsyncRefsetMemberChangeBatch(self):
        """Test AsyncRefsetMemberChangeBatch"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
