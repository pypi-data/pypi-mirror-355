# coding: utf-8

"""
    Snowstorm

    SNOMED CT Terminology Server REST API

    The version of the OpenAPI document: 10.8.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from snowstorm_client.models.ref_set_member_page_with_bucket_aggregations_reference_set_member import RefSetMemberPageWithBucketAggregationsReferenceSetMember

class TestRefSetMemberPageWithBucketAggregationsReferenceSetMember(unittest.TestCase):
    """RefSetMemberPageWithBucketAggregationsReferenceSetMember unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RefSetMemberPageWithBucketAggregationsReferenceSetMember:
        """Test RefSetMemberPageWithBucketAggregationsReferenceSetMember
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RefSetMemberPageWithBucketAggregationsReferenceSetMember`
        """
        model = RefSetMemberPageWithBucketAggregationsReferenceSetMember()
        if include_optional:
            return RefSetMemberPageWithBucketAggregationsReferenceSetMember(
                content = [
                    snowstorm_client.models.reference_set_member.ReferenceSetMember(
                        internal_id = '', 
                        path = '', 
                        start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleted = True, 
                        changed = True, 
                        active = True, 
                        module_id = '01234', 
                        effective_time_i = 56, 
                        released = True, 
                        release_hash = '', 
                        released_effective_time = 56, 
                        member_id = '', 
                        refset_id = '01234', 
                        referenced_component_id = '01234', 
                        concept_id = '', 
                        additional_fields = {
                            'key' : ''
                            }, 
                        referenced_component_snomed_component = snowstorm_client.models.snomed_component_object.SnomedComponentObject(
                            internal_id = '', 
                            path = '', 
                            start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            deleted = True, 
                            changed = True, 
                            active = True, 
                            module_id = '01234', 
                            effective_time_i = 56, 
                            released = True, 
                            release_hash = '', 
                            released_effective_time = 56, 
                            effective_time = '', 
                            id = '', ), 
                        map_target_coding = snowstorm_client.models.coding.Coding(
                            system = '', 
                            code = '', 
                            display = '', ), 
                        map_group = '', 
                        map_priority = '', 
                        referenced_component = snowstorm_client.models.referenced_component.referencedComponent(), 
                        effective_time = '', )
                    ],
                pageable = snowstorm_client.models.pageable_object.PageableObject(
                    offset = 56, 
                    sort = [
                        snowstorm_client.models.sort_object.SortObject(
                            direction = '', 
                            null_handling = '', 
                            ascending = True, 
                            property = '', 
                            ignore_case = True, )
                        ], 
                    page_number = 56, 
                    page_size = 56, 
                    paged = True, 
                    unpaged = True, ),
                member_counts_by_reference_set = {
                    'key' : 56
                    },
                reference_sets = {
                    'key' : snowstorm_client.models.concept_mini.ConceptMini(
                        concept_id = '', 
                        active = True, 
                        definition_status = '', 
                        module_id = '', 
                        effective_time = '', 
                        fsn = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                            term = '', 
                            lang = '', ), 
                        pt = snowstorm_client.models.term_lang_pojo.TermLangPojo(
                            term = '', 
                            lang = '', ), 
                        descendant_count = 56, 
                        is_leaf_inferred = True, 
                        is_leaf_stated = True, 
                        id = '', 
                        definition_status_id = '', 
                        leaf_inferred = snowstorm_client.models.concept_mini.ConceptMini(
                            concept_id = '', 
                            active = True, 
                            definition_status = '', 
                            module_id = '', 
                            effective_time = '', 
                            descendant_count = 56, 
                            is_leaf_inferred = True, 
                            is_leaf_stated = True, 
                            id = '', 
                            definition_status_id = '', 
                            leaf_stated = , 
                            extra_fields = {
                                'key' : None
                                }, 
                            id_and_fsn_term = '', ), 
                        leaf_stated = , 
                        extra_fields = {
                            'key' : None
                            }, 
                        id_and_fsn_term = '', )
                    },
                search_after_array = [
                    None
                    ],
                search_after = '',
                last = True,
                total_elements = 56,
                total_pages = 56,
                size = 56,
                number = 56,
                sort = [
                    snowstorm_client.models.sort_object.SortObject(
                        direction = '', 
                        null_handling = '', 
                        ascending = True, 
                        property = '', 
                        ignore_case = True, )
                    ],
                first = True,
                number_of_elements = 56,
                empty = True
            )
        else:
            return RefSetMemberPageWithBucketAggregationsReferenceSetMember(
        )
        """

    def testRefSetMemberPageWithBucketAggregationsReferenceSetMember(self):
        """Test RefSetMemberPageWithBucketAggregationsReferenceSetMember"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
