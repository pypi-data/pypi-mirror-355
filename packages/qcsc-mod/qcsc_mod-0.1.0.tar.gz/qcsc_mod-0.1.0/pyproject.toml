[build-system]
requires = ["setuptools>=61.0.0"] # Specifies the build backend, Setuptools is widely used.
build-backend = "setuptools.build_meta" # The module that Setuptools uses for building.

[project]
name = "qcsc-mod" # The name users will use to install your library via pip (e.g., pip install qcsc-mod).
                 # PyPI prefers hyphens for package names.
version = "0.1.0" # Initial version of your library. Follow semantic versioning (major.minor.patch).
authors = [
  { name="Your Name", email="your.email@example.com" }, # Replace with your name and email.
]
description = "A Universal Content & Action Orchestrator leveraging AI for content creation and automation." # A concise summary of your library.
readme = "README.md" # Path to your project's README file.
requires-python = ">=3.8" # Minimum Python version required to run your library.
classifiers = [
    "Programming Language :: Python :: 3", # Indicates Python 3 compatibility.
    "License :: OSI Approved :: MIT License", # Specifies the open-source license.
    "Operating System :: OS Independent", # Means it should run on Windows, macOS, Linux.
    "Development Status :: 3 - Alpha", # Indicates the development stage (e.g., 3 - Alpha, 4 - Beta, 5 - Production/Stable).
    "Intended Audience :: Developers", # Targets developers who will use this library.
    "Intended Audience :: End Users/Desktop", # Targets end-users who might use applications built with this.
    "Topic :: Scientific/Engineering :: Artificial Intelligence", # Relevant topic for AI libraries.
    "Topic :: Text Processing", # Relevant for content generation and summarization.
    "Topic :: Utilities", # For the automation and file actions.
]
keywords = ["ai", "llm", "content-generation", "automation", "text-processing", "image-generation", "orchestration", "utility"] # Keywords to help users find your package on PyPI.

dependencies = [ # List of Python packages your library depends on to function.
    "requests",   # For making HTTP requests to external APIs (like Gemini/Imagen).
    "Pillow",     # For image processing, particularly if you save generated images.
    # Add other dependencies if you use them in your content_ai, image_ai, or actions modules.
    # Example: If you add more sophisticated file handling, you might add something here.
]

[project.urls]
Homepage = "https://github.com/yourusername/qcsc-mod" # Link to your project's main repository (e.g., GitHub).
"Bug Tracker" = "https://github.com/yourusername/qcsc-mod/issues" # Link to your project's issue tracker.
# "Documentation" = "https://your-docs-link.com" # Link to your project's documentation (if any).

# Optional dependencies, useful for development, testing, or specific features.
[project.optional-dependencies]
dev = [ # Dependencies for development (e.g., testing, linting, code formatting).
    "pytest>=7.0", # For running tests.
    "flake8",      # For code linting.
    "black",       # For code formatting.
]