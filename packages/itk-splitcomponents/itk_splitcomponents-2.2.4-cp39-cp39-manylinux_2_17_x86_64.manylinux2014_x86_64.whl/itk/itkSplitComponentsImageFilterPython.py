# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _SplitComponentsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSplitComponentsImageFilterPython
else:
    import _itkSplitComponentsImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython

def itkSplitComponentsImageFilterICVF22IF2_New():
    return itkSplitComponentsImageFilterICVF22IF2.New()

class itkSplitComponentsImageFilterICVF22IF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICVF22IF2):
    r"""Proxy of C++ itkSplitComponentsImageFilterICVF22IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterICVF22IF2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterICVF22IF2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB2

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB2"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterICVF22IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterICVF22IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterICVF22IF2

        Create a new object of the class itkSplitComponentsImageFilterICVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterICVF22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterICVF22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterICVF22IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterICVF22IF2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF22IF2_swigregister(itkSplitComponentsImageFilterICVF22IF2)

def itkSplitComponentsImageFilterICVF33IF3_New():
    return itkSplitComponentsImageFilterICVF33IF3.New()

class itkSplitComponentsImageFilterICVF33IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICVF33IF3):
    r"""Proxy of C++ itkSplitComponentsImageFilterICVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterICVF33IF3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterICVF33IF3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterICVF33IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterICVF33IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterICVF33IF3

        Create a new object of the class itkSplitComponentsImageFilterICVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterICVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterICVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterICVF33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterICVF33IF3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF33IF3_swigregister(itkSplitComponentsImageFilterICVF33IF3)

def itkSplitComponentsImageFilterICVF44IF4_New():
    return itkSplitComponentsImageFilterICVF44IF4.New()

class itkSplitComponentsImageFilterICVF44IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICVF44IF4):
    r"""Proxy of C++ itkSplitComponentsImageFilterICVF44IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterICVF44IF4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterICVF44IF4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterICVF44IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterICVF44IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterICVF44IF4

        Create a new object of the class itkSplitComponentsImageFilterICVF44IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterICVF44IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterICVF44IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterICVF44IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterICVF44IF4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterICVF44IF4_swigregister(itkSplitComponentsImageFilterICVF44IF4)

def itkSplitComponentsImageFilterIRGBAUC2IUC23_New():
    return itkSplitComponentsImageFilterIRGBAUC2IUC23.New()

class itkSplitComponentsImageFilterIRGBAUC2IUC23(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUC2IUC2):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBAUC2IUC23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIRGBAUC2IUC23_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIRGBAUC2IUC23_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC23_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC23_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC23_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBAUC2IUC23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIRGBAUC2IUC23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBAUC2IUC23

        Create a new object of the class itkSplitComponentsImageFilterIRGBAUC2IUC23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBAUC2IUC23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBAUC2IUC23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBAUC2IUC23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBAUC2IUC23 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC2IUC23_swigregister(itkSplitComponentsImageFilterIRGBAUC2IUC23)

def itkSplitComponentsImageFilterIRGBAUC3IUC33_New():
    return itkSplitComponentsImageFilterIRGBAUC3IUC33.New()

class itkSplitComponentsImageFilterIRGBAUC3IUC33(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUC3IUC3):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBAUC3IUC33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIRGBAUC3IUC33_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIRGBAUC3IUC33_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC33_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC33_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC33_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBAUC3IUC33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIRGBAUC3IUC33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBAUC3IUC33

        Create a new object of the class itkSplitComponentsImageFilterIRGBAUC3IUC33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBAUC3IUC33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBAUC3IUC33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBAUC3IUC33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBAUC3IUC33 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC3IUC33_swigregister(itkSplitComponentsImageFilterIRGBAUC3IUC33)

def itkSplitComponentsImageFilterIRGBAUC4IUC4_New():
    return itkSplitComponentsImageFilterIRGBAUC4IUC4.New()

class itkSplitComponentsImageFilterIRGBAUC4IUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUC4IUC4):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBAUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIRGBAUC4IUC43_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIRGBAUC4IUC43_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBAUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIRGBAUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBAUC4IUC4

        Create a new object of the class itkSplitComponentsImageFilterIRGBAUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBAUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBAUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBAUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBAUC4IUC4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC4_swigregister(itkSplitComponentsImageFilterIRGBAUC4IUC4)

def itkSplitComponentsImageFilterIRGBAUC4IUC43_New():
    return itkSplitComponentsImageFilterIRGBAUC4IUC43.New()

class itkSplitComponentsImageFilterIRGBAUC4IUC43(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBAUC4IUC4):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBAUC4IUC43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIRGBAUC4IUC43_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIRGBAUC4IUC43_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC43_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC43_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC43_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBAUC4IUC43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIRGBAUC4IUC43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBAUC4IUC43

        Create a new object of the class itkSplitComponentsImageFilterIRGBAUC4IUC43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBAUC4IUC43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBAUC4IUC43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBAUC4IUC43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBAUC4IUC43 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBAUC4IUC43_swigregister(itkSplitComponentsImageFilterIRGBAUC4IUC43)

def itkSplitComponentsImageFilterIRGBUC2IUC23_New():
    return itkSplitComponentsImageFilterIRGBUC2IUC23.New()

class itkSplitComponentsImageFilterIRGBUC2IUC23(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBUC2IUC2):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBUC2IUC23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIRGBUC2IUC23_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIRGBUC2IUC23_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC23_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC23_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC23_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBUC2IUC23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIRGBUC2IUC23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBUC2IUC23

        Create a new object of the class itkSplitComponentsImageFilterIRGBUC2IUC23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBUC2IUC23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBUC2IUC23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBUC2IUC23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBUC2IUC23 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC2IUC23_swigregister(itkSplitComponentsImageFilterIRGBUC2IUC23)

def itkSplitComponentsImageFilterIRGBUC3IUC33_New():
    return itkSplitComponentsImageFilterIRGBUC3IUC33.New()

class itkSplitComponentsImageFilterIRGBUC3IUC33(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBUC3IUC3):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBUC3IUC33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIRGBUC3IUC33_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIRGBUC3IUC33_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC33_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC33_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC33_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBUC3IUC33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIRGBUC3IUC33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBUC3IUC33

        Create a new object of the class itkSplitComponentsImageFilterIRGBUC3IUC33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBUC3IUC33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBUC3IUC33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBUC3IUC33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBUC3IUC33 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC3IUC33_swigregister(itkSplitComponentsImageFilterIRGBUC3IUC33)

def itkSplitComponentsImageFilterIRGBUC4IUC43_New():
    return itkSplitComponentsImageFilterIRGBUC4IUC43.New()

class itkSplitComponentsImageFilterIRGBUC4IUC43(itk.itkImageToImageFilterBPython.itkImageToImageFilterIRGBUC4IUC4):
    r"""Proxy of C++ itkSplitComponentsImageFilterIRGBUC4IUC43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIRGBUC4IUC43_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIRGBUC4IUC43_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC43_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC43_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC43_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIRGBUC4IUC43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIRGBUC4IUC43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIRGBUC4IUC43

        Create a new object of the class itkSplitComponentsImageFilterIRGBUC4IUC43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIRGBUC4IUC43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIRGBUC4IUC43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIRGBUC4IUC43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIRGBUC4IUC43 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIRGBUC4IUC43_swigregister(itkSplitComponentsImageFilterIRGBUC4IUC43)

def itkSplitComponentsImageFilterIVF22IF2_New():
    return itkSplitComponentsImageFilterIVF22IF2.New()

class itkSplitComponentsImageFilterIVF22IF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2):
    r"""Proxy of C++ itkSplitComponentsImageFilterIVF22IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIVF22IF2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIVF22IF2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB2

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB2"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIVF22IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIVF22IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIVF22IF2

        Create a new object of the class itkSplitComponentsImageFilterIVF22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIVF22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIVF22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIVF22IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIVF22IF2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF22IF2_swigregister(itkSplitComponentsImageFilterIVF22IF2)

def itkSplitComponentsImageFilterIVF33IF3_New():
    return itkSplitComponentsImageFilterIVF33IF3.New()

class itkSplitComponentsImageFilterIVF33IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3):
    r"""Proxy of C++ itkSplitComponentsImageFilterIVF33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIVF33IF3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIVF33IF3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIVF33IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIVF33IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIVF33IF3

        Create a new object of the class itkSplitComponentsImageFilterIVF33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIVF33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIVF33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIVF33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIVF33IF3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF33IF3_swigregister(itkSplitComponentsImageFilterIVF33IF3)

def itkSplitComponentsImageFilterIVF44IF4_New():
    return itkSplitComponentsImageFilterIVF44IF4.New()

class itkSplitComponentsImageFilterIVF44IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF44IF4):
    r"""Proxy of C++ itkSplitComponentsImageFilterIVF44IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterIVF44IF4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterIVF44IF4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterIVF44IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterIVF44IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterIVF44IF4

        Create a new object of the class itkSplitComponentsImageFilterIVF44IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterIVF44IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterIVF44IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterIVF44IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterIVF44IF4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterIVF44IF4_swigregister(itkSplitComponentsImageFilterIVF44IF4)

def itkSplitComponentsImageFilterVID2ID2_New():
    return itkSplitComponentsImageFilterVID2ID2.New()

class itkSplitComponentsImageFilterVID2ID2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID2ID2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVID2ID2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVID2ID2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB2

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB2"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVID2ID2

        Create a new object of the class itkSplitComponentsImageFilterVID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVID2ID2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID2ID2_swigregister(itkSplitComponentsImageFilterVID2ID2)

def itkSplitComponentsImageFilterVID3ID3_New():
    return itkSplitComponentsImageFilterVID3ID3.New()

class itkSplitComponentsImageFilterVID3ID3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID3ID3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVID3ID3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVID3ID3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVID3ID3

        Create a new object of the class itkSplitComponentsImageFilterVID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVID3ID3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID3ID3_swigregister(itkSplitComponentsImageFilterVID3ID3)

def itkSplitComponentsImageFilterVID4ID4_New():
    return itkSplitComponentsImageFilterVID4ID4.New()

class itkSplitComponentsImageFilterVID4ID4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVID4ID4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVID4ID4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVID4ID4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVID4ID4

        Create a new object of the class itkSplitComponentsImageFilterVID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVID4ID4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVID4ID4_swigregister(itkSplitComponentsImageFilterVID4ID4)

def itkSplitComponentsImageFilterVIF2IF2_New():
    return itkSplitComponentsImageFilterVIF2IF2.New()

class itkSplitComponentsImageFilterVIF2IF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF2IF2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIF2IF2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIF2IF2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB2

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB2"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIF2IF2

        Create a new object of the class itkSplitComponentsImageFilterVIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIF2IF2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF2IF2_swigregister(itkSplitComponentsImageFilterVIF2IF2)

def itkSplitComponentsImageFilterVIF3IF3_New():
    return itkSplitComponentsImageFilterVIF3IF3.New()

class itkSplitComponentsImageFilterVIF3IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF3IF3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIF3IF3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIF3IF3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIF3IF3

        Create a new object of the class itkSplitComponentsImageFilterVIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIF3IF3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF3IF3_swigregister(itkSplitComponentsImageFilterVIF3IF3)

def itkSplitComponentsImageFilterVIF4IF4_New():
    return itkSplitComponentsImageFilterVIF4IF4.New()

class itkSplitComponentsImageFilterVIF4IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIF4IF4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIF4IF4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIF4IF4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIF4IF4

        Create a new object of the class itkSplitComponentsImageFilterVIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIF4IF4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIF4IF4_swigregister(itkSplitComponentsImageFilterVIF4IF4)

def itkSplitComponentsImageFilterVISS2ISS2_New():
    return itkSplitComponentsImageFilterVISS2ISS2.New()

class itkSplitComponentsImageFilterVISS2ISS2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVISS2ISS2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVISS2ISS2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVISS2ISS2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB2

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB2"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVISS2ISS2

        Create a new object of the class itkSplitComponentsImageFilterVISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVISS2ISS2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS2ISS2_swigregister(itkSplitComponentsImageFilterVISS2ISS2)

def itkSplitComponentsImageFilterVISS3ISS3_New():
    return itkSplitComponentsImageFilterVISS3ISS3.New()

class itkSplitComponentsImageFilterVISS3ISS3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVISS3ISS3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVISS3ISS3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVISS3ISS3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVISS3ISS3

        Create a new object of the class itkSplitComponentsImageFilterVISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVISS3ISS3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS3ISS3_swigregister(itkSplitComponentsImageFilterVISS3ISS3)

def itkSplitComponentsImageFilterVISS4ISS4_New():
    return itkSplitComponentsImageFilterVISS4ISS4.New()

class itkSplitComponentsImageFilterVISS4ISS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVISS4ISS4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVISS4ISS4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVISS4ISS4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVISS4ISS4

        Create a new object of the class itkSplitComponentsImageFilterVISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVISS4ISS4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVISS4ISS4_swigregister(itkSplitComponentsImageFilterVISS4ISS4)

def itkSplitComponentsImageFilterVIUC2IUC2_New():
    return itkSplitComponentsImageFilterVIUC2IUC2.New()

class itkSplitComponentsImageFilterVIUC2IUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUC2IUC2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIUC2IUC2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIUC2IUC2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB2

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB2"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUC2IUC2

        Create a new object of the class itkSplitComponentsImageFilterVIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUC2IUC2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC2IUC2_swigregister(itkSplitComponentsImageFilterVIUC2IUC2)

def itkSplitComponentsImageFilterVIUC3IUC3_New():
    return itkSplitComponentsImageFilterVIUC3IUC3.New()

class itkSplitComponentsImageFilterVIUC3IUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUC3IUC3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIUC3IUC3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIUC3IUC3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUC3IUC3

        Create a new object of the class itkSplitComponentsImageFilterVIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUC3IUC3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC3IUC3_swigregister(itkSplitComponentsImageFilterVIUC3IUC3)

def itkSplitComponentsImageFilterVIUC4IUC4_New():
    return itkSplitComponentsImageFilterVIUC4IUC4.New()

class itkSplitComponentsImageFilterVIUC4IUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUC4IUC4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIUC4IUC4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIUC4IUC4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUC4IUC4

        Create a new object of the class itkSplitComponentsImageFilterVIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUC4IUC4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUC4IUC4_swigregister(itkSplitComponentsImageFilterVIUC4IUC4)

def itkSplitComponentsImageFilterVIUS2IUS2_New():
    return itkSplitComponentsImageFilterVIUS2IUS2.New()

class itkSplitComponentsImageFilterVIUS2IUS2(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUS2IUS2):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIUS2IUS2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIUS2IUS2_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB2

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB2"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUS2IUS2

        Create a new object of the class itkSplitComponentsImageFilterVIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUS2IUS2 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS2IUS2_swigregister(itkSplitComponentsImageFilterVIUS2IUS2)

def itkSplitComponentsImageFilterVIUS3IUS3_New():
    return itkSplitComponentsImageFilterVIUS3IUS3.New()

class itkSplitComponentsImageFilterVIUS3IUS3(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUS3IUS3):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIUS3IUS3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIUS3IUS3_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB3

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB3"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUS3IUS3

        Create a new object of the class itkSplitComponentsImageFilterVIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUS3IUS3 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS3IUS3_swigregister(itkSplitComponentsImageFilterVIUS3IUS3)

def itkSplitComponentsImageFilterVIUS4IUS4_New():
    return itkSplitComponentsImageFilterVIUS4IUS4.New()

class itkSplitComponentsImageFilterVIUS4IUS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterVIUS4IUS4):
    r"""Proxy of C++ itkSplitComponentsImageFilterVIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSplitComponentsImageFilterVIUS4IUS4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSplitComponentsImageFilterVIUS4IUS4_Pointer"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_Clone(self)

    def SetComponentsMask(self, _arg):
        r"""
        SetComponentsMask(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayB4

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_SetComponentsMask(self, _arg)

    def GetComponentsMask(self):
        r"""GetComponentsMask(self) -> itkFixedArrayB4"""
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_GetComponentsMask(self)
    __swig_destroy__ = _itkSplitComponentsImageFilterPython.delete_itkSplitComponentsImageFilterVIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSplitComponentsImageFilterVIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSplitComponentsImageFilterVIUS4IUS4

        Create a new object of the class itkSplitComponentsImageFilterVIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSplitComponentsImageFilterVIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSplitComponentsImageFilterVIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSplitComponentsImageFilterVIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSplitComponentsImageFilterVIUS4IUS4 in _itkSplitComponentsImageFilterPython:
_itkSplitComponentsImageFilterPython.itkSplitComponentsImageFilterVIUS4IUS4_swigregister(itkSplitComponentsImageFilterVIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def split_components_image_filter(*args: itkt.ImageLike,  components_mask: Sequence[bool]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SplitComponentsImageFilter"""
    import itk

    kwarg_typehints = { 'components_mask':components_mask }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SplitComponentsImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def split_components_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.SplitComponents.SplitComponentsImageFilter
    split_components_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    split_components_image_filter.__doc__ = filter_object.__doc__



