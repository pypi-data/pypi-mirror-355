[project]
name = "mcp-metricflow"
dynamic = []
description = "A Model Context Protocol (MCP) server that provides MetricFlow CLI tools"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "dbt-metricflow>=0.8.2",
    "python-dotenv>=1.1.0",
    "mcp>=1.3.2",
]
version = "1.0.0b1"

[project.license]
file = "LICENSE"

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "ruff>=0.11.0,<=0.11.10",
    "bandit>=1.8.3",
    "pre-commit>=4.2.0",
    "poethepoet>=0.34.0",
    "dbt-snowflake>=1.8.0",
]

[build-system]
requires = [
    "pdm-backend>=2.3.3",
    "setuptools-scm>=8.3.1",
]
build-backend = "pdm.backend"

[tool.pdm]
package = false

[tool.pdm.version]
source = "scm"

[tool.ruff]
line-length = 120
target-version = "py310"
extend-exclude = [
    "tests/*",
]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "I",
    "B",
    "C4",
    "UP",
    "D",
    "N",
    "ANN",
    "SIM",
    "TCH",
    "RUF",
    "PYI",
    "NPY",
    "PT",
    "PLR",
    "PLW",
    "PGH",
    "PL",
    "FLY",
    "ARG",
    "TD",
    "ERA",
]
ignore = [
    "PLR0913",
    "PLR2004",
    "ANN204",
    "ANN401",
    "PLR0911",
    "ANN002",
    "ANN003",
    "ARG004",
    "ERA001",
]
unfixable = [
    "B",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = [
    "mcp-metricflow",
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true
suppress-dummy-args = true

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.poe.tasks]
setup = "uv sync --all-extras"
setup-hooks = "pre-commit install"
format = "uv run ruff format mcp-metricflow"
lint = "uv run ruff check mcp-metricflow"
