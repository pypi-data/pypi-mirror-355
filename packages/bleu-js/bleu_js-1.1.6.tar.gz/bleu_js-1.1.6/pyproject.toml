[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.poetry]
name = "bleujs"
version = "1.1.4"
description = "Quantum-Enhanced Computer Vision System"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = ">=3.10.0,<3.12.0"
numpy = ">=1.25.0"
pennylane = "^0.34.0"
torch = ">=2.2.0"
pydantic = "^2.1.0"
pydantic-settings = "^2.1.0"
fastapi = ">=0.110.0"
email-validator = "^2.2.0"
sqlalchemy = "^2.0.0"
black = "24.1.1"
qiskit = "1.1.0"
cirq = "^1.4.1"
uvicorn = "^0.34.0"
numba = "^0.61.0"
sparse = ">=0.13.0"
alembic = "^1.13.1"
pymongo = "^4.6.1"
redis = "^5.0.1"
locust = "^2.16.1"
pdoc = "^12.3.0"
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.3"
sentry-sdk = "^1.39.1"
structlog = "^23.2.0"
scipy = "^1.10.0"
pandas = "^2.0.0"
networkx = "^3.0"
scikit-learn = "^1.2.0"
xgboost = "^3.0.0"
stripe = "^12.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.5.0"
pytest-asyncio = "^0.26.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.5.0"
bandit = "^1.7.0"
pre-commit = "^3.4.0"

[tool.poetry.group.operations]
optional = true

[tool.poetry.group.operations.dependencies]
networkx = "^3.0"
scipy = "^1.10.0"
pandas = "^2.0.0"
scikit-learn = "^1.2.0"

[tool.poetry.group.automation]
optional = true

[tool.poetry.group.automation.dependencies]
asyncio = "^3.4.3"
aiohttp = "^3.8.0"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
markers = [
    "api: marks tests as API tests",
    "ec2: marks tests as EC2 tests",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]
