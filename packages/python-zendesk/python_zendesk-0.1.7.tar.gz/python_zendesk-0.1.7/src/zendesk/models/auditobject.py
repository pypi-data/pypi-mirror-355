"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .viaobject import ViaObject, ViaObjectTypedDict
from datetime import datetime
from typing import List, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict
from zendesk.types import BaseModel


AuditObjectValueTypedDict = TypeAliasType("AuditObjectValueTypedDict", Union[str, int])


AuditObjectValue = TypeAliasType("AuditObjectValue", Union[str, int])


class EventTypedDict(TypedDict):
    body: NotRequired[str]
    field_name: NotRequired[str]
    id: NotRequired[int]
    type: NotRequired[str]
    value: NotRequired[AuditObjectValueTypedDict]


class Event(BaseModel):
    body: Optional[str] = None

    field_name: Optional[str] = None

    id: Optional[int] = None

    type: Optional[str] = None

    value: Optional[AuditObjectValue] = None


class MetadataTypedDict(TypedDict):
    pass


class Metadata(BaseModel):
    pass


class AuditObjectTypedDict(TypedDict):
    author_id: NotRequired[int]
    created_at: NotRequired[datetime]
    events: NotRequired[List[EventTypedDict]]
    id: NotRequired[int]
    metadata: NotRequired[MetadataTypedDict]
    ticket_id: NotRequired[int]
    via: NotRequired[ViaObjectTypedDict]
    r"""An object explaining how the ticket was created. See the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference)

    """


class AuditObject(BaseModel):
    author_id: Optional[int] = None

    created_at: Optional[datetime] = None

    events: Optional[List[Event]] = None

    id: Optional[int] = None

    metadata: Optional[Metadata] = None

    ticket_id: Optional[int] = None

    via: Optional[ViaObject] = None
    r"""An object explaining how the ticket was created. See the [Via object reference](/documentation/ticketing/reference-guides/via-object-reference)

    """
