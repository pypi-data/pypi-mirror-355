"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .apikeyauthentication import APIKeyAuthentication, APIKeyAuthenticationTypedDict
from .basicauthauthentication import (
    BasicAuthAuthentication,
    BasicAuthAuthenticationTypedDict,
)
from .bearertokenauthentication import (
    BearerTokenAuthentication,
    BearerTokenAuthenticationTypedDict,
)
from enum import Enum
from typing import Dict, Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict
from zendesk.types import BaseModel


class WebhookTestRequestHTTPMethod(str, Enum):
    GET = "GET"
    POST = "POST"
    PUT = "PUT"
    PATCH = "PATCH"
    DELETE = "DELETE"


class WebhookTestRequestRequestFormat(str, Enum):
    JSON = "json"
    XML = "xml"
    FORM_ENCODED = "form_encoded"


WebhookTestRequestAuthenticationTypedDict = TypeAliasType(
    "WebhookTestRequestAuthenticationTypedDict",
    Union[
        BasicAuthAuthenticationTypedDict,
        BearerTokenAuthenticationTypedDict,
        APIKeyAuthenticationTypedDict,
    ],
)


WebhookTestRequestAuthentication = TypeAliasType(
    "WebhookTestRequestAuthentication",
    Union[BasicAuthAuthentication, BearerTokenAuthentication, APIKeyAuthentication],
)


class WebhookTestRequestWebhookTypedDict(TypedDict):
    r"""Webhook configuration for testing"""

    endpoint: str
    r"""The test endpoint URL"""
    http_method: NotRequired[WebhookTestRequestHTTPMethod]
    request_format: NotRequired[WebhookTestRequestRequestFormat]
    authentication: NotRequired[WebhookTestRequestAuthenticationTypedDict]
    custom_headers: NotRequired[Dict[str, str]]


class WebhookTestRequestWebhook(BaseModel):
    r"""Webhook configuration for testing"""

    endpoint: str
    r"""The test endpoint URL"""

    http_method: Optional[WebhookTestRequestHTTPMethod] = (
        WebhookTestRequestHTTPMethod.POST
    )

    request_format: Optional[WebhookTestRequestRequestFormat] = (
        WebhookTestRequestRequestFormat.JSON
    )

    authentication: Optional[WebhookTestRequestAuthentication] = None

    custom_headers: Optional[Dict[str, str]] = None


class WebhookTestRequestTypedDict(TypedDict):
    webhook: WebhookTestRequestWebhookTypedDict
    r"""Webhook configuration for testing"""


class WebhookTestRequest(BaseModel):
    webhook: WebhookTestRequestWebhook
    r"""Webhook configuration for testing"""
