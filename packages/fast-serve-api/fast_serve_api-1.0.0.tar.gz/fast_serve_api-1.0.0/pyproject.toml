[project]
name = "fast-serve-api"
version = "1.0.0"
description = "Transform services in default endpoints integrated by FastAPI and Pydantic."
readme = "README.md"
requires-python = ">=3.10.0"
dependencies = [
    "fastapi>=0.115.12",
    "pydantic>=2.11.5",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "httpx>=0.27.0",
    "coverage>=7.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest-cov>=6.2.1",
    "ruff>=0.8.0",
]

[tool.ruff]
# Same line length as Black
line-length = 88
target-version = "py310"

# Exclude directories
exclude = [
    ".git",
    ".venv",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    "__pycache__",
    ".pytest_cache",
    ".coverage",
    "htmlcov",
]

[tool.ruff.lint]
# Enable pycodestyle (E), pyflakes (F), isort (I), and more
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "FA",   # flake8-future-annotations
    "RUF",  # Ruff-specific rules
    "PTH",  # flake8-use-pathlib
    "SIM",  # flake8-simplify
]

# Ignore specific rules
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "RUF001", # String contains ambiguous character
    "RUF002", # Docstring contains ambiguous character
    "RUF003", # Comment contains ambiguous character
]

# Allow autofix for all enabled rules
fixable = ["ALL"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"

# Unix-style line endings
line-ending = "lf"

[tool.ruff.lint.isort]
# Combine "from x import" statements on the same line
combine-as-imports = true

# Sort imports within their sections
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py files
"__init__.py" = ["F401"]

# Allow assert statements in test files
"test_*.py" = ["B011"]
"tests/*.py" = ["B011"]
