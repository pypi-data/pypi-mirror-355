<!DOCTYPE html>
<html>
	<head><meta name="format-detection" content="telephone=no,email=no,address=no">
		<title>Status</title>
		<meta http-equiv="content-type" content="text/html; charset=utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
		<link type="text/css" href="../css/func_page_layout.css" rel="stylesheet">
        <style type="text/css">
        .tableHeader_ui, .tableHeader2_ui{ border-collapse:collapse; width:728px; font-size:10pt; font-family:Arial; border: 0px red solid; min-width: 728px;}
        .tableHeader_ui table, .tableHeader2_ui table{width:728px; table-layout:fixed}
        .tableHeader_ui table td { border-left:1px #FFFFFF solid; border-right:1px #FFFFFF solid; padding:2px 2px 2px 2px; height:25px; line-height:25px; background-color:#8AD5F6; color: #666666;}
        .tableHeader2_ui table td { border:1px #FFFFFF solid; padding:2px 2px 2px 2px; height:20px; line-height:20px; background-color:#8AD5F6;}
        .tableData_ui {border:1px #FFFFFF none; overflow:auto; overflow-x:hidden; font-size:10pt; font-family:Arial; border: 0px red solid;  min-width: 728px;  width:auto; table-layout:fixed}
        .tableData_ui table{width:759px; table-layout:fixed}
        .tableData_ui table td, .tableData_ui2 table td{ padding:2px 2px 2px 2px; height:20px; line-height:20px; }
        .InputStyle {border:1px #CCCCCC solid; width:100px; margin-top:0; margin-bottom:0; float:left; height:19px; color:#666666;  padding-left:6px; height:21px; line-height:21px;}
        .swLength { width:460px; }

        html, div
        {
        	scrollbar-face-color: #8ad5f6;
	        scrollbar-3dlight-color: #8ad5f6;
         	scrollbar-highlight-color: #8ad5f6;
	        scrollbar-shadow-color: #8ad5f6;
	        scrollbar-darkshadow-color: #8ad5f6;
	        scrollbar-track-color: #BBE9FF;
	    }
		</style>

<script type="text/javascript" language="JavaScript">
var helpIcon = '../images/icon_help_contentlevel.png';

// Port Control
var CurrentPort;
var portConfigEntry = new Array();
var innArrIP = new Array();
var portCtrlOptions = '?'+parent.System0013+'?'+parent.System0024+'?'+parent.System0095_1+'?'+parent.System0096_1+'?'+parent.System0095_2+'?'+parent.System0096_2;
var portCtrlOptionsValue = '?'+parent.System0013+'?'+parent.System0024+'?'+parent.System0095_1+'?'+parent.System0096_1+'?'+parent.System0095_2+'?'+parent.System0096_2;
var flowCtrlOptions = '?'+parent.System0012+'?'+parent.System0013;
var flowCtrlOptionsValue = '?'+parent.System0012+'?'+parent.System0013;
var SelectedPortNum = 0;


var secureRand = '59236603';
var portList = 24;
portConfigEntry[0] = '1?AVM FritzBox 6890 LTE?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[1] = '2??Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[2] = '3??Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[3] = '4?PV-Anlage?Aktiv?Auto?100M?Deaktiviert';
portConfigEntry[4] = '5? Wohnzimmer?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[5] = '6? Wohnzimmer?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[6] = '7? Schlafzimmer?Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[7] = '8? Schlafzimmer?Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[8] = '9? Kuechen?Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[9] = '10? Kuechen?Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[10] = '11? Badezimmer?Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[11] = '12? Badezimmer?Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[12] = '13?Arbeitszimmer?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[13] = '14??Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[14] = '15?Waermepumpe?Aktiv?Auto?100M?Deaktiviert';
portConfigEntry[15] = '16??Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[16] = '17?APC-Smart-UPS?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[17] = '18?APC-Smart-UPS?Aktiv?Auto?100M?Deaktiviert';
portConfigEntry[18] = '19? Netgear-ReadyNAS-3138?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[19] = '20? Netgear-ReadyNAS-3138?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[20] = '21? Netgear-ReadyNAS-3138?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[21] = '22? Netgear-ReadyNAS-3138?Aktiv?Auto?1000M?Deaktiviert';
portConfigEntry[22] = '23??Inaktiv?Auto?Nicht verbunden?Deaktiviert';
portConfigEntry[23] = '24??Inaktiv?Auto?Nicht verbunden?Deaktiviert';
;
var groupNum = 8;
var lagMemEntry = new Array();
lagMemEntry[0]='1?Deaktiviert?';
lagMemEntry[1]='2?Deaktiviert?';
lagMemEntry[2]='3?Deaktiviert?';
lagMemEntry[3]='4?Deaktiviert?';
lagMemEntry[4]='5?Deaktiviert?';
lagMemEntry[5]='6?Deaktiviert?';
lagMemEntry[6]='7?Deaktiviert?';
lagMemEntry[7]='8?Deaktiviert?';

function escape2Html(str) {
 var arrEntities={'lt':'<','gt':'>','nbsp':' ','amp':'&','quot':'"','quest':"?"};
 return str.replace(/&(lt|gt|nbsp|amp|quot|quest);/ig,function(all,t){return arrEntities[t];});
}
function init()
{
    // Calculate content height
    var cheight = 0;
    cheight += document.getElementById('portStatusBlk').offsetHeight;

     // Update min-height of content
    document.getElementsByTagName('html')[0].setAttribute('style', 'overflow: auto; overflow-x: hidden; min-height: ' + cheight + 'px;');

    //var cwidth = 401;
    // Update min-width of HTML
    //window.parent.document.getElementsByTagName('html')[0].setAttribute('style', 'overflow: auto; overflow-y: hidden; min-width: ' + (cwidth + 257) + 'px;');
}

// DNI_Add_20130903
function submitForm()
{
    var ele = parent.createDivEle('emptyDiv', '', '');
    var speedSel = document.getElementById('speedSel').value;
    var flowCtrl = document.getElementById('flowCtrlSel').value;
    var description = document.getElementById('descriptionSel').value;
    var allports = 1;

    //
    if(speedSel == '' && flowCtrl == '')
    {
        parent.showDialogWithAlert(parent.System0018, parent.Message0018);
        return;
    }
    if(description != '')
    {
        if(!portDescValidCheck(description))
        {
            parent.showDialogWithAlert(parent.System0145, parent.ErrorCode0107);
            return;
        }
    }
    /* show alert when check all port disabled */
    if (speedSel == 'Disable')
    {
        for(var i=0; i<portList; i++)
        {
            if(document.getElementById('check' + (i+1)).checked == false)
            {
                allports = 0;
                break;
            }
        }

        if (allports == 1)
        {
            parent.showDialogWithAlert(parent.System0018, parent.ErrorCode0204);
            return;
        }
    }

    if(checkConfig() == 0)
    {
        return;
    }

    // Disable all check
    document.getElementById('speedSel').disabled = 'disabled';
    document.getElementById('flowCtrlSel').disabled = 'disabled';
    document.getElementById('checkAll').disabled = 'disabled';
    document.getElementById('descriptionSel').disabled = 'disabled';
    for(var i=0; i<portList; i++)
    {
        document.getElementById('check' + (i+1)).disabled = 'disabled';
    }

    if(speedSel == parent.System0013)
    {
        speedSel = 0;
    }
    else if(speedSel == parent.System0024)
    {
        speedSel = 1;
    }
    else if(speedSel == parent.System0095_1)
    {
        speedSel = 2;
    }
    else if(speedSel == parent.System0096_1)
    {
        speedSel = 3;
    }
    else if(speedSel == parent.System0095_2)
    {
        speedSel = 4;
    }
    else if(speedSel == parent.System0096_2)
    {
        speedSel = 5;
    }
    else
    {
        speedSel = 0xff;
    }

    if(flowCtrl == parent.System0012)
    {
        flowCtrl = 1;
    }
    else if(flowCtrl == parent.System0013)
    {
        flowCtrl = 0;
    }
    else
    {
        flowCtrl = 0xff;
    }

    // Create hidden input for sumission
    ele.appendChild(parent.createInputEle('speed', 'speed', 'hidden', '', speedSel, '', ''));
    ele.appendChild(parent.createInputEle('flow', 'flow', 'hidden', '', flowCtrl, '', ''));
    ele.appendChild(parent.createInputEle('description', 'description', 'hidden', '', description, '', ''));
    for(var i=0; i<portList; i++)
    {
        if(document.getElementById('check' + (i+1)).checked == true)
        {
            ele.appendChild(parent.createInputEle('port', 'port', 'hidden', '', (i+1), '', ''));
        }
    }

    document.getElementById('portStatusBlkBArea').appendChild(ele);
    document.getElementById('formArea').submit();
}
function portDescValidCheck(string)
{
    var result = 1;
    var checkName = /^[A-Za-z0-9(\ )(\~)(\!)(\@)(\#)(\$)(\%)(\^)(\&)(\*)(\()(\))(\-)(\_)(\+)(\=)(\[)(\])(\{)(\})(\|)(\\)(\;)(\:)(\')(\`)(\")(\,)(\.)(\/)(\<)(\>)(\?)(\)]+$/;

    if(!checkName.test(string))
    {
        result = 0;
    }
    return result;
}
function refreshPage()
{
    window.location.reload()
}

function checkAllPort()
{
    if(document.getElementById('checkAll').checked == true)
    {
        enableControl();

        for(var i=0; i<portList; i++)
        {
            document.getElementById('check' + (i+1)).checked = true;
        }
    }
    else
    {
        disableControl();

        for(var i=0; i<portList; i++)
        {
            document.getElementById('check' + (i+1)).checked = false;
        }
    }
}

function showTopRaw(selectedPort)
{
        /* Display on top */
    /* display port number */
    var port = parent.createDivEle('port', selectedPort, 'textLeft textMarginLeft5');
    document.getElementById('portSel').innerHTML = " ";
    document.getElementById('portSel').appendChild(port);

    /* display port status */
    var status = parent.createDivEle('status', document.getElementById('status'+selectedPort).innerHTML, 'textLeft textMarginLeft5');
    document.getElementById('StatusSel').innerHTML = " ";
    document.getElementById('StatusSel').appendChild(status);

    /* display port speed */
    document.getElementById('speedSel').value =  document.getElementById('speed'+selectedPort).innerHTML

    /* display linked port speed */
    var linkedspeed = parent.createDivEle('linkedspeed', document.getElementById('linkedspeed'+selectedPort).innerHTML, 'textLeft textMarginLeft5');
    document.getElementById('linkedSpeedSel').innerHTML = " ";
    document.getElementById('linkedSpeedSel').appendChild(linkedspeed);

    /* display flow control status */
    document.getElementById('flowCtrlSel').value =  document.getElementById('flow'+selectedPort).innerHTML

    /* display MAX MTU */
    var maxmtu = parent.createDivEle('maxmtu', document.getElementById('maxmtu'+selectedPort).innerHTML, 'textLeft textMarginLeft5');
    document.getElementById('maxmtuSel').innerHTML = " ";
    document.getElementById('maxmtuSel').appendChild(maxmtu);

    /* display port description */
    document.getElementById('descriptionSel').value =  escape2Html(document.getElementById('description'+selectedPort).innerHTML)
    document.getElementById('descriptionSel').setAttribute('maxlength', '63');
}

function clearTopRaw()
{
    document.getElementById('portSel').innerHTML = " ";
    document.getElementById('StatusSel').innerHTML = " ";
    document.getElementById('linkedSpeedSel').innerHTML = " ";
    document.getElementById('maxmtuSel').innerHTML = " ";
    document.getElementById('descriptionSel').value = " ";
    document.getElementById('speedSel').value = ""
    document.getElementById('flowCtrlSel').value = ""
}

function checkSinglePort(id)
{
    var currentPort = 0;
    var selectedPort = 0;

    /* check selected port number */
    SelectedPortNum = 0;
    for(var i=0; i<portList; i++)
    {
        currentPort = i + 1;

        if(document.getElementById('check' + currentPort).checked == true)
        {
            SelectedPortNum++;
            selectedPort = currentPort;
        }
    }

    /* check top display */
    if(SelectedPortNum == 1)
    {
        /* Display on top */
        showTopRaw(selectedPort);
    }
    else
    {
        clearTopRaw();
    }

    /* check all port */
    if(SelectedPortNum == portList)
    {
        document.getElementById('checkAll').checked = true;
    }
    else
    {
        document.getElementById('checkAll').checked = false;
    }

    /* check selected */
    if(SelectedPortNum == 0)
    {
        disableControl();
    }
    else
    {
        enableControl();
    }
}

function enableControl()
{
    // Enable button on control bar
    document.getElementById('btnApply').className = 'btnStyle';
    document.getElementById('btnApply').setAttribute('href', 'javascript:submitForm()');

    // Enable button on control bar
    document.getElementById('btnRefresh').className = 'btnStyle';
    document.getElementById('btnRefresh').setAttribute('href', 'javascript:refreshPage()');

    // Enable selector
    document.getElementById('speedSel').disabled = '';
    document.getElementById('flowCtrlSel').disabled = '';
}

function disableControl()
{
    // Disable button on control bar
    document.getElementById('btnApply').className = 'unclickbtnStyle';
    document.getElementById('btnApply').setAttribute('href', 'javascript:void(0)');

    // Disable selector
    document.getElementById('speedSel').disabled = 'disabled';
    document.getElementById('flowCtrlSel').disabled = 'disabled';
}

function checkConfig()
{
    var currentPort = 0;
    var lagMemArr, lagStatus;
    var hit = 0;

    for(var i=0; i<portList; i++)
    {
        currentPort = i + 1;

        if(document.getElementById('check' + currentPort).checked == true)
        {
            for(var j=0; j<groupNum; j++)
            {
                lagStatus = lagMemEntry[j].split('?')[1];
                lagMemArr = (lagMemEntry[j].split('?')[2]).split(',');

                for(var k=0; k<lagMemArr.length; k++)
                {
                    if(currentPort == lagMemArr[k] && lagStatus == parent.System0012)
                    {
                        hit = 1;
                        break;
                    }
                }

                if(hit == 1)
                {
                    if(document.getElementById('speedSel').value != document.getElementById('speed' + currentPort).innerHTML ||
                       document.getElementById('flowCtrlSel').value != document.getElementById('flow' + currentPort).innerHTML||
                       document.getElementById('descriptionSel').value != document.getElementById('description' + currentPort).innerHTML)
                    {
                        parent.showDialogWithAlert(parent.System0018, parent.ErrorCode0039);
                        return 0;
                    }
                    hit = 0;
                }
            }

            // No change
            if(document.getElementById('speedSel').value == document.getElementById('speed' + currentPort).innerHTML &&
               document.getElementById('flowCtrlSel').value == document.getElementById('flow' + currentPort).innerHTML &&
               document.getElementById('descriptionSel').value == document.getElementById('description' + currentPort).innerHTML)
            {
                document.getElementById('check' + currentPort).checked = false;
            }
        }
    }

    return 1;
}
</script>
</head>

<body onload="init()">
	<div id="mainContenter" class="mainContenter">
        <script type="text/javascript" language='JavaScript'>
            var data = new Array(), colWidth;

            // Create Submit form
            mainContenter.appendChild(parent.createSubmitForm('sysStatus', 'status_status.htm', secureRand));

            // Create Control Bar
            contentArea.appendChild(parent.createCtrlBar(parent.RadioButton0002+'?'+parent.RadioButton0003, 'Apply?Refresh', 'javascript:void(0)?refreshPage()'));

            // Create Port Status Block
            // Create Main Area
            contentArea.appendChild(parent.createBlkArea('portStatusBlk', parent.System0018, 'blkArea_ui'));

            // Insert help dialog
			document.getElementById('portStatusBlkHIcon').src = helpIcon;
			document.getElementById('portStatusBlkHIcon').setAttribute('style', 'width:11px; height:11px;');

			var arg = 'window.open("help.htm?from=portstatus", "_blank", "width=400, height=400")';
            document.getElementById('portStatusBlkHIcon').setAttribute('onclick', arg);

            // Insert Data
            // 1. Insert port status header table into body area
            document.getElementById('portStatusBlkBArea').appendChild(parent.createTableEle('portStatusTHeader', 'tableHeader_ui'));

            // 1.1 Insert data into table
            data = new Array();
            data[0] = parent.createInputEle('checkAll', '', 'checkbox', '', '', 'checkAllPort()', 'mTop8');
            data[1] = parent.createDivEle('portStatusDiv1', parent.System0017, 'textLeft textMarginLeft5');
            data[2] = parent.createDivEle('portStatusDiv7', parent.System0145, 'textLeft textMarginLeft5');
            data[3] = parent.createDivEle('portStatusDiv2', parent.System0018, 'textLeft textMarginLeft5');
            data[4] = parent.createDivEle('portStatusDiv3', parent.System0019, 'textLeft textMarginLeft5');
            data[5] = parent.createDivEle('portStatusDiv4', parent.System0020, 'textLeft textMarginLeft5');
            data[6] = parent.createDivEle('portStatusDiv5', parent.System0021, 'textLeft textMarginLeft5');
            data[7] = parent.createDivEle('portStatusDiv6', parent.System0146, 'textLeft textMarginLeft5');

            colWidth = '29px?50px?480px?120px?162px?210px?163px?100px';
            parent.createOneRowEle(0, document.getElementById('portStatusTHeader'), data, colWidth, 'header');

            // Insert vlan setting table header into body area
            document.getElementById('portStatusBlkBArea').appendChild(parent.createTableEle('portConfTData', 'tableHeader2_ui'));
            colWidth = '29px?50px?480px?120px?162px?210px?163px?100px';

            // 1.1 Insert data into table
            data = [];
            data[0] = parent.createDivEle('emptyDiv', '&nbsp;', '');
            data[1] = parent.createDivEle('portSel', '', '');
            data[2] = parent.createInputEle('descriptionSel', 'descriptionSel', 'text', '', '', '', 'textInputStyle swLength');
            data[3] = parent.createDivEle('StatusSel', '&nbsp;', '');
            data[4] = parent.createSelectEle('speedSel', portCtrlOptions, portCtrlOptionsValue, '', '', 'InputStyle');
            data[5] = parent.createDivEle('linkedSpeedSel', '&nbsp;', '');
            data[6] = parent.createSelectEle('flowCtrlSel', flowCtrlOptions, flowCtrlOptionsValue, '', '', 'InputStyle');
            data[7] = parent.createDivEle('maxmtuSel', '&nbsp;', '');
            parent.createOneRowEle(0, document.getElementById('portConfTData'), data, colWidth, 'borderNone');

            //
            disableControl();

            // 2. Insert port status data table into body area
            document.getElementById('portStatusBlkBArea').appendChild(parent.createTableEle('portStatusTData', 'tableData_ui'));
            colWidth = '29px?50px?480px?120px?162px?210px?163px?100px';

            // 2.1 Insert data into table
            for(var i=0; i<portList; i++)
            {
                innArrIP = portConfigEntry[i].split('?');

                data[0] = parent.createInputEle('check' + (i+1), '', 'checkbox', '', '', 'checkSinglePort(this.id)', 'mTop6');
                data[1] = parent.createDivEle('port'+ (i+1), innArrIP[0], 'textLeft textMarginLeft5');
                data[2] = parent.createDivEle('description' + (i+1), innArrIP[1], 'textLeft textMarginLeft5');
                data[3] = parent.createDivEle('status'+ (i+1), innArrIP[2], 'textLeft textMarginLeft5');
                data[4] = parent.createDivEle('speed' + (i + 1), innArrIP[3], 'textLeft textMarginLeft5');
                data[5] = parent.createDivEle('linkedspeed'+ (i+1), innArrIP[4], 'textLeft textMarginLeft5');
                data[6] = parent.createDivEle('flow' + (i + 1), innArrIP[5], 'textLeft textMarginLeft5');
                data[7] = parent.createDivEle('maxmtu' + (i+1), '9198', 'textLeft textMarginLeft5');

                if(i%2 == 0)
                {
                    parent.createOneRowEle(i, document.getElementById('portStatusTData'), data, colWidth, 'darkRow');
                }
                else
                {
                    parent.createOneRowEle(i, document.getElementById('portStatusTData'), data, colWidth, '')
                }
            }
        </script>
    </div>
</body>
</html>




