// frontend/templates/video_widget.html
var video_widget_default = '<div class="widget video-widget">\n  <video id="video">\n    <source src="" type="video/mp4" id="mp4-source" />\n    Your browser does not support video\n  </video>\n</div>\n';

// frontend/video_widget.ts
var VideoWidget = class {
  constructor({ model, el }) {
    this.model = model;
    this.el = el;
    this.el.innerHTML = video_widget_default;
    this.video = el.querySelector("#video");
    this.source = el.querySelector("#mp4-source");
    this.source.src = this.model.get("video_url");
    this.video.addEventListener("seeked", this.seeked.bind(this));
    this.video.addEventListener("play", this.played.bind(this));
    this.video.addEventListener("pause", this.paused.bind(this));
  }
  played() {
    this.model.set("is_running", true);
    this.model.set("sync_time", this.video.currentTime);
    this.model.save_changes();
  }
  paused() {
    this.model.set("is_running", false);
    this.model.set("sync_time", this.video.currentTime);
    this.model.save_changes();
  }
  seeked() {
  }
  syncTimeChanged() {
    console.log("syncTimeChanged", this.model.get("sync_time"));
    this.video.currentTime = this.model.get("sync_time");
  }
  isRunningChanged() {
    if (this.model.get("is_running")) this.video.play();
    else this.video.pause();
  }
  render() {
    this.model.on("change:sync_time", this.syncTimeChanged.bind(this));
    this.model.on("change:is_running", this.isRunningChanged.bind(this));
  }
};
var video_widget_default2 = {
  render(props) {
    const widget = new VideoWidget(props);
    widget.render();
  }
};
export {
  video_widget_default2 as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vZnJvbnRlbmQvdGVtcGxhdGVzL3ZpZGVvX3dpZGdldC5odG1sIiwgIi4uLy4uLy4uL2Zyb250ZW5kL3ZpZGVvX3dpZGdldC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiPGRpdiBjbGFzcz1cIndpZGdldCB2aWRlby13aWRnZXRcIj5cbiAgPHZpZGVvIGlkPVwidmlkZW9cIj5cbiAgICA8c291cmNlIHNyYz1cIlwiIHR5cGU9XCJ2aWRlby9tcDRcIiBpZD1cIm1wNC1zb3VyY2VcIiAvPlxuICAgIFlvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHZpZGVvXG4gIDwvdmlkZW8+XG48L2Rpdj5cbiIsICJpbXBvcnQgdHlwZSB7IEFueU1vZGVsLCBSZW5kZXJQcm9wcyB9IGZyb20gJ0Bhbnl3aWRnZXQvdHlwZXMnO1xuaW1wb3J0ICcuL3N0eWxlcy93aWRnZXQuY3NzJztcbmltcG9ydCAnLi9zdHlsZXMvdmlkZW9fd2lkZ2V0LmNzcyc7XG5pbXBvcnQgY29udHJvbFRlbXBsYXRlIGZyb20gJy4vdGVtcGxhdGVzL3ZpZGVvX3dpZGdldC5odG1sJztcblxuaW50ZXJmYWNlIFZpZGVvV2lkZ2V0TW9kZWwge1xuICBpc19ydW5uaW5nOiBib29sZWFuO1xuICBzeW5jX3RpbWU6IG51bWJlcjtcbiAgdmlkZW9fdXJsOiBzdHJpbmc7XG59XG5cbmNsYXNzIFZpZGVvV2lkZ2V0IHtcbiAgZWw6IEhUTUxFbGVtZW50O1xuICBtb2RlbDogQW55TW9kZWw8VmlkZW9XaWRnZXRNb2RlbD47XG5cbiAgdmlkZW86IEhUTUxWaWRlb0VsZW1lbnQ7XG4gIHNvdXJjZTogSFRNTFNvdXJjZUVsZW1lbnQ7XG5cbiAgY29uc3RydWN0b3IoeyBtb2RlbCwgZWwgfTogUmVuZGVyUHJvcHM8VmlkZW9XaWRnZXRNb2RlbD4pIHtcbiAgICB0aGlzLm1vZGVsID0gbW9kZWw7XG4gICAgdGhpcy5lbCA9IGVsO1xuXG4gICAgdGhpcy5lbC5pbm5lckhUTUwgPSBjb250cm9sVGVtcGxhdGU7XG4gICAgdGhpcy52aWRlbyA9IGVsLnF1ZXJ5U2VsZWN0b3IoJyN2aWRlbycpITtcbiAgICB0aGlzLnNvdXJjZSA9IGVsLnF1ZXJ5U2VsZWN0b3IoJyNtcDQtc291cmNlJykhO1xuICAgIHRoaXMuc291cmNlLnNyYyA9IHRoaXMubW9kZWwuZ2V0KCd2aWRlb191cmwnKTtcblxuICAgIHRoaXMudmlkZW8uYWRkRXZlbnRMaXN0ZW5lcignc2Vla2VkJywgdGhpcy5zZWVrZWQuYmluZCh0aGlzKSk7XG4gICAgdGhpcy52aWRlby5hZGRFdmVudExpc3RlbmVyKCdwbGF5JywgdGhpcy5wbGF5ZWQuYmluZCh0aGlzKSk7XG4gICAgdGhpcy52aWRlby5hZGRFdmVudExpc3RlbmVyKCdwYXVzZScsIHRoaXMucGF1c2VkLmJpbmQodGhpcykpO1xuICB9XG5cbiAgcGxheWVkKCkge1xuICAgIHRoaXMubW9kZWwuc2V0KCdpc19ydW5uaW5nJywgdHJ1ZSk7XG4gICAgdGhpcy5tb2RlbC5zZXQoJ3N5bmNfdGltZScsIHRoaXMudmlkZW8uY3VycmVudFRpbWUpO1xuICAgIHRoaXMubW9kZWwuc2F2ZV9jaGFuZ2VzKCk7XG4gIH1cblxuICBwYXVzZWQoKSB7XG4gICAgdGhpcy5tb2RlbC5zZXQoJ2lzX3J1bm5pbmcnLCBmYWxzZSk7XG4gICAgdGhpcy5tb2RlbC5zZXQoJ3N5bmNfdGltZScsIHRoaXMudmlkZW8uY3VycmVudFRpbWUpO1xuICAgIHRoaXMubW9kZWwuc2F2ZV9jaGFuZ2VzKCk7XG4gIH1cblxuICBzZWVrZWQoKSB7XG4gICAgLy8gVE9ETzogc2Vla2luZyBpcyBiZWluZyByZXBlYXRlZGx5IGNhbGxlZCAoaW52ZXN0aWdhdGUpXG4gICAgLy8gY29uc29sZS5sb2coJ3NlZWtlZCcpO1xuICAgIC8vIHRoaXMubW9kZWwuc2V0KCdzeW5jX3RpbWUnLCB0aGlzLnZpZGVvLmN1cnJlbnRUaW1lKTtcbiAgICAvLyB0aGlzLm1vZGVsLnNhdmVfY2hhbmdlcygpO1xuICB9XG5cbiAgc3luY1RpbWVDaGFuZ2VkKCkge1xuICAgIGNvbnNvbGUubG9nKCdzeW5jVGltZUNoYW5nZWQnLCB0aGlzLm1vZGVsLmdldCgnc3luY190aW1lJykpO1xuICAgIHRoaXMudmlkZW8uY3VycmVudFRpbWUgPSB0aGlzLm1vZGVsLmdldCgnc3luY190aW1lJyk7XG4gIH1cblxuICBpc1J1bm5pbmdDaGFuZ2VkKCkge1xuICAgIGlmICh0aGlzLm1vZGVsLmdldCgnaXNfcnVubmluZycpKSB0aGlzLnZpZGVvLnBsYXkoKTtcbiAgICBlbHNlIHRoaXMudmlkZW8ucGF1c2UoKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICB0aGlzLm1vZGVsLm9uKCdjaGFuZ2U6c3luY190aW1lJywgdGhpcy5zeW5jVGltZUNoYW5nZWQuYmluZCh0aGlzKSk7XG4gICAgdGhpcy5tb2RlbC5vbignY2hhbmdlOmlzX3J1bm5pbmcnLCB0aGlzLmlzUnVubmluZ0NoYW5nZWQuYmluZCh0aGlzKSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICByZW5kZXIocHJvcHM6IFJlbmRlclByb3BzPFZpZGVvV2lkZ2V0TW9kZWw+KSB7XG4gICAgY29uc3Qgd2lkZ2V0ID0gbmV3IFZpZGVvV2lkZ2V0KHByb3BzKTtcbiAgICB3aWRnZXQucmVuZGVyKCk7XG4gIH0sXG59O1xuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFBOzs7QUNXQSxJQUFNLGNBQU4sTUFBa0I7QUFBQSxFQU9oQixZQUFZLEVBQUUsT0FBTyxHQUFHLEdBQWtDO0FBQ3hELFNBQUssUUFBUTtBQUNiLFNBQUssS0FBSztBQUVWLFNBQUssR0FBRyxZQUFZO0FBQ3BCLFNBQUssUUFBUSxHQUFHLGNBQWMsUUFBUTtBQUN0QyxTQUFLLFNBQVMsR0FBRyxjQUFjLGFBQWE7QUFDNUMsU0FBSyxPQUFPLE1BQU0sS0FBSyxNQUFNLElBQUksV0FBVztBQUU1QyxTQUFLLE1BQU0saUJBQWlCLFVBQVUsS0FBSyxPQUFPLEtBQUssSUFBSSxDQUFDO0FBQzVELFNBQUssTUFBTSxpQkFBaUIsUUFBUSxLQUFLLE9BQU8sS0FBSyxJQUFJLENBQUM7QUFDMUQsU0FBSyxNQUFNLGlCQUFpQixTQUFTLEtBQUssT0FBTyxLQUFLLElBQUksQ0FBQztBQUFBLEVBQzdEO0FBQUEsRUFFQSxTQUFTO0FBQ1AsU0FBSyxNQUFNLElBQUksY0FBYyxJQUFJO0FBQ2pDLFNBQUssTUFBTSxJQUFJLGFBQWEsS0FBSyxNQUFNLFdBQVc7QUFDbEQsU0FBSyxNQUFNLGFBQWE7QUFBQSxFQUMxQjtBQUFBLEVBRUEsU0FBUztBQUNQLFNBQUssTUFBTSxJQUFJLGNBQWMsS0FBSztBQUNsQyxTQUFLLE1BQU0sSUFBSSxhQUFhLEtBQUssTUFBTSxXQUFXO0FBQ2xELFNBQUssTUFBTSxhQUFhO0FBQUEsRUFDMUI7QUFBQSxFQUVBLFNBQVM7QUFBQSxFQUtUO0FBQUEsRUFFQSxrQkFBa0I7QUFDaEIsWUFBUSxJQUFJLG1CQUFtQixLQUFLLE1BQU0sSUFBSSxXQUFXLENBQUM7QUFDMUQsU0FBSyxNQUFNLGNBQWMsS0FBSyxNQUFNLElBQUksV0FBVztBQUFBLEVBQ3JEO0FBQUEsRUFFQSxtQkFBbUI7QUFDakIsUUFBSSxLQUFLLE1BQU0sSUFBSSxZQUFZLEVBQUcsTUFBSyxNQUFNLEtBQUs7QUFBQSxRQUM3QyxNQUFLLE1BQU0sTUFBTTtBQUFBLEVBQ3hCO0FBQUEsRUFFQSxTQUFTO0FBQ1AsU0FBSyxNQUFNLEdBQUcsb0JBQW9CLEtBQUssZ0JBQWdCLEtBQUssSUFBSSxDQUFDO0FBQ2pFLFNBQUssTUFBTSxHQUFHLHFCQUFxQixLQUFLLGlCQUFpQixLQUFLLElBQUksQ0FBQztBQUFBLEVBQ3JFO0FBQ0Y7QUFFQSxJQUFPQSx3QkFBUTtBQUFBLEVBQ2IsT0FBTyxPQUFzQztBQUMzQyxVQUFNLFNBQVMsSUFBSSxZQUFZLEtBQUs7QUFDcEMsV0FBTyxPQUFPO0FBQUEsRUFDaEI7QUFDRjsiLAogICJuYW1lcyI6IFsidmlkZW9fd2lkZ2V0X2RlZmF1bHQiXQp9Cg==
